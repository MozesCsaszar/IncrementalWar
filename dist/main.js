/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/break_infinity.js/dist/break_infinity.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/break_infinity.js/dist/break_infinity.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var pad_end__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pad-end */ \"./node_modules/pad-end/index.js\");\n/* harmony import */ var pad_end__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pad_end__WEBPACK_IMPORTED_MODULE_0__);\nvar n=9e15,e=function(){for(var t=[],n=-323;n<=308;n++)t.push(Number(\"1e\"+n));return function(n){return t[n+323]}}(),r=function(t){return t instanceof a?t:new a(t)},i=function(t,n){return(new a).fromMantissaExponent(t,n)},o=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)};function u(t,n,e,r){var i=n.mul(e.pow(r));return a.floor(t.div(i).mul(e.sub(1)).add(1).log10()/e.log10())}function s(t,n,e,r){return n.mul(e.pow(r)).mul(a.sub(1,e.pow(t))).div(a.sub(1,e))}var a=function(){function a(t){this.mantissa=NaN,this.exponent=NaN,void 0===t?(this.m=0,this.e=0):t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):this.fromString(t)}return Object.defineProperty(a.prototype,\"m\",{get:function(){return this.mantissa},set:function(t){this.mantissa=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"e\",{get:function(){return this.exponent},set:function(t){this.exponent=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"s\",{get:function(){return this.sign()},set:function(t){if(0===t)return this.e=0,void(this.m=0);this.sgn()!==t&&(this.m=-this.m)},enumerable:!1,configurable:!0}),a.fromMantissaExponent=function(t,n){return(new a).fromMantissaExponent(t,n)},a.fromMantissaExponent_noNormalize=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)},a.fromDecimal=function(t){return(new a).fromDecimal(t)},a.fromNumber=function(t){return(new a).fromNumber(t)},a.fromString=function(t){return(new a).fromString(t)},a.fromValue=function(t){return(new a).fromValue(t)},a.fromValue_noAlloc=function(t){return t instanceof a?t:new a(t)},a.abs=function(t){return r(t).abs()},a.neg=function(t){return r(t).neg()},a.negate=function(t){return r(t).neg()},a.negated=function(t){return r(t).neg()},a.sign=function(t){return r(t).sign()},a.sgn=function(t){return r(t).sign()},a.round=function(t){return r(t).round()},a.floor=function(t){return r(t).floor()},a.ceil=function(t){return r(t).ceil()},a.trunc=function(t){return r(t).trunc()},a.add=function(t,n){return r(t).add(n)},a.plus=function(t,n){return r(t).add(n)},a.sub=function(t,n){return r(t).sub(n)},a.subtract=function(t,n){return r(t).sub(n)},a.minus=function(t,n){return r(t).sub(n)},a.mul=function(t,n){return r(t).mul(n)},a.multiply=function(t,n){return r(t).mul(n)},a.times=function(t,n){return r(t).mul(n)},a.div=function(t,n){return r(t).div(n)},a.divide=function(t,n){return r(t).div(n)},a.recip=function(t){return r(t).recip()},a.reciprocal=function(t){return r(t).recip()},a.reciprocate=function(t){return r(t).reciprocate()},a.cmp=function(t,n){return r(t).cmp(n)},a.compare=function(t,n){return r(t).cmp(n)},a.eq=function(t,n){return r(t).eq(n)},a.equals=function(t,n){return r(t).eq(n)},a.neq=function(t,n){return r(t).neq(n)},a.notEquals=function(t,n){return r(t).notEquals(n)},a.lt=function(t,n){return r(t).lt(n)},a.lte=function(t,n){return r(t).lte(n)},a.gt=function(t,n){return r(t).gt(n)},a.gte=function(t,n){return r(t).gte(n)},a.max=function(t,n){return r(t).max(n)},a.min=function(t,n){return r(t).min(n)},a.clamp=function(t,n,e){return r(t).clamp(n,e)},a.clampMin=function(t,n){return r(t).clampMin(n)},a.clampMax=function(t,n){return r(t).clampMax(n)},a.cmp_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.compare_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.eq_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.equals_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.neq_tolerance=function(t,n,e){return r(t).neq_tolerance(n,e)},a.notEquals_tolerance=function(t,n,e){return r(t).notEquals_tolerance(n,e)},a.lt_tolerance=function(t,n,e){return r(t).lt_tolerance(n,e)},a.lte_tolerance=function(t,n,e){return r(t).lte_tolerance(n,e)},a.gt_tolerance=function(t,n,e){return r(t).gt_tolerance(n,e)},a.gte_tolerance=function(t,n,e){return r(t).gte_tolerance(n,e)},a.log10=function(t){return r(t).log10()},a.absLog10=function(t){return r(t).absLog10()},a.pLog10=function(t){return r(t).pLog10()},a.log=function(t,n){return r(t).log(n)},a.log2=function(t){return r(t).log2()},a.ln=function(t){return r(t).ln()},a.logarithm=function(t,n){return r(t).logarithm(n)},a.pow10=function(t){return Number.isInteger(t)?o(1,t):i(Math.pow(10,t%1),Math.trunc(t))},a.pow=function(t,n){return\"number\"==typeof t&&10===t&&\"number\"==typeof n&&Number.isInteger(n)?o(1,n):r(t).pow(n)},a.exp=function(t){return r(t).exp()},a.sqr=function(t){return r(t).sqr()},a.sqrt=function(t){return r(t).sqrt()},a.cube=function(t){return r(t).cube()},a.cbrt=function(t){return r(t).cbrt()},a.dp=function(t){return r(t).dp()},a.decimalPlaces=function(t){return r(t).dp()},a.affordGeometricSeries=function(t,n,e,i){return u(r(t),r(n),r(e),i)},a.sumGeometricSeries=function(t,n,e,i){return s(t,r(n),r(e),i)},a.affordArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e)).sub(e.div(2)),o=i.pow(2);return i.neg().add(o.add(e.mul(t).mul(2)).sqrt()).div(e).floor()}(r(t),r(n),r(e),r(i))},a.sumArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e));return t.div(2).mul(i.mul(2).plus(t.sub(1).mul(e)))}(r(t),r(n),r(e),r(i))},a.efficiencyOfPurchase=function(t,n,e){return function(t,n,e){return t.div(n).add(t.div(e))}(r(t),r(n),r(e))},a.randomDecimalForTesting=function(t){if(20*Math.random()<1)return o(0,0);var n=10*Math.random();10*Math.random()<1&&(n=Math.round(n)),n*=Math.sign(2*Math.random()-1);var e=Math.floor(Math.random()*t*2)-t;return i(n,e)},a.prototype.normalize=function(){if(this.m>=1&&this.m<10)return this;if(0===this.m)return this.m=0,this.e=0,this;var t=Math.floor(Math.log10(Math.abs(this.m)));return this.m=-324===t?10*this.m/1e-323:this.m/e(t),this.e+=t,this},a.prototype.fromMantissaExponent=function(t,n){return isFinite(t)&&isFinite(n)?(this.m=t,this.e=n,this.normalize(),this):(t=Number.NaN,n=Number.NaN,this)},a.prototype.fromMantissaExponent_noNormalize=function(t,n){return this.m=t,this.e=n,this},a.prototype.fromDecimal=function(t){return this.m=t.m,this.e=t.e,this},a.prototype.fromNumber=function(t){return isNaN(t)?(this.m=Number.NaN,this.e=Number.NaN):t===Number.POSITIVE_INFINITY?(this.m=1,this.e=n):t===Number.NEGATIVE_INFINITY?(this.m=-1,this.e=n):0===t?(this.m=0,this.e=0):(this.e=Math.floor(Math.log10(Math.abs(t))),this.m=-324===this.e?10*t/1e-323:t/e(this.e),this.normalize()),this},a.prototype.fromString=function(t){if(-1!==t.indexOf(\"e\")){var n=t.split(\"e\");this.m=parseFloat(n[0]),this.e=parseFloat(n[1]),this.normalize()}else if(\"NaN\"===t)this.m=Number.NaN,this.e=Number.NaN;else if(this.fromNumber(parseFloat(t)),isNaN(this.m))throw Error(\"[DecimalError] Invalid argument: \"+t);return this},a.prototype.fromValue=function(t){return t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):\"string\"==typeof t?this.fromString(t):(this.m=0,this.e=0,this)},a.prototype.toNumber=function(){if(!isFinite(this.e))return Number.NaN;if(this.e>308)return this.m>0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;if(this.e<-324)return 0;if(-324===this.e)return this.m>0?5e-324:-5e-324;var t=this.m*e(this.e);if(!isFinite(t)||this.e<0)return t;var n=Math.round(t);return Math.abs(n-t)<1e-10?n:t},a.prototype.mantissaWithDecimalPlaces=function(t){if(isNaN(this.m)||isNaN(this.e))return Number.NaN;if(0===this.m)return 0;var n=t+1,e=Math.ceil(Math.log10(Math.abs(this.m))),r=Math.round(this.m*Math.pow(10,n-e))*Math.pow(10,e-n);return parseFloat(r.toFixed(Math.max(n-e,0)))},a.prototype.toString=function(){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\":this.e<21&&this.e>-7?this.toNumber().toString():this.m+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toExponential=function(e){if(isNaN(this.m)||isNaN(this.e))return\"NaN\";if(this.e>=n)return this.m>0?\"Infinity\":\"-Infinity\";if(this.e<=-n||0===this.m)return\"0\"+(e>0?pad_end__WEBPACK_IMPORTED_MODULE_0___default()(\".\",e+1,\"0\"):\"\")+\"e+0\";if(this.e>-324&&this.e<308)return this.toNumber().toExponential(e);isFinite(e)||(e=17);var r=e+1,i=Math.max(1,Math.ceil(Math.log10(Math.abs(this.m))));return(Math.round(this.m*Math.pow(10,r-i))*Math.pow(10,i-r)).toFixed(Math.max(r-i,0))+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toFixed=function(e){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\"+(e>0?pad_end__WEBPACK_IMPORTED_MODULE_0___default()(\".\",e+1,\"0\"):\"\"):this.e>=17?this.m.toString().replace(\".\",\"\").padEnd(this.e+1,\"0\")+(e>0?pad_end__WEBPACK_IMPORTED_MODULE_0___default()(\".\",e+1,\"0\"):\"\"):this.toNumber().toFixed(e)},a.prototype.toPrecision=function(t){return this.e<=-7?this.toExponential(t-1):t>this.e?this.toFixed(t-this.e-1):this.toExponential(t-1)},a.prototype.valueOf=function(){return this.toString()},a.prototype.toJSON=function(){return this.toString()},a.prototype.toStringWithDecimalPlaces=function(t){return this.toExponential(t)},a.prototype.abs=function(){return o(Math.abs(this.m),this.e)},a.prototype.neg=function(){return o(-this.m,this.e)},a.prototype.negate=function(){return this.neg()},a.prototype.negated=function(){return this.neg()},a.prototype.sign=function(){return Math.sign(this.m)},a.prototype.sgn=function(){return this.sign()},a.prototype.round=function(){return this.e<-1?new a(0):this.e<17?new a(Math.round(this.toNumber())):this},a.prototype.floor=function(){return this.e<-1?Math.sign(this.m)>=0?new a(0):new a(-1):this.e<17?new a(Math.floor(this.toNumber())):this},a.prototype.ceil=function(){return this.e<-1?Math.sign(this.m)>0?new a(1):new a(0):this.e<17?new a(Math.ceil(this.toNumber())):this},a.prototype.trunc=function(){return this.e<0?new a(0):this.e<17?new a(Math.trunc(this.toNumber())):this},a.prototype.add=function(t){var n,o,u=r(t);if(0===this.m)return u;if(0===u.m)return this;if(this.e>=u.e?(n=this,o=u):(n=u,o=this),n.e-o.e>17)return n;var s=Math.round(1e14*n.m+1e14*o.m*e(o.e-n.e));return i(s,n.e-14)},a.prototype.plus=function(t){return this.add(t)},a.prototype.sub=function(t){return this.add(r(t).neg())},a.prototype.subtract=function(t){return this.sub(t)},a.prototype.minus=function(t){return this.sub(t)},a.prototype.mul=function(t){if(\"number\"==typeof t)return t<1e307&&t>-1e307?i(this.m*t,this.e):i(1e-307*this.m*t,this.e+307);var n=\"string\"==typeof t?new a(t):t;return i(this.m*n.m,this.e+n.e)},a.prototype.multiply=function(t){return this.mul(t)},a.prototype.times=function(t){return this.mul(t)},a.prototype.div=function(t){return this.mul(r(t).recip())},a.prototype.divide=function(t){return this.div(t)},a.prototype.divideBy=function(t){return this.div(t)},a.prototype.dividedBy=function(t){return this.div(t)},a.prototype.recip=function(){return i(1/this.m,-this.e)},a.prototype.reciprocal=function(){return this.recip()},a.prototype.reciprocate=function(){return this.recip()},a.prototype.cmp=function(t){var n=r(t);if(0===this.m){if(0===n.m)return 0;if(n.m<0)return 1;if(n.m>0)return-1}if(0===n.m){if(this.m<0)return-1;if(this.m>0)return 1}if(this.m>0)return n.m<0||this.e>n.e?1:this.e<n.e?-1:this.m>n.m?1:this.m<n.m?-1:0;if(this.m<0)return n.m>0||this.e>n.e?-1:this.e<n.e||this.m>n.m?1:this.m<n.m?-1:0;throw Error(\"Unreachable code\")},a.prototype.compare=function(t){return this.cmp(t)},a.prototype.eq=function(t){var n=r(t);return this.e===n.e&&this.m===n.m},a.prototype.equals=function(t){return this.eq(t)},a.prototype.neq=function(t){return!this.eq(t)},a.prototype.notEquals=function(t){return this.neq(t)},a.prototype.lt=function(t){var n=r(t);return 0===this.m?n.m>0:0===n.m?this.m<=0:this.e===n.e?this.m<n.m:this.m>0?n.m>0&&this.e<n.e:n.m>0||this.e>n.e},a.prototype.lte=function(t){return!this.gt(t)},a.prototype.gt=function(t){var n=r(t);return 0===this.m?n.m<0:0===n.m?this.m>0:this.e===n.e?this.m>n.m:this.m>0?n.m<0||this.e>n.e:n.m<0&&this.e<n.e},a.prototype.gte=function(t){return!this.lt(t)},a.prototype.max=function(t){var n=r(t);return this.lt(n)?n:this},a.prototype.min=function(t){var n=r(t);return this.gt(n)?n:this},a.prototype.clamp=function(t,n){return this.max(t).min(n)},a.prototype.clampMin=function(t){return this.max(t)},a.prototype.clampMax=function(t){return this.min(t)},a.prototype.cmp_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)?0:this.cmp(e)},a.prototype.compare_tolerance=function(t,n){return this.cmp_tolerance(t,n)},a.prototype.eq_tolerance=function(t,n){var e=r(t);return a.lte(this.sub(e).abs(),a.max(this.abs(),e.abs()).mul(n))},a.prototype.equals_tolerance=function(t,n){return this.eq_tolerance(t,n)},a.prototype.neq_tolerance=function(t,n){return!this.eq_tolerance(t,n)},a.prototype.notEquals_tolerance=function(t,n){return this.neq_tolerance(t,n)},a.prototype.lt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.lt(e)},a.prototype.lte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.lt(e)},a.prototype.gt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.gt(e)},a.prototype.gte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.gt(e)},a.prototype.log10=function(){return this.e+Math.log10(this.m)},a.prototype.absLog10=function(){return this.e+Math.log10(Math.abs(this.m))},a.prototype.pLog10=function(){return this.m<=0||this.e<0?0:this.log10()},a.prototype.log=function(t){return Math.LN10/Math.log(t)*this.log10()},a.prototype.log2=function(){return 3.321928094887362*this.log10()},a.prototype.ln=function(){return 2.302585092994045*this.log10()},a.prototype.logarithm=function(t){return this.log(t)},a.prototype.pow=function(t){var n,e=t instanceof a?t.toNumber():t,r=this.e*e;if(Number.isSafeInteger(r)&&(n=Math.pow(this.m,e),isFinite(n)&&0!==n))return i(n,r);var o=Math.trunc(r),u=r-o;if(n=Math.pow(10,e*Math.log10(this.m)+u),isFinite(n)&&0!==n)return i(n,o);var s=a.pow10(e*this.absLog10());return-1===this.sign()?1===Math.abs(e%2)?s.neg():0===Math.abs(e%2)?s:new a(Number.NaN):s},a.prototype.pow_base=function(t){return r(t).pow(this)},a.prototype.factorial=function(){var t=this.toNumber()+1;return a.pow(t/Math.E*Math.sqrt(t*Math.sinh(1/t)+1/(810*Math.pow(t,6))),t).mul(Math.sqrt(2*Math.PI/t))},a.prototype.exp=function(){var t=this.toNumber();return-706<t&&t<709?a.fromNumber(Math.exp(t)):a.pow(Math.E,t)},a.prototype.sqr=function(){return i(Math.pow(this.m,2),2*this.e)},a.prototype.sqrt=function(){return this.m<0?new a(Number.NaN):this.e%2!=0?i(3.16227766016838*Math.sqrt(this.m),Math.floor(this.e/2)):i(Math.sqrt(this.m),Math.floor(this.e/2))},a.prototype.cube=function(){return i(Math.pow(this.m,3),3*this.e)},a.prototype.cbrt=function(){var t=1,n=this.m;n<0&&(t=-1,n=-n);var e=t*Math.pow(n,1/3),r=this.e%3;return i(1===r||-1===r?2.154434690031883*e:0!==r?4.641588833612778*e:e,Math.floor(this.e/3))},a.prototype.sinh=function(){return this.exp().sub(this.negate().exp()).div(2)},a.prototype.cosh=function(){return this.exp().add(this.negate().exp()).div(2)},a.prototype.tanh=function(){return this.sinh().div(this.cosh())},a.prototype.asinh=function(){return a.ln(this.add(this.sqr().add(1).sqrt()))},a.prototype.acosh=function(){return a.ln(this.add(this.sqr().sub(1).sqrt()))},a.prototype.atanh=function(){return this.abs().gte(1)?Number.NaN:a.ln(this.add(1).div(new a(1).sub(this)))/2},a.prototype.ascensionPenalty=function(t){return 0===t?this:this.pow(Math.pow(10,-t))},a.prototype.egg=function(){return this.add(9)},a.prototype.lessThanOrEqualTo=function(t){return this.cmp(t)<1},a.prototype.lessThan=function(t){return this.cmp(t)<0},a.prototype.greaterThanOrEqualTo=function(t){return this.cmp(t)>-1},a.prototype.greaterThan=function(t){return this.cmp(t)>0},a.prototype.decimalPlaces=function(){return this.dp()},a.prototype.dp=function(){if(!isFinite(this.mantissa))return NaN;if(this.exponent>=17)return 0;for(var t=this.mantissa,n=-this.exponent,e=1;Math.abs(Math.round(t*e)/e-t)>1e-10;)e*=10,n++;return n>0?n:0},Object.defineProperty(a,\"MAX_VALUE\",{get:function(){return h},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"MIN_VALUE\",{get:function(){return c},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MAX_VALUE\",{get:function(){return p},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MIN_VALUE\",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),h=o(1,n),c=o(1,-n),p=r(Number.MAX_VALUE),f=r(Number.MIN_VALUE);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (a);\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/break_infinity.js/dist/break_infinity.esm.js?");

        /***/
      }),

/***/ "./node_modules/pad-end/index.js":
/*!***************************************!*\
  !*** ./node_modules/pad-end/index.js ***!
  \***************************************/
/***/ ((module) => {

        eval("\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/pad-end/index.js?");

        /***/
      }),

/***/ "./src/army.ts":
/*!*********************!*\
  !*** ./src/army.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Army: () => (/* binding */ Army)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./src/data.ts\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./variables */ \"./src/variables.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n/* harmony import */ var _pages_army__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/army */ \"./src/pages/army.ts\");\n/* harmony import */ var _statistics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./statistics */ \"./src/statistics.ts\");\n\n\n\n\n\n\n\n//regular save divider = '/*/'\nclass Army {\n    constructor(creature = \"None\", weapons = [\"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\"], stats = new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats(), bodyParts = new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats(), size = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)) {\n        this.creatures = [creature];\n        this.weapons = weapons;\n        this._stats = stats;\n        this._bodyParts = bodyParts;\n        this._size = size;\n        this.level = 0;\n        this.level_bonus = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n        this.raiding = -1;\n        this.power = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n    }\n    get creature() {\n        return this.creatures[0];\n    }\n    set creature(other) {\n        this.creatures[0] = other;\n    }\n    get stats() {\n        return this._stats.mul(this.level_bonus);\n    }\n    set stats(other) {\n        this._stats = other;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get bodyParts() {\n        return this._bodyParts;\n    }\n    set bodyParts(value) {\n        this._bodyParts = value;\n    }\n    get maxWeapons() {\n        return 8;\n    }\n    //the function that decides what to do when a level up is requested\n    levelUp() {\n        if (this.level < Army.levelPrices.length && Army.levelPrices[this.level].lt(_variables__WEBPACK_IMPORTED_MODULE_3__.Player.gold)) {\n            _variables__WEBPACK_IMPORTED_MODULE_3__.Player.gold = _variables__WEBPACK_IMPORTED_MODULE_3__.Player.gold.sub(Army.levelPrices[this.level]);\n            this.levelUpHelper();\n        }\n    }\n    //the function that does the level up\n    levelUpHelper() {\n        this.level++;\n        this.level_bonus = this.level_bonus.mul(Army.level_bonuses[this.level]);\n    }\n    levelDown(toLevel) {\n        while (this.level > toLevel) {\n            this.level_bonus = this.level_bonus.div(Army.level_bonuses[this.level]);\n            this.level--;\n        }\n    }\n    getLevelUpText() {\n        this.levelUpHelper();\n        const newArmy = [this.size, this.stats, this.bodyParts];\n        this.levelDown(this.level - 1);\n        return this.getCompareText(newArmy);\n    }\n    getCompareLevelText() {\n        if (this.level >= Army.level_bonuses.length) {\n            return \"Max level reached, cannot upgrade further, sorry. :)\";\n        }\n        return \"Power multiplier: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.level_bonus) + \"<span style=\\\"color:\" +\n            (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getCompareColor)(this.level_bonus, this.level_bonus.mul(Army.level_bonuses[this.level + 1])) + \"\\\"> &rightarrow; </span>\" +\n            (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.level_bonus.mul(Army.level_bonuses[this.level + 1]));\n    }\n    //helper function to change from one item's stats to the other\n    changeStats(type, changeTo, changeIndex) {\n        switch (type) {\n            case \"creatures\":\n                if (changeTo != \"None\") {\n                    this._stats = _data__WEBPACK_IMPORTED_MODULE_2__.stuff.creatures[changeTo].stats.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n                    this._bodyParts = _data__WEBPACK_IMPORTED_MODULE_2__.stuff.creatures[changeTo].bodyParts.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n                }\n                else {\n                    this.stats = this._stats.sub(_data__WEBPACK_IMPORTED_MODULE_2__.stuff.creatures[this.creature].stats);\n                    this._bodyParts = this._bodyParts.sub(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this.creature].bodyParts);\n                }\n                break;\n            case \"weapons\":\n                if (this[type][changeIndex] != \"None\") {\n                    this._stats = this._stats.sub(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this[type][changeIndex]].stats);\n                    this._bodyParts = this._bodyParts.sub(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this[type][changeIndex]].bodyParts);\n                }\n                if (changeTo != \"None\") {\n                    this._stats = this._stats.add(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][changeTo].stats);\n                    this._bodyParts = this._bodyParts.add(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][changeTo].bodyParts);\n                }\n                break;\n        }\n    }\n    //REVAMP FROM HERE\n    changeElement(type, changeTo, changeIndex = 0, unlockStuff = true, armyNr) {\n        //if we are talking about a creature, then the change is big\n        switch (type) {\n            case \"creatures\":\n                //reset the size of the army\n                this.setSize(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n                //and remove elements and refund their costs\n                for (let i = this.weapons.length - 1; i > -1; i--) {\n                    this.changeElement(\"weapons\", \"None\", i, unlockStuff, armyNr);\n                }\n                //change stats from old to new\n                this.changeStats(type, changeTo, changeIndex);\n                //Deequip creature from army\n                _pages_army__WEBPACK_IMPORTED_MODULE_5__.ArmyPage.deequipElementByArmy(type, this.creature, armyNr);\n                //change the stats of the army\n                this.creature = changeTo;\n                //equip on ArmyPage\n                _pages_army__WEBPACK_IMPORTED_MODULE_5__.ArmyPage.equipElementByArmy(type, changeTo, armyNr);\n                break;\n            case \"weapons\":\n                if (!this.changeElementHelper(\"weapons\", changeTo, changeIndex, unlockStuff, armyNr)) {\n                    console.log(\"here\");\n                    return false;\n                }\n                break;\n        }\n        //send unlock request after change\n        if (unlockStuff) {\n            _statistics__WEBPACK_IMPORTED_MODULE_6__.allThingsStatistics.setStatisticsToMax([\"Player\", \"armies\", _pages_army__WEBPACK_IMPORTED_MODULE_5__.ArmyPage.currentArmy + \"\", \"Attack\"], this.stats.get(\"Attack\").getPlainPower());\n            _statistics__WEBPACK_IMPORTED_MODULE_6__.allThingsStatistics.setStatisticsToMax([\"Player\", \"armies\", \"all\", \"Attack\"], this.stats.get(\"Attack\").getPlainPower());\n        }\n        return true;\n    }\n    //CHANGE STUFF TO WORK FOR EVERYTHING TOGETHER, NOT CREATURES AND OTHER STUFF TREATED AS DIFFERENT CASES\n    canChangeElement(type, element, index) {\n        if (type == \"creatures\" || element == \"None\") {\n            return true;\n        }\n        else {\n            let tempS = undefined;\n            let tempB = undefined;\n            if (this[type][index] != \"None\") {\n                this._stats = this._stats.sub(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this[type][index]].stats);\n                this._bodyParts = this._bodyParts.sub(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this[type][index]].bodyParts);\n                tempS = this.stats;\n                tempB = this.bodyParts;\n                this._stats = this._stats.add(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this[type][index]].stats);\n                this._bodyParts = this._bodyParts.add(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][this[type][index]].bodyParts);\n            }\n            else {\n                tempS = this.stats;\n                tempB = this.bodyParts;\n            }\n            if (tempB.add(_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][element].bodyParts).gte(0)) {\n                if (_data__WEBPACK_IMPORTED_MODULE_2__.stuff[type][element].requires.lte(tempS)) {\n                    if (tempS.get(\"Health\").gt(0)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n    //helps to change the stuff that is not creature in your army\n    changeElementHelper(type, changeTo, changeIndex = 0, do_shift = true, armyNr = 0) {\n        if (!this.canChangeElement(type, changeTo, changeIndex)) {\n            return false;\n        }\n        if (this[type][changeIndex] != \"None\") {\n            _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][this[type][changeIndex]] = _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][this[type][changeIndex]].add(this.size);\n        }\n        //change stats from old to new\n        this.changeStats(type, changeTo, changeIndex);\n        //Deequip element from army\n        _pages_army__WEBPACK_IMPORTED_MODULE_5__.ArmyPage.deequipElementByArmy(type, this[type][changeIndex], armyNr);\n        //add in the new one\n        this[type][changeIndex] = changeTo;\n        //equip element in army\n        _pages_army__WEBPACK_IMPORTED_MODULE_5__.ArmyPage.equipElementByArmy(type, changeTo, armyNr);\n        //maybe display (/ remove the ones you cannot) just the ones you can use (handcount and the stuff)\n        if (changeTo != \"None\") {\n            //set new size of the army to if the number of this item is less than the size of the army min(size, number of new item)\n            _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][changeTo] = _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][changeTo].sub(this.size);\n            if (this.size > _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][changeTo]) {\n                this.setSize(this.size.add(_variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][changeTo]));\n            }\n        }\n        //if changed to 'None' and weapon shifting is necessary\n        else if (changeTo == \"None\" && do_shift) {\n            let i = changeIndex;\n            //shift the elements to the left by one unit\n            while (i < this.maxWeapons - 1 && this[type][i + 1] != \"None\") {\n                this[type][i] = this[type][i + 1];\n                this[type][i + 1] = \"None\";\n                i++;\n            }\n        }\n        return true;\n    }\n    setSize(newSize) {\n        //if the creature is 'None', then there can be no army\n        if (this.creature == \"None\" || newSize.lt(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0))) {\n            return;\n        }\n        //calculate the minimun of the elements which are available\n        let minn = (newSize.sub(this.size)).min(_variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory.creatures[this.creature]);\n        let i = 0;\n        while (this.weapons[i] != \"None\") {\n            minn = minn.min(_variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory.weapons[this.weapons[i]]);\n            i++;\n        }\n        //set new size\n        this.size = minn.add(this.size);\n        //set new values for the inventory of items used\n        _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory.creatures[this.creature] = _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory.creatures[this.creature].sub(minn);\n        i = 0;\n        while (this.weapons[i] != \"None\") {\n            _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory.weapons[this.weapons[i]] = _variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory.weapons[this.weapons[i]].sub(minn);\n            i++;\n        }\n        //give visual feedback on what you have here\n        _pages_army__WEBPACK_IMPORTED_MODULE_5__.ArmyPage.armySizeInput.value = (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.size, true);\n    }\n    getStatsText() {\n        return this.stats.getText() + \"<br>\" + this.bodyParts.getText(true);\n    }\n    getChangeText(type, changeTo, changeIndex = 0) {\n        //if you reset your creature, show this text\n        let changed = undefined;\n        if (type == \"creatures\") {\n            if (changeTo == \"None\") {\n                return \"You would dismantle your army with this action.\";\n            }\n            changed = this.creature;\n        }\n        else {\n            changed = this[type][changeIndex];\n        }\n        //let size = this._size;\n        //change element then change it back to view changes\n        if (this.canChangeElement(type, changeTo, changeIndex)) {\n            let newArmy;\n            switch (type) {\n                case \"creatures\":\n                    this.changeStats(type, changeTo, changeIndex);\n                    this.creature = changeTo;\n                    newArmy = [this.size.min(_variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][changeTo]), this.stats, this.bodyParts];\n                    this.changeStats(type, changed, changeIndex);\n                    this.creature = changed;\n                    break;\n                case \"weapons\":\n                    this.changeStats(type, changeTo, changeIndex);\n                    this[type][changeIndex] = changeTo;\n                    newArmy = [this.size.min(_variables__WEBPACK_IMPORTED_MODULE_3__.Player.inventory[type][changeTo]), this.stats, this.bodyParts];\n                    this.changeStats(type, changed, changeIndex);\n                    this[type][changeIndex] = changed;\n                    break;\n            }\n            return this.getCompareText(newArmy);\n        }\n        return \"Cannot change this element of your army, sorry!\";\n    }\n    //helper function to getChangeText\n    getCompareText(newArmy) {\n        if (!Array.isArray(newArmy)) {\n            newArmy = [newArmy.size, newArmy.stats, newArmy.bodyParts];\n        }\n        let text = \"Size: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.size, true) + \"<span style=\\\"color:\" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getCompareColor)(this.size, newArmy[0]) + \";\\\"> &rightarrow; </span>\" +\n            (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(newArmy[0], true) + \"<br>\";\n        text += this.stats.getCompareText(newArmy[1]) + \"<br>\";\n        text += this.bodyParts.getCompareText(newArmy[2]);\n        return text;\n    }\n    getText(with_size = false) {\n        if (this.creature == \"None\") {\n            return \"An army without a creature is nothing. You can't fight with it, nor do anything with it. Just sayin'. So please buy some creatures and make an army with them before anything else.\";\n        }\n        let text = \"\";\n        if (with_size == true) {\n            text = \"Army size: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.size, true) + \"<br>\";\n        }\n        else {\n            text += \"<br>\";\n        }\n        text += this.getStatsText() + \"<br>\";\n        return text;\n    }\n    getFightingStatsText() {\n        if (this.creature == \"None\") {\n            return \"No army to be seen here.\";\n        }\n        let text = \"\";\n        text = \"Army size: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.size, true) + \"<br>\";\n        text += \"Collective health: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.size.mul(this.stats.get(\"Health\")), true) + \"<br>\";\n        text += this.stats.getText();\n        return text;\n    }\n    save() {\n        //  save the components of the army\n        //save the creature\n        let saveText = this.creature + \"/*/\";\n        //save the weapons\n        saveText += this.weapons.length;\n        for (let i = 0; i < this.weapons.length; i++) {\n            saveText += \"/*/\" + this.weapons[i];\n        }\n        //  save the size\n        saveText += \"/*/\" + this._size;\n        //save the tower level which this army is raiding\n        saveText += \"/*/\" + this.raiding;\n        saveText += \"/*/\" + this.level + \"/*/\" + this.level_bonus;\n        return saveText;\n    }\n    load(saveText, i = 0, armyNr = 0) {\n        //split the text by the '/*/'\n        const saveTextArr = saveText.split(\"/*/\");\n        //  load the components of the army\n        //load the creature\n        this.changeElement(\"creatures\", saveTextArr[i], 0, false, armyNr);\n        i++;\n        let j = Number(saveTextArr[i]);\n        i++;\n        let k = 0;\n        //load the weapons\n        while (j > 0) {\n            this.changeStats(\"weapons\", saveTextArr[i], k);\n            this.weapons[k] = saveTextArr[i];\n            j--;\n            i++;\n            k++;\n        }\n        //  load the size\n        this.size = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveTextArr[i]);\n        i++;\n        this.raiding = Number(saveTextArr[i]);\n        i++;\n        this.level = Number(saveTextArr[i]);\n        i++;\n        this.level_bonus = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveTextArr[i]);\n        i++;\n        return i;\n    }\n}\nArmy.level_bonuses = [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.1), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.2), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.3), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.5), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.7), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2)];\nArmy.levelPrices = [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](6000), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](15000), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](50000), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](175000), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"1e6\")];\n\n\n//# sourceURL=webpack://my-webpack-project/./src/army.ts?");

        /***/
      }),

/***/ "./src/army_comps.ts":
/*!***************************!*\
  !*** ./src/army_comps.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArmyComponent: () => (/* binding */ ArmyComponent)\n/* harmony export */ });\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n\nclass ArmyComponent {\n    constructor(name = \"None\", desc = \"None\", stats = new _stats__WEBPACK_IMPORTED_MODULE_0__.Stats(), bodyParts = new _stats__WEBPACK_IMPORTED_MODULE_0__.Stats(), requires = new _stats__WEBPACK_IMPORTED_MODULE_0__.Stats(), type = \"Creature\", priceHandler = new _stats__WEBPACK_IMPORTED_MODULE_0__.PriceHandler()) {\n        this.name = name;\n        this.desc = desc;\n        this.stats = stats;\n        this.requires = requires;\n        this.type = type;\n        this.priceHandler = priceHandler;\n        this._bodyParts = bodyParts;\n    }\n    get bodyParts() {\n        return this._bodyParts;\n    }\n    getPrice(nrOwned, toBuy) {\n        return this.priceHandler.getPrice(nrOwned, toBuy);\n    }\n    getCompareText(other) {\n        return \"Name: \" + this.name + \" → \" + other.name + \"<br>\" +\n            this.stats.getCompareText(other.stats) +\n            (this.requires.isNull() ? \"\" : \"<br>\" + \"Requires:<br>\" + this.requires.getCompareText(other.requires));\n    }\n    getFullText() {\n        return \"<b>Name: \" + this.name + \"</b><br>\" +\n            this.stats.getText() +\n            \"<br>\" +\n            (this._bodyParts.isNull() ? \"\" : \"Parts:<br>\" + this.bodyParts.getText()) +\n            (this.requires.isNull() ? \"\" : \"Requires:<br>\" + this.requires.getText()) +\n            \"<br><i>\" + this.desc + \"</i>\";\n    }\n    getText() {\n        return \"<b>Name: \" + this.name + \"</b><br>\" +\n            this.stats.getText() +\n            \"<br>\" +\n            (this._bodyParts.isNull() ? \"\" : \"Parts:<br>\" + this.bodyParts.getText()) + \"<br>\" +\n            (this.requires.isNull() ? \"\" : \"Requires:<br>\" + this.requires.getText()) +\n            \"<br><i>\" + this.desc + \"</i>\";\n    }\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/army_comps.ts?");

        /***/
      }),

/***/ "./src/base_classes.ts":
/*!*****************************!*\
  !*** ./src/base_classes.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ButtonGroupClass: () => (/* binding */ ButtonGroupClass),\n/* harmony export */   Fight: () => (/* binding */ Fight),\n/* harmony export */   HashLike: () => (/* binding */ HashLike),\n/* harmony export */   ItemListClass: () => (/* binding */ ItemListClass),\n/* harmony export */   PageClass: () => (/* binding */ PageClass)\n/* harmony export */ });\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n\n//Provides get and set methods\nclass HashLike {\n    get(key) {\n        return this[key];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    set(key, value) {\n        this[key] = value;\n    }\n}\n/*\n    bosses - the names of the bosses from stuff which you need to fight\n    maxSelectibleArmies - max number of armies the player can bring to the fight\n    loseSoldiers - true if you lose soldiers based on the soldierLossRatio of the boss you are fighting\n                    false if you don't lose soldiers no matter what\n*/\nclass Fight {\n    constructor(bosses = [], maxSelectibleArmies, loseSoldiers) {\n        this.bosses = bosses;\n        this.maxSelectibleArmies = maxSelectibleArmies;\n        this.loseSoldiers = loseSoldiers;\n        //initialize selected armies\n        this.selectedArmies = [];\n        for (let i = 0; i < maxSelectibleArmies; i++) {\n            this.selectedArmies.push(-1);\n        }\n    }\n}\n//A base Page class which has all the functions and values necessary for it to work\nclass PageClass {\n    constructor(name) {\n        this.name = name;\n        this.container = $(name + 'Container').get(0);\n        this.timesVisited = 0;\n        //call initializeEventListeners here\n    }\n    //functions to hide/show page by containers hidden value to make use easier\n    get hidden() {\n        return this.container.hidden;\n    }\n    set hidden(val) {\n        this.container.hidden = val;\n    }\n    //called when page reloads\n    initializeEventListeners() { }\n    //called when new save gets loaded\n    displayOnLoad() { }\n    //called when page gets visible\n    display() { }\n    //call when displaying every tick; needs this as self so that it can access stuff in itself\n    displayEveryTick() { }\n    //called when a save text is needed\n    save() {\n        return String(this.timesVisited);\n    }\n    //called when you need to get values from a saveText\n    //maybe should call displayOnLoad?\n    //returns the number of steps taken\n    load(saveText) {\n        this.timesVisited = Number(saveText[0]);\n        return 1;\n    }\n}\n;\nclass ItemListClass {\n    //container: the container thisect, list_identifier: the identifier by which you can find the list container, the rest will be handled automatically\n    constructor(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList = []) {\n        this.container = $(containerIdentifier).get(0);\n        this.elements = $(containerIdentifier + ' > ' + elementIdentifier).toArray();\n        //for hiding elements and defining if the element is hidden or not\n        this.elementsVisible = [];\n        for (let i = 0; i < this.elements.length; i++) {\n            this.elementsVisible.push(true);\n        }\n        const prevButtonId = containerIdentifier + ' > .element_list_buttons_container > ' + previousButtonIdentifier;\n        const backButtonId = containerIdentifier + ' > .element_list_buttons_container > ' + backButtonIdentifier;\n        const nextButtonId = containerIdentifier + ' > .element_list_buttons_container > ' + next_buttonIdentifier;\n        this.previousButton = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(prevButtonId);\n        this.backButton = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(backButtonId);\n        this.nextButton = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(nextButtonId);\n        this.buttonsVisible = [true, true, true];\n        this.itemList = itemList;\n        this.page = 0;\n        this.initializeEventListeners();\n    }\n    get hidden() {\n        return this.container.hidden;\n    }\n    initializeEventListeners() {\n        //item mouse functions (basically call ItemListClass functions for elements that are visible)\n        for (let i = 0; i < this.elements.length; i++) {\n            this.elements[i].addEventListener('mouseenter', () => {\n                if (this.elementsVisible[i]) {\n                    this.elementMouseenter(i);\n                }\n            });\n            this.elements[i].addEventListener('mouseleave', () => {\n                if (this.elementsVisible[i]) {\n                    this.elementMouseleave(i);\n                }\n            });\n            this.elements[i].addEventListener('click', () => {\n                if (this.elementsVisible[i]) {\n                    this.elementClick(i);\n                }\n            });\n        }\n        this.previousButton.addEventListener('click', () => {\n            if (this.buttonsVisible[0]) {\n                this.previousButtonClick();\n            }\n        });\n        this.backButton.addEventListener('mouseenter', () => {\n            if (this.buttonsVisible[1]) {\n                this.backButtonMouseenter();\n            }\n        });\n        this.backButton.addEventListener('mouseleave', () => {\n            if (this.buttonsVisible[1]) {\n                this.backButtonMouseleave();\n            }\n        });\n        this.backButton.addEventListener('click', () => {\n            if (this.buttonsVisible[1]) {\n                this.backButtonClick();\n            }\n        });\n        this.nextButton.addEventListener('click', () => {\n            if (this.buttonsVisible[2]) {\n                this.nextButtonClick();\n            }\n        });\n    }\n    //calculates and returns the item's list index based on the current element and the current page\n    getItemListIndex(elemNr) {\n        return this.page * this.elements.length + elemNr;\n    }\n    changeItemList(itemList) {\n        this.itemList = itemList;\n    }\n    changePage(pageNr) {\n        this.page = pageNr;\n        for (let i = 0; i < this.elements.length; i++) {\n            //if index is alright, populate and display element\n            if (this.getItemListIndex(i) < this.itemList.length) {\n                this.populateElement(i);\n                this.showElement(i);\n            }\n            //else hide it\n            else {\n                this.hideElement(i);\n            }\n        }\n        this.showHidePreviousNextButton();\n    }\n    //reset the list to page 0 and show it again\n    reset() {\n        this.page = 0;\n        this.changePage(0);\n    }\n    //show and hide list\n    show(doReset) {\n        if (doReset) {\n            this.reset();\n        }\n        this.container.hidden = false;\n    }\n    hide() {\n        this.container.hidden = true;\n    }\n    //mouse events for individual elements on the list\n    elementMouseenter(elemNr) { }\n    elementMouseleave(elemNr) { }\n    elementClick(elemNr) { }\n    //show/hide an element (can be done by using hidden, just disabling border and innerHTML = '' or anything else)\n    showElement(elemNr) {\n        this.elementsVisible[elemNr] = true;\n        this.elements[elemNr].style.cursor = 'pointer';\n    }\n    hideElement(elemNr) {\n        this.elementsVisible[elemNr] = false;\n        this.elements[elemNr].style.cursor = 'default';\n    }\n    //populate an element with data\n    populateElement(elemNr) { }\n    //back button events\n    backButtonMouseenter() { }\n    backButtonMouseleave() { }\n    hideBackButton() {\n        this.buttonsVisible[1] = false;\n    }\n    showBackButton() {\n        this.buttonsVisible[1] = true;\n    }\n    backButtonClick() {\n        //just hide the back button\n        this.hide();\n    }\n    //previous and next item list page button click event\n    hidePreviousButton() {\n        this.previousButton.style.cursor = 'default';\n        this.buttonsVisible[0] = false;\n    }\n    showPreviousButton() {\n        this.previousButton.style.cursor = 'pointer';\n        this.buttonsVisible[0] = true;\n    }\n    previousButtonClick() {\n        if (this.page > 0) {\n            this.changePage(this.page - 1);\n        }\n        this.showHidePreviousNextButton();\n    }\n    hideNextButton() {\n        this.nextButton.style.cursor = 'default';\n        this.buttonsVisible[2] = false;\n    }\n    showNextButton() {\n        this.nextButton.style.cursor = 'pointer';\n        this.buttonsVisible[0] = true;\n    }\n    nextButtonClick() {\n        if ((this.page + 1) * this.elements.length < this.itemList.length) {\n            this.changePage(this.page + 1);\n        }\n        this.showHidePreviousNextButton();\n    }\n    //handle hidden/visible states for previous and next button\n    showHidePreviousNextButton() {\n        //show previous button if there is a page to go back\n        if (this.page > 0) {\n            this.showPreviousButton();\n        }\n        //else hide previous button\n        else {\n            this.hidePreviousButton();\n        }\n        //show next page button if there is a page to go forwards to\n        if ((this.page + 1) * this.elements.length < this.itemList.length) {\n            this.showNextButton();\n        }\n        //else just hide it\n        else {\n            this.hideNextButton();\n        }\n    }\n}\n;\n//style is an thisect with keys naming the style thisect(like borderColor, width etc.) and value is the value it needs to be substituted with\nclass ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle) {\n        this.container = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(containerIdentifier);\n        this.buttons = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElementList)(containerIdentifier + ' > ' + buttonIdentifier);\n        this.selected = 0;\n        this.buttonsVisible = [];\n        for (let i = 0; i < this.buttons.length; i++) {\n            this.buttonsVisible.push(true);\n        }\n        this.selectedStyle = selectedStyle;\n        this.defaultStyle = defaultStyle;\n        this.initializeEventListeners();\n    }\n    get hidden() {\n        return this.container.hidden;\n    }\n    set hidden(val) {\n        this.container.hidden = val;\n    }\n    initializeEventListeners() {\n        //button mouse events\n        for (let i = 0; i < this.buttons.length; i++) {\n            this.buttons[i].addEventListener('mouseenter', () => {\n                if (this.buttonsVisible[i]) {\n                    this.buttonMouseenter(i);\n                }\n            });\n            this.buttons[i].addEventListener('mouseleave', () => {\n                if (this.buttonsVisible[i]) {\n                    this.buttonMouseleave(i);\n                }\n            });\n            this.buttons[i].addEventListener('click', () => {\n                if (this.buttonsVisible[i]) {\n                    this.buttonClick(i);\n                }\n            });\n        }\n    }\n    buttonMouseenter(buttonNr) { }\n    buttonMouseleave(buttonNr) { }\n    selectButton(buttonNr) {\n        for (let key in this.selectedStyle) {\n            // this.buttons[buttonNr].style[key as keyof CSSStyleDeclaration] = this.selectedStyle[key as keyof Object];\n        }\n        this.selected = buttonNr;\n    }\n    buttonClick(buttonNr) {\n        if (buttonNr != this.selected) {\n            //restore previously selected to default appearance\n            // for (let [key, value] of Object.entries(this.defaultStyle)) {\n            //   this.buttons[this.selected].style[key] = value;\n            // }\n            //change newly selected to selected appearance\n            this.selectButton(buttonNr);\n        }\n    }\n    showButton(buttonNr) {\n        this.buttonsVisible[buttonNr] = true;\n    }\n    hideButton(buttonNr) {\n        this.buttonsVisible[buttonNr] = false;\n    }\n    //returns save text in which the state of the buttons was saved\n    save() {\n        let saveText = String(this.selected);\n        return saveText;\n    }\n    //will load itself from saveText, starting at index i\n    //returns number of steps taken (fields used) in saveText\n    load(saveText, i) {\n        this.selected = Number(saveText[i]) == 0 ? 1 : 0;\n        this.buttonClick(Number(saveText[i]));\n        return 1;\n    }\n    //functions to show/hide the button group\n    show() {\n        this.container.hidden = false;\n    }\n    hide() {\n        this.container.hidden = true;\n    }\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/base_classes.ts?");

        /***/
      }),

/***/ "./src/boss.ts":
/*!*********************!*\
  !*** ./src/boss.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AttackDefenseMove: () => (/* binding */ AttackDefenseMove),\n/* harmony export */   AttackMove: () => (/* binding */ AttackMove),\n/* harmony export */   Boss: () => (/* binding */ Boss),\n/* harmony export */   DefenseMove: () => (/* binding */ DefenseMove),\n/* harmony export */   FightingArmy: () => (/* binding */ FightingArmy),\n/* harmony export */   FightingBoss: () => (/* binding */ FightingBoss),\n/* harmony export */   FightingUnit: () => (/* binding */ FightingUnit),\n/* harmony export */   HealMove: () => (/* binding */ HealMove),\n/* harmony export */   Moveset: () => (/* binding */ Moveset)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pages/boss/fighting */ \"./src/pages/boss/fighting.ts\");\n\n\n\nclass CombatMove {\n    constructor(name, desc) {\n        this.name = name;\n        this.desc = desc;\n    }\n    modifyStats(stats) {\n        return stats;\n    }\n}\n//A move that only modifies the 'Attack' value of one or more stats thisect(s)\nclass AttackMove extends CombatMove {\n    constructor(name, desc, modifiers = [], modifierTypes = [], targets = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1)) {\n        super(name, desc);\n        this.modifiers = modifiers;\n        this.modifierTypes = modifierTypes;\n        this.attackTargets = targets;\n    }\n    modifyStats(stats) {\n        stats = stats.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n        for (let i = 0; i < this.modifierTypes.length; i++) {\n            const func = stats.get(\"Attack\").get(this.modifierTypes[i]);\n            stats.set(\"Attack\", func(this.modifiers[i]));\n        }\n        stats.set(\"Attack\", stats.get(\"Attack\"));\n        return stats;\n    }\n}\n//A move that only modifies the 'Defense' value of one or more stats thisect(s)\nclass DefenseMove extends CombatMove {\n    constructor(name, desc, modifiers = [], modifierTypes = [], targets = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1)) {\n        super(name, desc);\n        this.modifiers = modifiers;\n        this.modifierTypes = modifierTypes;\n        this.defenseTargets = targets;\n    }\n    modifyStats(stats) {\n        stats = stats.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n        for (let i = 0; i < this.modifierTypes.length; i++) {\n            const func = stats.get(\"Defense\").get(this.modifierTypes[i]);\n            stats.set(\"Defense\", func(this.modifiers[i]));\n        }\n        return stats;\n    }\n}\n//A move that only modifies the 'Healht' value of one or more stats thisect(s)\nclass HealMove extends CombatMove {\n}\n//A move that executes a combination of the above\nclass AttackDefenseMove extends CombatMove {\n    constructor(name, desc, moves = []) {\n        super(name, desc);\n        this.moves = moves;\n        this.attackTargets = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        this.defenseTargets = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        //get attack and defense targets\n        for (let i = 0; i < this.moves.length; i++) {\n            if (this.moves[i] instanceof AttackMove) {\n                this.attackTargets = this.attackTargets.add(this.moves[i].attackTargets);\n            }\n            else if (this.moves[i] instanceof DefenseMove) {\n                this.defenseTargets = this.defenseTargets.add(this.moves[i].defenseTargets);\n            }\n        }\n    }\n    modifyStats(stats) {\n        for (let i = 0; i < this.moves.length; i++) {\n            stats = this.moves[i].modifyStats(stats);\n        }\n        return stats;\n    }\n}\n//A class that stores Moves with rarity and priority and will choose the apropriate one\n/*\n    How priorities and rarities work:\n        -rarities can be Common (0), Uncommon(1), Rare(2), Special(3) and Ultra Rare(4)\n        -each rarity has a 1/2^m chance to be chosen (a random choosing between 1 and 2^n will happen, log_2(rand).floor()\n         will be the rarity of the move used)\n        -then a move is gotten randomly from the selection\n    Please provide moves as a layered array!\n*/\nclass Moveset {\n    constructor(moves = [[]]) {\n        this.moves = moves;\n        this.currentMove = undefined;\n        this.currentMovePlace = [-1, -1];\n    }\n    getMove() {\n        const rarity = this.moves.length - 1 - Math.floor(Math.log2(1 + Math.floor(Math.random() * (2 ** this.moves.length - 1))));\n        const move_nr = Math.floor(Math.random() * this.moves[rarity].length);\n        this.currentMove = this.moves[rarity][move_nr];\n        this.currentMovePlace = [rarity, move_nr];\n        return this.currentMove;\n    }\n    getCurrentMoveName() {\n        return this.getMoveName(...this.currentMovePlace);\n    }\n    getMoveName(rarity, move_nr) {\n        return Moveset.nameTextStart + Moveset.rarityColors[rarity] + Moveset.colorSpanEnd + this.moves[rarity][move_nr].name + \" (\" +\n            Moveset.moveRarities[rarity] + \")\" + Moveset.nameTextEnd;\n    }\n    getMove_description(rarity, move_nr) {\n        return this.moves[rarity][move_nr].desc;\n    }\n}\nMoveset.nameTextStart = \"<span style=\\\"color:\";\nMoveset.moveRarities = { 0: \"Common\", 1: \"Uncommon\", 2: \"Rare\", 3: \"Special\", 4: \"Super\", 5: \"Ultra\" };\nMoveset.rarityColors = { 0: \"aliceblue\", 1: \"#20d000\", 2: \"#4848ff\", 3: \"#b000b0\", 4: \"#FF0000\", 5: \"#FF0000\" };\nMoveset.colorSpanEnd = \"\\\">\";\nMoveset.nameTextEnd = \"</span>\";\n/*\n    Boss types:\n        -Mini, Normal\n    Boss soldierLossRatio:\n        0 - no soldier lost, 1 - all soldies who are wounded (no Health at the end of fight) are lost,\n        (0, 1) - a percentage of wounded soldiers lost\n*/\n//used for boss and miniboss fights\nclass Boss {\n    constructor(name, desc, stats, type, soldierLossRatio, moveset) {\n        this.stats = stats;\n        this.name = name;\n        this.desc = desc;\n        this.type = type;\n        this.soldierLossRatio = soldierLossRatio;\n        this.attaksPerSecond = 1;\n        this.size = 100;\n        this.moveset = moveset;\n    }\n    attack() {\n        return this.stats.get(\"Attack\");\n    }\n    getText() {\n        let t = \"<b>\" + this.name + \"</b><br>\" +\n            \"<i>\" + this.type + \"</i><br><br>\" +\n            this.stats.getText() + \"<br>\" +\n            \"Attacks/sec: \" + this.attaksPerSecond + \"<br>\" +\n            \"Size: \" + this.size + \"<br>\" +\n            \"Moves: \";\n        for (let i = 0; i < this.moveset.moves.length; i++) {\n            for (let j = 0; j < this.moveset.moves[i].length; j++) {\n                if (i != 0 || j != 0) {\n                    t += \", \";\n                }\n                t += this.moveset.getMoveName(i, j);\n            }\n        }\n        t += \".<br>\";\n        return t;\n    }\n}\n//simulates a whole army fighting against a boss\nclass FightingArmy {\n    constructor(army) {\n        this.stats = army.stats.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n        this.maxUnits = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](army.size);\n        this.units = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](army.size);\n        this.maxTotalHealth = this.units.mul(this.stats.get(\"Health\"));\n        this.totalHealth = this.units.mul(this.stats.get(\"Health\"));\n        //when attackCounter reaches attackTime, the army attacks\n        this.attackTime = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n        this.attackCounter = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        this.size = 10;\n        this.deployed = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    }\n    getTotalAttack(target) {\n        return this.deployed.mul(this.stats.getPower(target.currentStats, \"Attack\", \"Defense\")).max(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n    }\n    doAttack(target) {\n        target.getAttacked(this.getTotalAttack(target));\n    }\n    tick(ticksPerSec, target) {\n        this.attackCounter = this.attackCounter.add(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1).div(ticksPerSec));\n        if (this.attackCounter.gte(this.attackTime)) {\n            this.attackCounter = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n            this.doAttack(target);\n        }\n    }\n    deploy_around_boss(boss) {\n        const max_nr = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](boss.getNrAround(this.size));\n        //while there can be units deployed around boss and you have units, do the deploy action\n        while (max_nr.gt(this.deployed) && this.units.gt(this.deployed)) {\n            boss.deployUnitAround(this);\n            this.deployed = this.deployed.add(1);\n        }\n    }\n}\n//simualtes a single soldier fighting against a boss\nclass FightingUnit {\n    constructor(army) {\n        this.army = army;\n        this.stats = army.stats.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n        this.isDead = false;\n    }\n    lose_health(damage) {\n        const lostHealth = this.stats.get(\"Health\").min(damage);\n        this.stats.set(\"Health\", this.stats.get(\"Health\").sub(lostHealth));\n        this.army.totalHealth = this.army.totalHealth.sub(lostHealth);\n        if (this.stats.get(\"Health\").lte(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.00001))) {\n            this.die();\n        }\n    }\n    die() {\n        this.army.units = this.army.units.sub(1);\n        this.army.deployed = this.army.deployed.sub(1);\n        this.isDead = true;\n    }\n}\n//simulates a boss fighting against armies represented by the FightingUnits which can get close enough to attack\nclass FightingBoss {\n    constructor(boss) {\n        this.stats = boss.stats.add(new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([], []));\n        this.maxUnits = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n        this.units = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n        this.maxTotalHealth = this.units.mul(this.stats.get(\"Health\"));\n        this.totalHealth = this.units.mul(this.stats.get(\"Health\"));\n        //when attackCounter reaches attackTime, the boss attacks\n        this.attackTime = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n        this.attackCounter = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        this.floatingDamage = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        this.moveset = boss.moveset;\n        this.move = undefined;\n        this.currentStats = undefined;\n        this.size = boss.size;\n        this.enemiesAround = [];\n        this.targets = [];\n        this.chooseMove();\n    }\n    getTargets() {\n        var _a;\n        this.targets = [];\n        if (this.enemiesAround.length == 0) {\n            return;\n        }\n        if ((_a = this.move) === null || _a === void 0 ? void 0 : _a.attackTargets) {\n            for (let i = 0; this.move.attackTargets.lte(i); i++) {\n                const nr = Math.floor(Math.random() * this.enemiesAround.length);\n                this.targets.push(nr);\n            }\n        }\n    }\n    chooseMove() {\n        this.move = this.moveset.getMove();\n        this.currentStats = this.move.modifyStats(this.stats);\n        this.getTargets();\n    }\n    getTotalAttack() {\n        let attack = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        for (let i = 0; i < this.targets.length; i++) {\n            attack = attack.add(this.currentStats.getPower(this.enemiesAround[this.targets[i]].stats, \"Attack\", \"Defense\").max(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)));\n        }\n        return attack;\n    }\n    doAttack() {\n        //attack them\n        const dead = [];\n        for (let i = 0; i < this.targets.length; i++) {\n            const enemy = this.enemiesAround[this.targets[i]];\n            //if the enemy was targeted multiple times, but by now is dead, just roll with it\n            if (enemy.isDead) {\n                continue;\n            }\n            const power = this.currentStats.getPower(enemy.stats, \"Attack\", \"Defense\");\n            enemy.lose_health(power);\n            if (enemy.isDead) {\n                //remove enemy from around boss\n                dead.push(this.targets[i]);\n                //deploy new unit if applicable\n                enemy.army.deploy_around_boss(this);\n            }\n        }\n        //remove the dead from the army\n        // for (let i = 0; i < dead.length; i++) {\n        //   this.enemiesAround[dead[i]] = -1;\n        // }\n        let i = 0;\n        while (i < this.enemiesAround.length) {\n            if (this.enemiesAround[i].isDead) {\n                this.enemiesAround.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        //move feed, maybe move it somewhere else?\n        _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.feedMoves.push([this, this.moveset.currentMovePlace]);\n        if (_pages_boss_fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.feedMoves.length > _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.feedElements.length) {\n            _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.feedMoves.shift();\n        }\n        _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.update_feed();\n        //choose move\n        this.chooseMove();\n        this.currentStats = this.move.modifyStats(this.stats);\n    }\n    tick(ticksPerSec) {\n        this.attackCounter = this.attackCounter.add(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1).div(ticksPerSec));\n        if (this.attackCounter.gte(this.attackTime)) {\n            this.attackCounter = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n            this.doAttack();\n        }\n    }\n    getAttacked(power) {\n        this.totalHealth = this.totalHealth.sub(power);\n        this.floatingDamage = this.floatingDamage.add(power);\n        const nr_units_dead = this.floatingDamage.div(this.stats.get(\"Health\")).floor();\n        if (this.floatingDamage.gte(this.stats.get(\"Health\"))) {\n            this.units = this.units.sub(nr_units_dead);\n            this.floatingDamage = this.floatingDamage.sub(nr_units_dead.mul(this.stats.get(\"Health\")));\n        }\n    }\n    //a function which calculates how many units can there be around the boss at a given moment\n    //works with numbers currently, please change this!\n    getNrAround(u_s) {\n        function isGood(n, u_s) {\n            const x = (n - 2) / (2 * n) * Math.PI;\n            if (Math.cos(x) / (1 - Math.cos(x)) >= u_s) {\n                return true;\n            }\n            return false;\n        }\n        u_s = u_s / this.size;\n        let bot = 2, top = this.size * 10;\n        let mid = Math.floor((top + bot) / 2);\n        while (!isGood(mid, u_s)) {\n            top = mid;\n            mid = Math.floor((top + bot) / 2);\n            if (mid == 2) {\n                return 2;\n            }\n        }\n        let last;\n        while (isGood(mid, u_s)) {\n            last = mid;\n            bot = mid;\n            mid = Math.floor((top + bot) / 2);\n        }\n        return last;\n    }\n    deployUnitAround(army) {\n        this.enemiesAround.push(new FightingUnit(army));\n    }\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/boss.ts?");

        /***/
      }),

/***/ "./src/components/popup_window.ts":
/*!****************************************!*\
  !*** ./src/components/popup_window.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopupWindow: () => (/* binding */ PopupWindow)\n/* harmony export */ });\n//A popup window for your inspection needs\nconst PopupWindow = {\n    container: $(\"#PopupWindowContainer\").get(0),\n    left: -1000,\n    top: -1000,\n    show(left, top, content) {\n        PopupWindow.container.hidden = false;\n        PopupWindow.container.innerHTML = content;\n        PopupWindow.move(left, top);\n    },\n    move(left, top) {\n        PopupWindow.container.style.left = left + \"5\";\n        PopupWindow.container.style.top = top + \"5\";\n        PopupWindow.left = left;\n        PopupWindow.top = top;\n    },\n    hide() {\n        PopupWindow.container.hidden = true;\n    },\n};\n\n\n//# sourceURL=webpack://my-webpack-project/./src/components/popup_window.ts?");

        /***/
      }),

/***/ "./src/data.ts":
/*!*********************!*\
  !*** ./src/data.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stuff: () => (/* binding */ stuff)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _army_comps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./army_comps */ \"./src/army_comps.ts\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./boss */ \"./src/boss.ts\");\n\n\n\n\n//For save files: field separator: /*/ ; page separator: '*/*'\nconst stuff = {\n    //Here are the weapons useable in the game\n    weapons: {\n        \"None\": new _army_comps__WEBPACK_IMPORTED_MODULE_1__.ArmyComponent(),\n        \"Knife\": new _army_comps__WEBPACK_IMPORTED_MODULE_1__.ArmyComponent(\"Knife\", \"A thrustworthy knife, even if it is not the best for your needs. Simple to use and reliable.\", new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Attack\"], [new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1))]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Hands\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-1)]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([], []), \"Weapon\", new _stats__WEBPACK_IMPORTED_MODULE_2__.PriceHandler([new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](100), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](200), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000)], [\"ar\", \"ar\", \"ar\", \"ge\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](250), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.05)], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](25))),\n        \"Dagger\": new _army_comps__WEBPACK_IMPORTED_MODULE_1__.ArmyComponent(\"Dagger\", \"A bit better than a knife, but pricier too.\", new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Attack\"], [new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.2))]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Hands\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-1)]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([], []), \"Weapon\", new _stats__WEBPACK_IMPORTED_MODULE_2__.PriceHandler([new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](100), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](300), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000)], [\"ar\", \"ar\", \"ar\", \"ge\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](15), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](450), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.07)], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](150))),\n        \"Longsword\": new _army_comps__WEBPACK_IMPORTED_MODULE_1__.ArmyComponent(\"Longsword\", \"A twohanded sword, strong against unarmored opponents\", new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Attack\"], [new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2.5))]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Hands\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-2)]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Attack\"], [new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.1))]), \"Weapon\", new _stats__WEBPACK_IMPORTED_MODULE_2__.PriceHandler([new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](90), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](270), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](900)], [\"ar\", \"ar\", \"ar\", \"ge\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](25), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1.1)], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](500))),\n    },\n    //Here are all the creatures useable in the game\n    creatures: {\n        \"None\": new _army_comps__WEBPACK_IMPORTED_MODULE_1__.ArmyComponent(),\n        \"Human\": new _army_comps__WEBPACK_IMPORTED_MODULE_1__.ArmyComponent(\"Human\", \"A cheap and reliable worker. Not too efficient, but this is the best you will get for your money.\", new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Health\", \"Attack\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10), new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1))]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Hands\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2)]), new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([], []), \"Creature\", new _stats__WEBPACK_IMPORTED_MODULE_2__.PriceHandler([new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](4), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](100), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](500)], [\"ar\", \"ar\", \"ar\", \"ar\"], [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](100)], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5)))\n    },\n    bosses: {\n        \"Slime\": new _boss__WEBPACK_IMPORTED_MODULE_3__.Boss(\"Slime\", \"A giant slime with a giant ego. He is the guardian of the exit of the first floor.\", new _stats__WEBPACK_IMPORTED_MODULE_2__.Stats([\"Attack\", \"Defense\", \"Health\"], [new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](90)), new _stats__WEBPACK_IMPORTED_MODULE_2__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](25)), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10000)]), \"Mini\", new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), new _boss__WEBPACK_IMPORTED_MODULE_3__.Moveset([\n            [new _boss__WEBPACK_IMPORTED_MODULE_3__.AttackMove(\"Basic Attack\", \"A normal attack from a normal enemy.(Attack x1, , Targets: 1)\", [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1)], [\"mul\"]),\n                new _boss__WEBPACK_IMPORTED_MODULE_3__.AttackMove(\"Basic Double Attack\", \"A normal attack from a normal enemy targeting two beings at once.(Attack x1, , Targets: 2)\", [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1)], [\"mul\"], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2))],\n            [new _boss__WEBPACK_IMPORTED_MODULE_3__.AttackMove(\"Triple Attack\", \"A normal attack from a normal enemy targeting three beings at once.(Attack x1, , Targets: 3)\", [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1)], [\"mul\"], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](3)),\n                new _boss__WEBPACK_IMPORTED_MODULE_3__.AttackDefenseMove(\"Attack and Defend\", \"The enemy takes a stance where defending and attacking is easier.(Attack and Defense x2, Targets: 2)\", [new _boss__WEBPACK_IMPORTED_MODULE_3__.AttackMove(\"\", \"\", [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2)], [\"mul\"], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2)), new _boss__WEBPACK_IMPORTED_MODULE_3__.DefenseMove(\"\", \"\", [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2)], [\"mul\"])])],\n            [new _boss__WEBPACK_IMPORTED_MODULE_3__.AttackMove(\"Fife-Fold Attack\", \"The slime empowers itself, then attacks five enemies at once with slightly increased prowess (Attack x1, Targets: 5).\", [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1)], [\"mul\"], new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5))]\n        ])),\n    }\n};\n\n\n//# sourceURL=webpack://my-webpack-project/./src/data.ts?");

        /***/
      }),

/***/ "./src/functions.ts":
/*!**************************!*\
  !*** ./src/functions.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCompareColor: () => (/* binding */ getCompareColor),\n/* harmony export */   getHtmlElement: () => (/* binding */ getHtmlElement),\n/* harmony export */   getHtmlElementList: () => (/* binding */ getHtmlElementList),\n/* harmony export */   getObjFromPath: () => (/* binding */ getObjFromPath),\n/* harmony export */   getPathFromArr: () => (/* binding */ getPathFromArr),\n/* harmony export */   stylizeDecimals: () => (/* binding */ stylizeDecimals)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n\nconst getCompareColor = (value1, value2) => {\n    if (value1 instanceof break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && value2 instanceof break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        if (value1.gt(value2)) {\n            return \"red\";\n        }\n        else if (value1.lt(value2)) {\n            return \"green\";\n        }\n        else {\n            return \"var(--default-color)\";\n        }\n    }\n    else {\n        if (value1 == value2) {\n            return \"var(--default-color)\";\n        }\n        if (value1 > value2) {\n            return \"red\";\n        }\n        else {\n            return \"green\";\n        }\n    }\n};\n//a function to adjust the appearance of decimal numbers (e form and trying to avoid inconsistent numbers messing up the interface, like 48.0000001 instead of 48)\nconst stylizeDecimals = (decimal, floor = false) => {\n    if (decimal.exponent >= 6) {\n        return decimal.mantissa.toFixed(2) + \"e\" + decimal.exponent;\n    }\n    if (!floor) {\n        if (decimal.exponent > 4) {\n            return (decimal.mantissa * Math.pow(10, decimal.exponent)).toFixed(0);\n        }\n        else {\n            return (decimal.mantissa * Math.pow(10, decimal.exponent)).toFixed(Math.min(5 - decimal.exponent, 2));\n        }\n    }\n    else {\n        return (decimal.mantissa * Math.pow(10, decimal.exponent)).toFixed(0);\n    }\n};\nconst getHtmlElementList = (identifier) => {\n    return $(identifier).toArray();\n};\nconst getHtmlElement = (identifier) => {\n    return $(identifier).get(0);\n};\nconst getPathFromArr = (path) => path.join(\".\");\n//a function that returns the StatisticClass thisect corresponding to path\nconst getObjFromPath = (path, object) => {\n    let strPath = getPathFromArr(path);\n    return object[strPath];\n};\n\n\n//# sourceURL=webpack://my-webpack-project/./src/functions.ts?");

        /***/
      }),

/***/ "./src/game_body.ts":
/*!**************************!*\
  !*** ./src/game_body.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GB: () => (/* binding */ GB)\n/* harmony export */ });\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n\n\n\nclass PageButtonsClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle) {\n        super(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle);\n    }\n    showButton(buttonNr) {\n        super.showButton(buttonNr);\n        this.buttons[buttonNr].hidden = false;\n    }\n    hideButton(buttonNr) {\n        super.hideButton(buttonNr);\n        this.buttons[buttonNr].hidden = true;\n    }\n    buttonClick(buttonNr) {\n        super.buttonClick(buttonNr);\n        _variables__WEBPACK_IMPORTED_MODULE_0__.GM.hidePages(this.buttons[buttonNr].getAttribute(\"page\"));\n    }\n}\nclass GameBodyClass {\n    constructor() {\n        this.resourceContainer = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)(\"#PageTopResourcesContainer\");\n        this.pageButtons = new PageButtonsClass(\"#AllPageButtons\", \".page_button\", { \"borderColor\": \"var(--selected-page-button-border-color)\" }, { \"borderColor\": \"var(--default-page-button-border-color)\" });\n    }\n}\nconst GB = new GameBodyClass();\n\n\n//# sourceURL=webpack://my-webpack-project/./src/game_body.ts?");

        /***/
      }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n/* harmony import */ var _pages_tower__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/tower */ \"./src/pages/tower.ts\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variables */ \"./src/variables.ts\");\n/*\n\nCreated by: Császár Mózes (mozescsaszar@gmail.com)\nCode use is only permitted for personal, non-commercial or non-commercial cases. Please don't\nuse or reuse part of the project in an application released to target audiences greater than\nfamily or close circle of friends.\n\n*/\n\n;\n\n\n\nconst goldText = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(\"#GoldText\");\n//click event for the continue from offline button\n(0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(\"#ContinueFromOfflineProgress\").addEventListener(\"click\", () => {\n    //change current page to be able to use HidePages\n    const currentPage = localStorage.getItem(\"currentPage\");\n    (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(\"#OfflinePageContainer\").hidden = true;\n    (0,_functions__WEBPACK_IMPORTED_MODULE_0__.getHtmlElement)(\"#PageButtonsContainer\").hidden = false;\n    goldText.parentElement.hidden = false;\n    //UNCOMMENT THIS\n    _variables__WEBPACK_IMPORTED_MODULE_2__.GM.hidePages(currentPage);\n});\n//load the game on each session when starting up\nwindow.addEventListener(\"load\", () => {\n    _variables__WEBPACK_IMPORTED_MODULE_2__.GM.openGame();\n});\n//save game whenever you switch tabs in browser (close, refresh, go to new/other tab)\n// document.addEventListener('visibilitychange', function() {\n//     if (document.visibilityState === 'visible') {\n//         let a = Number(localStorage.getItem('currentPage'));\n//         LoadOfflineProgress(Date.now() - Number(localStorage.getItem('lastSavedTime')), a);\n//         save_interval = setInterval(SaveToLocalStorage,1000);\n//     } else {\n//         if(localStorage.length != 0) {\n//             SaveToLocalStorage();\n//         }\n//         clearInterval(save_interval);\n//     }\n// });\n//save the game before closing\n// window.addEventListener('beforeunload', () => {CloseGame()});\nfunction tick() {\n    goldText.innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_0__.stylizeDecimals)(_variables__WEBPACK_IMPORTED_MODULE_2__.Player.gold);\n    for (let i = 0; i < _pages_tower__WEBPACK_IMPORTED_MODULE_1__.TowerPage.Tower.raidedLevels.length; i++) {\n        _pages_tower__WEBPACK_IMPORTED_MODULE_1__.TowerPage.Tower.floors[_pages_tower__WEBPACK_IMPORTED_MODULE_1__.TowerPage.Tower.raidedLevels[i][0]].levels[_pages_tower__WEBPACK_IMPORTED_MODULE_1__.TowerPage.Tower.raidedLevels[i][1]].tick(20);\n    }\n}\nsetInterval(tick, 50);\n\n\n//# sourceURL=webpack://my-webpack-project/./src/main.ts?");

        /***/
      }),

/***/ "./src/pages/army.ts":
/*!***************************!*\
  !*** ./src/pages/army.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArmyPage: () => (/* binding */ ArmyPage)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../variables */ \"./src/variables.ts\");\n/* harmony import */ var _army__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../army */ \"./src/army.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data */ \"./src/data.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../functions */ \"./src/functions.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tutorial */ \"./src/pages/tutorial.ts\");\n\n\n\n\n\n\n\nclass SelectArmyButtonsClass extends _base_classes__WEBPACK_IMPORTED_MODULE_3__.ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle) {\n        super(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle);\n    }\n    buttonClick(buttonNr) {\n        super.buttonClick(buttonNr);\n        ArmyPage.changeArmy(buttonNr);\n    }\n}\n//TODO: Figure out what kind of ItemList this is\nclass SelectionItemListClass extends _base_classes__WEBPACK_IMPORTED_MODULE_3__.ItemListClass {\n    //class names come in form of: .<name> or #<name>\n    constructor(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList = []) {\n        super(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList);\n        this.type = \"creatures\";\n        this.changeIndex = 0;\n    }\n    hideElement(elemNr) {\n        super.hideElement(elemNr);\n        this.elements[elemNr].innerHTML = \"\";\n        this.elements[elemNr].style.borderStyle = \"none\";\n    }\n    showElement(elemNr) {\n        super.showElement(elemNr);\n        this.elements[elemNr].style.borderStyle = \"solid\";\n    }\n    elementMouseenter(elemNr) {\n        if (this.itemList[elemNr] == \"None\") {\n            ArmyPage.partInfo.innerHTML = \"None\";\n        }\n        else {\n            ArmyPage.partInfo.innerHTML = _data__WEBPACK_IMPORTED_MODULE_4__.stuff[this.type][this.itemList[elemNr]].getText();\n        }\n        ArmyPage.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].getChangeText(this.type, this.itemList[elemNr], this.changeIndex);\n    }\n    elementMouseleave(elemNr) {\n        ArmyPage.partInfo.innerHTML = \"\";\n        ArmyPage.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].getText();\n    }\n    elementClick(elemNr) {\n        if (!_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].changeElement(this.type, this.elements[elemNr].innerHTML, this.changeIndex, true, ArmyPage.currentArmy)) {\n            return;\n        }\n        ArmyPage.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].getText();\n        ArmyPage.selectRows[this.type][this.changeIndex][1].innerHTML = this.elements[elemNr].innerHTML;\n        if (this.type == \"creatures\") {\n            //hide select rows for weapons and the like\n            for (let j = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].weapons.length - 1; j > -1; j--) {\n                ArmyPage.selectRows.weapons[j][0].parentElement.hidden = true;\n                ArmyPage.selectRows.weapons[j][1].innerHTML = \"None\";\n            }\n            //show first weapon selection row and the like if the creature is not None\n            if (ArmyPage.selectRows.creatures[0][1].innerHTML != \"None\") {\n                ArmyPage.selectRows.weapons[0][0].parentElement.hidden = false;\n            }\n        }\n        else if (this.type == \"weapons\") {\n            let found = false;\n            //hide select rows for weapons and the like\n            for (let j = 0; j < _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].weapons.length; j++) {\n                if (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].weapons[j] == \"None\") {\n                    if (found) {\n                        ArmyPage.selectRows.weapons[j][0].parentElement.hidden = true;\n                    }\n                    else {\n                        found = true;\n                        ArmyPage.selectRows.weapons[j][0].parentElement.hidden = false;\n                    }\n                }\n                ArmyPage.selectRows.weapons[j][1].innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[ArmyPage.currentArmy].weapons[j];\n            }\n        }\n        //hide selection list\n        this.container.hidden = true;\n        //show management item\n        ArmyPage.armyManagerContainer.hidden = false;\n    }\n    populateElement(elemNr) {\n        this.elements[elemNr].innerHTML = this.itemList[this.getItemListIndex(elemNr)];\n    }\n    backButtonMouseenter() {\n        ArmyPage.partInfo.innerHTML = \"Take me back, baby!\";\n    }\n    backButtonMouseleave() {\n        ArmyPage.partInfo.innerHTML = \"\";\n    }\n    backButtonClick() {\n        this.hide();\n        ArmyPage.armyManagerContainer.hidden = false;\n    }\n    hidePreviousButton() {\n        super.hidePreviousButton();\n        this.previousButton.style.borderStyle = \"none\";\n        this.previousButton.innerHTML = \"\";\n    }\n    showPreviousButton() {\n        super.showPreviousButton();\n        this.previousButton.style.borderStyle = \"solid\";\n        this.previousButton.innerHTML = \"&lt;\";\n    }\n    hideNextButton() {\n        super.hideNextButton();\n        this.nextButton.style.borderStyle = \"none\";\n        this.nextButton.innerHTML = \"\";\n    }\n    showNextButton() {\n        super.showNextButton();\n        this.nextButton.style.borderStyle = \"solid\";\n        this.nextButton.innerHTML = \"&gt;\";\n    }\n    changeType(type) {\n        this.type = type;\n    }\n    changeSelection(type, itemList) {\n        this.changeType(type);\n        this.changeItemList(itemList);\n    }\n    show() {\n        super.show(true);\n        ArmyPage.armyManagerContainer.hidden = true;\n    }\n}\nclass ArmyPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_3__.PageClass {\n    constructor(name) {\n        super(name);\n        this.currentArmy = 0;\n        this.armySizeInput = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmySizeInput\");\n        this.partInfo = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyPagePartInfo\");\n        this.info = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyPageInfo\");\n        this.armyManagerContainer = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\".army_management_container\");\n        this.pageButton = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyPageButton\");\n        this.maxArmySizeButton = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#MaxArmySize\");\n        this.levelText = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyLevelText\");\n        this.levelUpButton = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyLevelUpButton\");\n        this.levelUpCost = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyLevelUpCost\");\n        this.timesVisited = 0;\n        this.selectRows = {\n            creatures: [],\n            weapons: [],\n        };\n        //the end number of select rows in each category, in order=creatures, weapons\n        this.selectRowsTypes = [\"creatures\", \"weapons\"];\n        this.selectRowsNrs = [1, 9];\n        //set up select rows\n        const item_rows1 = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElementList)(\".nr_available_div.page_army\");\n        //      MAYBE NEEDED LATER\n        //let item_rows2 = document.querySelectorAll(container_name + ' > ' + list_name + ' > ' + list_item_name + \" > .element_name_div\");\n        const item_rows3 = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElementList)(\".complementary_button.page_army\");\n        //get them selectRows up & running\n        let selectRowsI = 0;\n        let row = this.selectRowsTypes[selectRowsI];\n        for (let i = 0; i < item_rows1.length; i++) {\n            //change to new type if old one ran out\n            if (i >= this.selectRowsNrs[selectRowsI]) {\n                selectRowsI++;\n                row = this.selectRowsTypes[selectRowsI];\n            }\n            this.selectRows[row].push([item_rows1[i], item_rows3[i]]);\n        }\n        //store equipped state by a bitwise method ( 2 ** armyNr shows if that army equipped the element or not)\n        this.elementEquipState = {\n            creatures: { \"None\": 0, \"Human\": 0, },\n            weapons: { \"None\": 0 },\n        };\n        this.changeArmyButtons = new SelectArmyButtonsClass(\".select_subpage_container.page_army\", \".select_button\", { \"borderColor\": \"var(--selected-toggle-button-border-color)\" }, { \"borderColor\": \"var(--default-toggle-button-border-color)\" });\n        this.elementSelectList = new SelectionItemListClass(\".element_list.page_army\", \".element_list_item\", \".element_list_prev_button\", \".element_list_back_button\", \".element_list_next_button\", []);\n        this.currentSelecting = {\n            weapons: -1,\n        };\n        this.initializeEventListeners();\n    }\n    //called when page reloads\n    initializeEventListeners() {\n        //initialize all select's, selectButtons parent's and selectButtons' mouse functions\n        for (const type in this.selectRows) {\n            if (type == \"creatures\") {\n                //select click\n                this.selectRows.creatures[0][1].addEventListener(\"click\", () => {\n                    if (this.elementSelectList.hidden) {\n                        this.elementSelectList.changeType(type);\n                        this.elementSelectList.changeItemList(this.generateItemList(type, this.currentArmy));\n                        this.elementSelectList.changeIndex = 0;\n                        this.elementSelectList.show();\n                    }\n                    else {\n                        this.selectRows.creatures[0][1].innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].creature;\n                    }\n                });\n                //selects' parent mouseenter and mouseleave\n                this.selectRows.creatures[0][1].addEventListener(\"mouseenter\", () => {\n                    this.partInfo.innerHTML = _data__WEBPACK_IMPORTED_MODULE_4__.stuff.creatures[_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].creature].getText();\n                });\n                this.selectRows.creatures[0][1].addEventListener(\"mouseleave\", () => {\n                    this.partInfo.innerHTML = \"\";\n                });\n            }\n            else if (type == \"weapons\") {\n                //selects and their parents\n                for (let i = 0; i < 8; i++) {\n                    //select click\n                    this.selectRows[type][i][1].addEventListener(\"click\", () => {\n                        if (this.elementSelectList.hidden) {\n                            this.elementSelectList.changeType(type);\n                            this.elementSelectList.changeItemList(this.generateItemList(type, this.currentArmy));\n                            this.elementSelectList.changeIndex = i;\n                            this.elementSelectList.show();\n                        }\n                        else {\n                            this.selectRows.weapons[i][1].innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[i];\n                        }\n                    });\n                    //selects' parent mouseenter and mouseleave\n                    this.selectRows[type][i][1].addEventListener(\"mouseenter\", () => {\n                        this.partInfo.innerHTML = _data__WEBPACK_IMPORTED_MODULE_4__.stuff.weapons[_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[i]].getText();\n                    });\n                    this.selectRows[type][i][1].addEventListener(\"mouseleave\", () => {\n                        this.partInfo.innerHTML = \"\";\n                    });\n                }\n            }\n        }\n        //army size buttons click functions\n        this.armySizeInput.addEventListener(\"change\", () => {\n            _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].setSize(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.armySizeInput.value));\n        });\n        this.maxArmySizeButton.addEventListener(\"click\", () => {\n            _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].setSize(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Infinity));\n        });\n        this.levelUpButton.addEventListener(\"mouseenter\", () => {\n            if (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level < _army__WEBPACK_IMPORTED_MODULE_2__.Army.levelPrices.length) {\n                this.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getLevelUpText();\n                this.partInfo.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getCompareLevelText();\n                this.levelText.innerHTML = \"Level: \" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1) +\n                    \"<span style=\\\"color:\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCompareColor)(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level, _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1)\n                    + \"\\\"> &rightarrow; </span>\" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 2) + \"<br>\";\n            }\n        });\n        this.levelUpButton.addEventListener(\"mouseleave\", () => {\n            this.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getText();\n            this.levelText.innerHTML = \"Level: \" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1) + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level >= _army__WEBPACK_IMPORTED_MODULE_2__.Army.levelPrices.length ? \" (Max)\" : \"\");\n            this.partInfo.innerHTML = \"\";\n        });\n        this.levelUpButton.addEventListener(\"click\", () => {\n            _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].levelUp();\n            this.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getText();\n            this.levelText.innerHTML = \"Level: \" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1);\n            if (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level < _army__WEBPACK_IMPORTED_MODULE_2__.Army.levelPrices.length) {\n                this.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getLevelUpText();\n                this.partInfo.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getCompareLevelText();\n                this.levelText.innerHTML = \"Level: \" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1) +\n                    \"<span style=\\\"color:\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getCompareColor)(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level, _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1)\n                    + \"\\\">  &rightarrow; </span>\" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 2) + \"<br>\";\n                this.levelUpCost.innerHTML = \"Cost: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(_army__WEBPACK_IMPORTED_MODULE_2__.Army.levelPrices[_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level]);\n            }\n            else {\n                this.partInfo.innerHTML = \"\";\n                this.levelText.innerHTML = \"Level: \" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1) + \" (Max)\";\n                this.levelUpButton.hidden = true;\n                (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyLevelUpCost\").hidden = true;\n            }\n        });\n    }\n    //called when new save gets loaded\n    displayOnLoad() {\n        this.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].getText();\n        this.armySizeInput.value = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].size, true);\n    }\n    display() {\n        //this.changeArmyButtons[this.currentArmy].buttonClick();\n        //this.changeArmy(this.currentArmy);\n        if (this.timesVisited == 0) {\n            _tutorial__WEBPACK_IMPORTED_MODULE_6__.TutorialPage.unlockTutorial(\"Army Page\");\n            _tutorial__WEBPACK_IMPORTED_MODULE_6__.TutorialPage.startTutorial(\"Army Page\", true, \"ArmyPage\");\n        }\n        this.timesVisited++;\n    }\n    displayEveryTick() {\n        this.selectRows.creatures[0][0].innerHTML = (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].creature == \"None\" ? \"(&infin;)\" : \"(\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory.creatures[_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].creature], true) + \")\");\n        for (let i = 0; i < 8; i++) {\n            this.selectRows.weapons[i][0].innerHTML = (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[i] == \"None\" ? \"(&infin;)\" : \"(\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory.weapons[_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[i]], true) + \")\");\n        }\n    }\n    //called when a save text is needed\n    save() {\n        let saveText = super.save();\n        //save current army\n        saveText += \"/*/\" + this.currentArmy;\n        //save equip state\n        saveText += \"/*/\" + Object.keys(this.elementEquipState).length;\n        for (const [tipe, type] of Object.entries(this.elementEquipState)) {\n            saveText += \"/*/\" + Object.keys(type).length + \"/*/\" + tipe;\n            for (const [key, value] of Object.entries(type)) {\n                saveText += \"/*/\" + key + \"/*/\" + value;\n            }\n        }\n        saveText += \"/*/\" + this.changeArmyButtons.save();\n        return saveText;\n    }\n    //called when you need to get values from a saveText\n    load(saveText) {\n        const saveTextArr = saveText.split(\"/*/\");\n        let loadI = super.load(saveTextArr);\n        let i = loadI ? loadI : 0;\n        //reset color before doing anything else\n        this.currentArmy = Number(saveTextArr[i]);\n        i++;\n        let len_type, len_kv;\n        len_type = Number(saveTextArr[i]);\n        i++;\n        for (let ii = 0; ii < len_type; ii++) {\n            len_kv = Number(saveTextArr[i]);\n            i++;\n            const type = saveTextArr[i];\n            i++;\n            for (let iii = 0; iii < len_kv; iii++) {\n                this.elementEquipState[type][saveTextArr[i]] = Number(saveTextArr[i + 1]);\n                i += 2;\n            }\n        }\n        i += this.changeArmyButtons.load(saveTextArr, i);\n        this.displayOnLoad();\n        return i;\n    }\n    changeArmy(changeTo) {\n        //      reset creature which was used\n        this.selectRows.creatures[0][1].innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[changeTo].creature;\n        //      reset weapon selects if they where used\n        let k = 0;\n        while (k < 8 && _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[k] != \"None\") {\n            this.selectRows.weapons[k][1].innerHTML = \"None\";\n            k++;\n        }\n        //          set new selects and hide selectButtons used\n        k = 0;\n        this.currentArmy = changeTo;\n        //     set setters' innerHTML value\n        while (k < 8 && _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[k] != \"None\") {\n            this.selectRows.weapons[k][0].parentElement.hidden = false;\n            this.selectRows.weapons[k][1].innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].weapons[k];\n            k++;\n        }\n        //          show next selector if possible and needed\n        //      set the next weapon selector visible if needed and possible\n        if (k < _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].maxWeapons && _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].creature != \"None\") {\n            this.selectRows.weapons[k][0].parentElement.hidden = false;\n            k++;\n        }\n        //          hide unused selectors\n        //      hide unused weapon selectors\n        while (k < _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].maxWeapons) {\n            this.selectRows.weapons[k][0].parentElement.hidden = true;\n            k++;\n        }\n        //          set the info and other stuff\n        this.info.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[changeTo].getText();\n        this.armySizeInput.value = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[changeTo].size, true);\n        //set level text\n        this.levelText.innerHTML = \"Level: \" + (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level + 1);\n        if (_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level < _army__WEBPACK_IMPORTED_MODULE_2__.Army.levelPrices.length) {\n            this.levelUpCost.innerHTML = \"Cost: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(_army__WEBPACK_IMPORTED_MODULE_2__.Army.levelPrices[_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.currentArmy].level]);\n            //show level up stuff\n            this.levelUpButton.hidden = false;\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyLevelUpCost\").hidden = false;\n        }\n        else {\n            this.levelText.innerHTML += \" (Max)\";\n            //hide level up stuff\n            this.levelUpButton.hidden = true;\n            (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#ArmyLevelUpCost\").hidden = true;\n        }\n        //      if element selection was active, hide it\n        if (!this.elementSelectList.hidden) {\n            this.elementSelectList.container.hidden = true;\n            this.armyManagerContainer.hidden = false;\n        }\n    }\n    equipElementByArmy(type, element, armyNr) {\n        if (element != \"None\") {\n            const nr = 2 ** armyNr;\n            if (this.elementEquipState[type][element] == undefined) {\n                this.elementEquipState[type][element];\n            }\n            this.elementEquipState[type][element] += nr;\n        }\n    }\n    deequipElementByArmy(type, element, armyNr) {\n        if (element != \"None\") {\n            const nr = 2 ** armyNr;\n            this.elementEquipState[type][element] -= nr;\n        }\n    }\n    isElementEquippedByArmy(type, element, armyNr) {\n        const nr = 2 ** armyNr;\n        return Math.floor(this.elementEquipState[type][element] / nr) == 1;\n    }\n    generateItemList(type, armyNr) {\n        const list = [];\n        for (const element of Object.keys(this.elementEquipState[type])) {\n            if (!this.isElementEquippedByArmy(type, element, armyNr)) {\n                list.push(element);\n            }\n        }\n        return list;\n    }\n}\nconst ArmyPage = new ArmyPageClass(\"ArmyPage\");\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/army.ts?");

        /***/
      }),

/***/ "./src/pages/boss/army_selection.ts":
/*!******************************************!*\
  !*** ./src/pages/boss/army_selection.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BossArmySelectionPage: () => (/* binding */ BossArmySelectionPage),\n/* harmony export */   BossSelectArmyButtonsClass: () => (/* binding */ BossSelectArmyButtonsClass)\n/* harmony export */ });\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data */ \"./src/data.ts\");\n/* harmony import */ var _fighting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fighting */ \"./src/pages/boss/fighting.ts\");\n/* harmony import */ var _tower__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tower */ \"./src/pages/tower.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tutorial */ \"./src/pages/tutorial.ts\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../variables */ \"./src/variables.ts\");\n\n\n\n\n\n\nclass BossSelectArmyButtonsClass extends _base_classes__WEBPACK_IMPORTED_MODULE_0__.ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle, number) {\n        containerIdentifier += \".n\" + String(number);\n        super(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle);\n        this.number = number;\n        this.selected = -1;\n    }\n    showButton(buttonNr) {\n        super.showButton(buttonNr);\n        this.buttons[buttonNr].hidden = false;\n    }\n    hideButton(buttonNr) {\n        super.hideButton(buttonNr);\n        this.buttons[buttonNr].hidden = true;\n    }\n    deselect() {\n        if (this.selected != -1) {\n            for (const key in this.defaultStyle) {\n                //TODO: Investigate Styles\n                // this.buttons[this.selected].style[key] = this.defaultStyle[key];\n            }\n            this.selected = -1;\n        }\n    }\n    buttonClick(buttonNr) {\n        //reset old armies\n        if (BossArmySelectionPage.fight.selectedArmies[this.number] != -1) {\n            for (let k = 0; k < BossArmySelectionPage.nrArmySelects; k++) {\n                if (this.number != k) {\n                    BossArmySelectionPage.armySelects[k].showButton(buttonNr);\n                }\n            }\n        }\n        //if you select the same army again\n        if (buttonNr == this.selected) {\n            BossArmySelectionPage.fight.selectedArmies[this.number] = -1;\n            BossArmySelectionPage.armyInfos[this.number].innerHTML = \"No army to be seen here.\";\n        }\n        //if you selected a new army\n        else {\n            BossArmySelectionPage.fight.selectedArmies[this.number] = buttonNr;\n            BossArmySelectionPage.armyInfos[this.number].innerHTML = _variables__WEBPACK_IMPORTED_MODULE_5__.Player.armies[buttonNr].getFightingStatsText();\n            for (let k = 0; k < BossArmySelectionPage.nrArmySelects; k++) {\n                if (k != this.number) {\n                    BossArmySelectionPage.armySelects[k].hideButton(buttonNr);\n                }\n            }\n        }\n        //do button group things\n        if (this.selected == buttonNr) {\n            this.deselect();\n        }\n        else {\n            if (this.selected != -1) {\n                for (const key in this.defaultStyle) {\n                    //TODO: Investigate Styles\n                    // this.buttons[this.selected].style[key] = this.defaultStyle[key];\n                }\n            }\n            this.selectButton(buttonNr);\n        }\n        BossArmySelectionPage.showHideFightButton();\n    }\n}\nclass BossArmySelectionPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_0__.PageClass {\n    constructor(name) {\n        super(name);\n        this.timesVisited = 0;\n        this.nrArmies = 3;\n        this.nrArmySelects = 3;\n        //build armySelects component\n        this.armySelects = [];\n        for (let i = 0; i < this.nrArmies; i++) {\n            this.armySelects.push(new BossSelectArmyButtonsClass(\".toggle_button_container.page_boss_select_army\", \".toggle_button\", { \"borderColor\": \"var(--selected-toggle-button-border-color)\" }, { \"borderColor\": \"var(--default-toggle-button-border-color)\" }, i));\n        }\n        this.armyInfos = $(\".select_boss_army_info\").toArray();\n        this.bossInfo = $(\"#BossInfo\").get(0);\n        this.difficultyGauge = $(\"#BossFightDifficultyGauge\").get(0);\n        this.fight = undefined;\n        this.backButton = $(\"#BackFromBossArmySelectionPage\").get(0);\n        this.startFightButton = $(\"#StartBossFightButton\").get(0);\n        this.initializeEventListeners();\n    }\n    initializeEventListeners() {\n        //start fight button\n        this.startFightButton.addEventListener(\"click\", () => {\n            //reset boss fight page\n            _fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.reset();\n            _fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.fight = this.fight;\n            for (let i = 0; i < this.fight.maxSelectibleArmies; i++) {\n                if (this.fight.selectedArmies[i] != -1) {\n                    const result = _tower__WEBPACK_IMPORTED_MODULE_3__.TowerPage.Tower.removeRaidedLevelByArmy(this.fight.selectedArmies[i]);\n                    if (result != undefined) {\n                        _fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.armiesRemovedFrom.push();\n                    }\n                }\n            }\n            this.reset();\n            _variables__WEBPACK_IMPORTED_MODULE_5__.GM.hidePages(\"BossFightingPage\");\n        });\n        //Back to tower page button\n        this.backButton.addEventListener(\"click\", () => {\n            //get page buttons back\n            $(\"#PageButtonsContainer\").show();\n            $(\"#PageTopResourcesContainer\").show();\n            //return to tower page\n            _variables__WEBPACK_IMPORTED_MODULE_5__.GM.hidePages(\"TowerPage\");\n        });\n    }\n    displayOnLoad() { }\n    display() {\n        //show necessary army selects\n        for (let i = 0; i < this.fight.maxSelectibleArmies; i++) {\n            this.armySelects[i].container.parentElement.hidden = false;\n            this.armySelects[i].deselect();\n        }\n        //hide ones that are not useable in current fight\n        for (let i = this.fight.maxSelectibleArmies; i < this.nrArmySelects; i++) {\n            this.armySelects[i].container.parentElement.hidden = true;\n        }\n        this.bossInfo.innerHTML = _data__WEBPACK_IMPORTED_MODULE_1__.stuff.bosses[this.fight.bosses[0]].getText();\n        if (this.timesVisited == 0) {\n            _tutorial__WEBPACK_IMPORTED_MODULE_4__.TutorialPage.unlockTutorial(\"Boss Fighting Army Selection Page\");\n            _tutorial__WEBPACK_IMPORTED_MODULE_4__.TutorialPage.startTutorial(\"Boss Fighting Army Selection Page\", true, \"BossArmySelectionPage\");\n        }\n        this.timesVisited++;\n    }\n    save() {\n        const saveText = super.save();\n        return saveText;\n    }\n    load(saveText) {\n        const saveTextArr = saveText.split(\"/*/\");\n        const i = super.load(saveTextArr);\n        return i;\n    }\n    showHideFightButton() {\n        for (const i in this.fight.selectedArmies) {\n            if (this.fight.selectedArmies[i] != -1 &&\n                _variables__WEBPACK_IMPORTED_MODULE_5__.Player.armies[this.fight.selectedArmies[i]].creature != \"None\") {\n                this.startFightButton.hidden = false;\n                return;\n            }\n        }\n        this.startFightButton.hidden = true;\n    }\n    reset() {\n        this.startFightButton.hidden = true;\n        for (let i = 0; i < this.fight.maxSelectibleArmies; i++) {\n            this.armySelects[i].selectButton(this.fight.selectedArmies[i]);\n            this.armyInfos[i].innerHTML = \"No army to be seen here.\";\n        }\n    }\n}\nconst BossArmySelectionPage = new BossArmySelectionPageClass(\"BossArmySelectionPage\");\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/boss/army_selection.ts?");

        /***/
      }),

/***/ "./src/pages/boss/fighting.ts":
/*!************************************!*\
  !*** ./src/pages/boss/fighting.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BossFightingPage: () => (/* binding */ BossFightingPage)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../boss */ \"./src/boss.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data */ \"./src/data.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../functions */ \"./src/functions.ts\");\n/* harmony import */ var _components_popup_window__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/popup_window */ \"./src/components/popup_window.ts\");\n/* harmony import */ var _tower__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tower */ \"./src/pages/tower.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../tutorial */ \"./src/pages/tutorial.ts\");\n\n\n\n\n\n\n\n\n\nclass BossFightingPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.PageClass {\n    constructor(name) {\n        super(name);\n        this.feedElements = [];\n        this.fightingArmies = [];\n        this.fightingBosses = [];\n        this.fightingArmyStatuses = [];\n        this.fightingBossStatuses = [];\n        this.timesVisited = 0;\n        this.fight = undefined;\n        //applicable to all status bars\n        this.barWidth = 300;\n        //army status bars\n        this.nrArmyStatusBars = 3;\n        this.barElementsPerArmy = 6;\n        this.armyStatusBars = [];\n        let statusBars = $(\".army_in_boss_fight_bar\").toArray();\n        for (let i = 0; i < this.nrArmyStatusBars; i++) {\n            this.armyStatusBars.push([]);\n            for (let j = 0; j < this.barElementsPerArmy; j++) {\n                this.armyStatusBars[i].push(statusBars[i * this.barElementsPerArmy + j]);\n            }\n        }\n        //boss status bars\n        this.nrBossStatusBats = 1;\n        this.barElementsPerBoss = 6;\n        this.bossStatusBars = [];\n        statusBars = $(\".boss_in_boss_fight_bar\").toArray();\n        for (let i = 0; i < this.nrBossStatusBats; i++) {\n            this.bossStatusBars.push([]);\n            for (let j = 0; j < this.barElementsPerBoss; j++) {\n                this.bossStatusBars[i].push(statusBars[i * this.barElementsPerBoss + j]);\n            }\n        }\n        //feed\n        this.feedElements = [];\n        this.feedMoves = [];\n        this.feedElements = $(\".boss_fight_move_feedElement\").toArray();\n        this.fightingArmies = [];\n        this.fightingBosses = [];\n        this.fightingArmyStatuses = [];\n        this.fightingBossStatuses = [];\n        this.fightingArmiesNr = 0;\n        this.fightingBossesNr = 0;\n        this.armiesRemovedFrom = [];\n        this.initializeEventListeners();\n    }\n    initializeEventListeners() {\n        //feed elements\n        for (let i = 0; i < this.feedElements.length; i++) {\n            this.feedElements[i].addEventListener(\"mouseenter\", (event) => {\n                if (this.feedElements[i].innerHTML != \"\") {\n                    //display anew only if mouse was moved\n                    if (!(_components_popup_window__WEBPACK_IMPORTED_MODULE_6__.PopupWindow.left == event.clientX && _components_popup_window__WEBPACK_IMPORTED_MODULE_6__.PopupWindow.top == event.clientY)) {\n                        const feedElem = this.feedMoves[this.feedMoves.length - 1 - i];\n                        _components_popup_window__WEBPACK_IMPORTED_MODULE_6__.PopupWindow.show(event.clientX, event.clientY, feedElem[0].moveset.getMove_description(...feedElem[1]));\n                    }\n                }\n            });\n            this.feedElements[i].addEventListener(\"mousemove\", (event) => {\n                const feedElem = this.feedMoves[this.feedMoves.length - 1 - i];\n                _components_popup_window__WEBPACK_IMPORTED_MODULE_6__.PopupWindow.show(event.clientX, event.clientY, feedElem[0].moveset.getMove_description(...feedElem[1]));\n            });\n            this.feedElements[i].addEventListener(\"mouseleave\", () => {\n                _components_popup_window__WEBPACK_IMPORTED_MODULE_6__.PopupWindow.hide();\n            });\n        }\n    }\n    displayOnLoad() {\n    }\n    display() {\n        //if not yet visited, show tutorial\n        if (this.timesVisited == 0) {\n            _tutorial__WEBPACK_IMPORTED_MODULE_8__.TutorialPage.unlockTutorial(\"Boss Fighting Page\");\n            _tutorial__WEBPACK_IMPORTED_MODULE_8__.TutorialPage.startTutorial(\"Boss Fighting Page\", true, \"BossFightingPage\");\n        }\n        //else set up the fight\n        else {\n            for (let i = 0; i < this.fight.maxSelectibleArmies; i++) {\n                this.armyStatusBars[i][0].parentElement.parentElement.hidden = false;\n                //create actually fighting armies\n                this.fightingArmies.push(new _boss__WEBPACK_IMPORTED_MODULE_3__.FightingArmy(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies[this.fight.selectedArmies[i]]));\n                this.fightingArmyStatuses.push(1);\n            }\n            this.fightingArmiesNr = this.fight.maxSelectibleArmies;\n            for (let i = this.fight.maxSelectibleArmies; i < this.nrArmyStatusBars; i++) {\n                this.armyStatusBars[i][0].parentElement.parentElement.hidden = true;\n                this.fightingBossStatuses.push(1);\n            }\n            this.fightingBossesNr = 1;\n            //create actually fighting boss\n            this.fightingBosses.push(new _boss__WEBPACK_IMPORTED_MODULE_3__.FightingBoss(_data__WEBPACK_IMPORTED_MODULE_4__.stuff[\"bosses\"][this.fight.bosses[0]]));\n            this.deployArmies();\n            const boss_in_boss_fight_name = $(\".boss_in_boss_fight_name\").get(0);\n            boss_in_boss_fight_name.innerHTML = this.fight.bosses[0];\n        }\n        this.timesVisited++;\n    }\n    displayEveryTick() {\n        //fill in sliders\n        for (let i = 0; i < this.fightingArmies.length; i++) {\n            //health foreground\n            this.armyStatusBars[i][0].style.width = this.getWidth(this.fightingArmies[i].totalHealth, this.fightingArmies[i].maxTotalHealth) + \"\";\n            this.armyStatusBars[i][1].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingArmies[i].totalHealth) + \"/\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingArmies[i].maxTotalHealth);\n            //unit nr foreground\n            this.armyStatusBars[i][2].style.width = this.getWidth(this.fightingArmies[i].units, this.fightingArmies[i].maxUnits) + \"\";\n            this.armyStatusBars[i][3].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingArmies[i].units, true) + \"/\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingArmies[i].maxUnits, true) +\n                \" (\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingArmies[i].deployed, true) + \")\";\n            //attack status foreground\n            this.armyStatusBars[i][4].style.width = this.getWidth(this.fightingArmies[i].attackCounter, this.fightingArmies[i].attackTime) + \"\";\n            this.armyStatusBars[i][5].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingArmies[i].getTotalAttack(this.fightingBosses[0]));\n        }\n        for (let i = 0; i < this.fightingBosses.length; i++) {\n            //health foreground\n            this.bossStatusBars[i][0].style.width = this.getWidth(this.fightingBosses[i].totalHealth, this.fightingBosses[i].maxTotalHealth) + \"\";\n            this.bossStatusBars[i][1].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingBosses[i].totalHealth) + \"/\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingBosses[i].maxTotalHealth) + \"\";\n            //unit nr foreground\n            this.bossStatusBars[i][2].style.width = this.getWidth(this.fightingBosses[i].units, this.fightingBosses[i].maxUnits) + \"\";\n            this.bossStatusBars[i][3].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingBosses[i].units, true) + \"/\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingBosses[i].maxUnits, true);\n            //attack status foreground\n            this.bossStatusBars[i][4].style.width = this.getWidth(this.fightingBosses[i].attackCounter, this.fightingBosses[i].attackTime) + \"\";\n            this.bossStatusBars[i][5].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.fightingBosses[i].getTotalAttack());\n        }\n        if (this.doFight()) {\n            this.resolve_win();\n        }\n    }\n    save() {\n        const saveText = super.save();\n        return saveText;\n    }\n    load(saveText) {\n        const saveTextArr = saveText.split(\"/*/\");\n        const i = super.load(saveTextArr);\n        return i;\n    }\n    deployArmies() {\n        for (let i = 0; i < this.fightingArmies.length; i++) {\n            this.fightingArmies[i].deploy_around_boss(this.fightingBosses[0]);\n        }\n        this.fightingBosses[0].getTargets();\n    }\n    getWidth(curr, max) {\n        return new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.barWidth).mul(curr.div(max)).floor().toNumber();\n    }\n    doFight() {\n        for (let i = 0; i < this.fightingArmies.length; i++) {\n            if (this.fightingArmyStatuses[i] == 1) {\n                this.fightingArmies[i].tick(20, this.fightingBosses[0]);\n                if (this.fightingArmies[i].totalHealth.lte(0.00001)) {\n                    this.fightingArmyStatuses[i] = 0;\n                    this.fightingArmies[i].totalHealth = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n                    this.fightingArmiesNr -= 1;\n                    if (this.fightingArmiesNr == 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n        for (let i = 0; i < this.fightingBosses.length; i++) {\n            if (this.fightingBossStatuses[i] == 1) {\n                this.fightingBosses[i].tick(20);\n                if (this.fightingBosses[i].totalHealth.lte(0.00001)) {\n                    this.fightingBossStatuses[i] = 0;\n                    this.fightingBosses[i].totalHealth = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n                    this.fightingBossesNr -= 1;\n                    if (this.fightingBossesNr == 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    resolve_win() {\n        // //Boss won\n        // if (this.fightingArmiesNr == 0) {\n        // }\n        // //Army won\n        // else {\n        // }\n        //put armies back to raid what they were raiding before\n        for (let i = 0; i < this.armiesRemovedFrom.length; i++) {\n            _tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.raidedLevels.push(this.armiesRemovedFrom[i]);\n        }\n        //change page to fight end page\n        _variables__WEBPACK_IMPORTED_MODULE_1__.GM.hidePages(\"BossFightingResultPage\");\n    }\n    update_feed() {\n        let i, ii = this.feedMoves.length - 1;\n        for (i = 0; i < this.feedMoves.length; i++, ii--) {\n            this.feedElements[ii].innerHTML = \"<br>\" + this.feedMoves[i][0].moveset.getMoveName(...this.feedMoves[i][1]) + \"<br>\";\n        }\n        for (i; i < this.feedElements.length; i++) {\n            this.feedElements[i].innerHTML = \"\";\n        }\n    }\n    reset() {\n        //reset fighting armies and bosses\n        this.fightingArmies = [];\n        this.fightingArmiesNr = 0;\n        this.fightingBosses = [];\n        this.fightingBossesNr = 0;\n        this.fightingArmyStatuses = [];\n        this.fightingBossStatuses = [];\n        //reset army removal (from raiding a tower level) tracker array\n        this.armiesRemovedFrom = [];\n        //reset feed\n        this.feedMoves = [];\n        this.update_feed();\n    }\n}\nconst BossFightingPage = new BossFightingPageClass(\"BossFightingPage\");\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/boss/fighting.ts?");

        /***/
      }),

/***/ "./src/pages/boss/result.ts":
/*!**********************************!*\
  !*** ./src/pages/boss/result.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BossFightingResultPage: () => (/* binding */ BossFightingResultPage)\n/* harmony export */ });\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _fighting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fighting */ \"./src/pages/boss/fighting.ts\");\n\n\n\nclass BossFightingResultPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.PageClass {\n    constructor(name) {\n        super(name);\n        this.resultInfo = $(\"#AfterFightMessage\").get(0);\n        this.backButton = $(\"#BackButtonFromResults\").get(0);\n        this.initializeEventListeners();\n    }\n    initializeEventListeners() {\n        //Back to tower page button\n        this.backButton.addEventListener(\"click\", () => {\n            //get resource bar and page buttons back\n            const pageButtonsContainer = $(\"#PageButtonsContainer\").get(0);\n            pageButtonsContainer.hidden = false;\n            const pageTopResourcesContainer = $(\"#PageTopResourcesContainer\").get(0);\n            pageTopResourcesContainer.hidden = false;\n            //return to tower page\n            _variables__WEBPACK_IMPORTED_MODULE_0__.GM.hidePages(\"TowerPage\");\n        });\n    }\n    displayOnLoad() { }\n    display() {\n        this.resultInfo.innerHTML = this.generateMessage();\n    }\n    displayEveryTick() { }\n    save() {\n        const saveText = super.save();\n        return saveText;\n    }\n    load(saveText) {\n        const saveTextArr = saveText.split(\"/*/\");\n        const i = super.load(saveTextArr);\n        return i;\n    }\n    generateMessage() {\n        var _a, _b;\n        let t;\n        if (_fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.fightingArmiesNr == 0) {\n            t = \"You lost!<br>\";\n            if ((_a = _fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.fight) === null || _a === void 0 ? void 0 : _a.loseSoldiers) {\n                t += \"With your loss, you lost all your soldiers as well!\";\n            }\n            else {\n                t += \"Don't worry though, you didn't lose anyone, the magic of the Tower kept them all alive.\";\n            }\n        }\n        else {\n            t = \"You won!<br>\";\n            if ((_b = _fighting__WEBPACK_IMPORTED_MODULE_2__.BossFightingPage.fight) === null || _b === void 0 ? void 0 : _b.loseSoldiers) {\n                t += \"Though you lost part of your army.\";\n            }\n            else {\n                t += \"Thank you for playing the game! <br> If you have a minute, I would really appreciate it if \" +\n                    \"you could give me some feedback through <a href=\\\"https://forms.gle/rMwKTcsQJGxfFLDN8\\\">a survey here</a> or in private.<br> Thank you for your time again!\";\n            }\n        }\n        return t;\n    }\n}\nconst BossFightingResultPage = new BossFightingResultPageClass(\"BossFightingResultPage\");\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/boss/result.ts?");

        /***/
      }),

/***/ "./src/pages/settings.ts":
/*!*******************************!*\
  !*** ./src/pages/settings.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsPage: () => (/* binding */ SettingsPage)\n/* harmony export */ });\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions */ \"./src/functions.ts\");\n/* harmony import */ var _game_body__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../game_body */ \"./src/game_body.ts\");\n/* harmony import */ var _statistics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../statistics */ \"./src/statistics.ts\");\n/* harmony import */ var _unlocks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../unlocks */ \"./src/unlocks.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tutorial */ \"./src/pages/tutorial.ts\");\n\n\n\n\n\n\n\nconst downloadToFile = (content, filename = 'GameSave', contentType = 'text/plain') => {\n    const a = document.createElement('a');\n    const file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = filename;\n    a.click();\n    URL.revokeObjectURL(a.href);\n};\nclass SettingsPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.PageClass {\n    constructor(name) {\n        super(name);\n        this.pageButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('#SettingsPageButton');\n        this.saveGameButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('#SaveGameButton');\n        this.loadGameButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('#LoadGameButton');\n        this.changeThemeButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('#ChangeTheme');\n        this.pageButton;\n        this.saveGameButton;\n        this.loadGameButton;\n        this.changeThemeButton;\n        this.colorThemes = {\n            'Black Theme': [\n                ['--default-background-color', 'rgb(14, 14, 15)'],\n                ['--default-color', 'rgb(240, 248, 255)'],\n                ['--default-toggle-button-border-color', 'rgb(255, 69, 0)'],\n                ['--selected-toggle-button-border-color', 'rgb(64, 00, 255)'],\n                ['--default-button-border-color', 'rgb(69,192,0)'],\n                ['--default-tower-floor-background-color', 'rgb(255, 255, 0)'],\n                ['--hover-tower-floor-background-color', 'rgb(214, 188, 40)'],\n                ['--selected-tower-floor-background-color', 'rgb(194, 146, 24)'],\n                ['--hover-selected-tower-floor-background-color', 'rgb(156, 116, 13)'],\n                ['--default-tower-floor-color', 'rgb(0, 0, 0)'],\n                ['--default-tower-floor-border-color', 'rgb(0, 0, 0)'],\n                ['--default-tower-level-background-color', 'rgb(222, 184, 135)'],\n                ['--disabled-tower-level-background-color', 'rgb(70, 66, 61)'],\n                ['--default-selection-list-border-color', 'rgb(128, 0, 128)'],\n            ],\n            'Grey Theme': [\n                ['--default-background-color', 'rgb(60, 60, 67)'],\n                ['--default-color', 'rgb(255, 255, 255)'],\n                ['--default-toggle-button-border-color', 'rgb(255, 55, 20)'],\n                ['--selected-toggle-button-border-color', 'rgb(53, 101, 202)'],\n                ['--default-button-border-color', 'rgb(102, 185, 53)'],\n                ['--default-tower-floor-background-color', 'rgb(218, 218, 37)'],\n                ['--hover-tower-floor-background-color', 'rgb(214, 188, 40)'],\n                ['--selected-tower-floor-background-color', 'rgb(194, 146, 24)'],\n                ['--hover-selected-tower-floor-background-color', 'rgb(156, 116, 13)'],\n                ['--default-tower-floor-color', 'rgb(0, 0, 0)'],\n                ['--default-tower-floor-border-color', 'rgb(24, 23, 32)'],\n                ['--default-tower-level-background-color', 'rgb(199, 156, 99)'],\n                ['--disabled-tower-level-background-color', 'rgb(54, 52, 49)'],\n                ['--default-selection-list-border-color', 'rgb(112, 5, 112)'],\n            ],\n            'Dark Red Theme': [\n                ['--default-background-color', 'rgb(35, 7, 9)'],\n                ['--default-color', 'rgb(168, 127, 52)'],\n                ['--default-toggle-button-border-color', 'rgb(252, 25, 25)'],\n                ['--selected-toggle-button-border-color', 'rgb(145, 76, 45)'],\n                ['--default-button-border-color', 'rgb(252, 25, 25)'],\n                ['--default-tower-floor-background-color', 'rgb(146, 0, 0)'],\n                ['--hover-tower-floor-background-color', 'rgb(110, 0, 0)'],\n                ['--selected-tower-floor-background-color', 'rgb(90, 9, 9)'],\n                ['--hover-selected-tower-floor-background-color', 'rgb(73, 9, 9)'],\n                ['--default-tower-floor-color', 'rgb(39, 1, 1)'],\n                ['--default-tower-floor-border-color', 'rgb(41, 0, 0)'],\n                ['--default-tower-level-background-color', 'rgb(184, 21, 62)'],\n                ['--disabled-tower-level-background-color', 'rgb(73, 27, 27)'],\n                ['--default-selection-list-border-color', 'rgb(128, 0, 128)'],\n            ],\n        };\n        this.themeOrder = ['Black Theme', 'Dark Red Theme'];\n        this.currentTheme = -1;\n        this.tutorialButton = document.querySelector('#SettingsPageTutorialButton');\n        this.initializeEventListeners();\n    }\n    initializeEventListeners() {\n        //Theme button\n        this.changeThemeButton.addEventListener('click', () => {\n            this.changeTheme();\n        });\n        //Save your game to file\n        this.saveGameButton.addEventListener('click', () => {\n            let saveText = _variables__WEBPACK_IMPORTED_MODULE_0__.Player.save();\n            saveText += '*/*' + _statistics__WEBPACK_IMPORTED_MODULE_4__.allThingsStatistics.save();\n            saveText += '*/*' + _unlocks__WEBPACK_IMPORTED_MODULE_5__.UH.save();\n            for (let page of Object.values(_variables__WEBPACK_IMPORTED_MODULE_0__.GM.pages)) {\n                saveText += '*/*' + page.save();\n            }\n            saveText += '*/*' + _variables__WEBPACK_IMPORTED_MODULE_0__.GM.currentPage;\n            saveText += '*/*' + Date.now();\n            downloadToFile(saveText);\n        });\n        //Load in your game from file\n        this.loadGameButton.addEventListener('input', () => {\n            _variables__WEBPACK_IMPORTED_MODULE_0__.GM.canSave = false;\n            if (this.loadGameButton.files) {\n                let fileReader = new FileReader();\n                fileReader.onload = () => {\n                    let saveText = fileReader.result;\n                    const saveTextArr = saveText.split('*/*');\n                    let i = 0;\n                    _variables__WEBPACK_IMPORTED_MODULE_0__.Player.load(saveTextArr[i]);\n                    i++;\n                    _statistics__WEBPACK_IMPORTED_MODULE_4__.allThingsStatistics.load(saveTextArr[i]);\n                    i++;\n                    _unlocks__WEBPACK_IMPORTED_MODULE_5__.UH.load(saveTextArr[i]);\n                    i++;\n                    for (let page of Object.values(_variables__WEBPACK_IMPORTED_MODULE_0__.GM.pages)) {\n                        page.load(saveTextArr[i]);\n                        i++;\n                    }\n                    _variables__WEBPACK_IMPORTED_MODULE_0__.GM.hidePages(saveTextArr[i]);\n                    i++;\n                    _variables__WEBPACK_IMPORTED_MODULE_0__.GM.loadOfflineProgress(Date.now() - Number(saveTextArr[i]));\n                    i++;\n                };\n                fileReader.readAsText(this.loadGameButton.files[0]);\n            }\n            _variables__WEBPACK_IMPORTED_MODULE_0__.GM.canSave = true;\n        });\n        //tutorial button\n        this.tutorialButton.addEventListener('click', function () {\n            _tutorial__WEBPACK_IMPORTED_MODULE_6__.TutorialPage.startTutorial('None', false, 'SettingsPage');\n            _variables__WEBPACK_IMPORTED_MODULE_0__.GM.hidePages('TutorialPage');\n        });\n        //reset button\n        (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('#ResetButton').addEventListener('click', function () {\n            _variables__WEBPACK_IMPORTED_MODULE_0__.GM.canSave = false;\n            localStorage.clear();\n            location.reload();\n        });\n    }\n    changeTheme() {\n        this.currentTheme++;\n        if (this.currentTheme == this.themeOrder.length) {\n            this.currentTheme = 0;\n        }\n        this.changeThemeButton.innerHTML = this.themeOrder[this.currentTheme];\n        for (let j = 0; j < this.colorThemes[this.themeOrder[this.currentTheme]].length; j++) {\n            document.body.style.setProperty(...this.colorThemes[this.themeOrder[this.currentTheme]][j]);\n        }\n    }\n    displayOnLoad() {\n        this.changeTheme();\n    }\n    display() {\n        if (this.timesVisited == 0) {\n            _tutorial__WEBPACK_IMPORTED_MODULE_6__.TutorialPage.startTutorial('Settings Page', true, 'SettingsPage');\n        }\n        else if (this.timesVisited == 1) {\n            //CHANGE/SOLVE THIS\n            _game_body__WEBPACK_IMPORTED_MODULE_3__.GB.pageButtons.container.parentElement.hidden = false;\n        }\n        this.timesVisited++;\n    }\n    displayEveryTick() { }\n    save() {\n        let saveText = super.save() + '/*/';\n        saveText += String(this.currentTheme - 1);\n        return saveText;\n    }\n    load(saveText) {\n        const saveTextArr = saveText.split('/*/');\n        //load base page and start counting from there in save file\n        let loadI = super.load(saveTextArr);\n        let i = loadI ? loadI : 0;\n        this.currentTheme = Number(saveTextArr[i]) <= -1 ? -1 : Number(saveTextArr[i]);\n        this.changeTheme();\n        return i;\n    }\n}\n;\nconst SettingsPage = new SettingsPageClass('SettingsPage');\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/settings.ts?");

        /***/
      }),

/***/ "./src/pages/store.ts":
/*!****************************!*\
  !*** ./src/pages/store.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorePage: () => (/* binding */ StorePage)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data */ \"./src/data.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../functions */ \"./src/functions.ts\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store */ \"./src/store.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tutorial */ \"./src/pages/tutorial.ts\");\n//          BUY CREATURE PAGE\n\n\n\n\n\n\n\nclass StoreItemListClass extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.ItemListClass {\n    //class names come in form of: .<name> or #<name>\n    constructor(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList = []) {\n        super(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList);\n        this.buyerRows = [];\n        this.type = \"creatures\";\n        //Entry format= nr_available, name, buy_button\n        const buyer_rows1 = (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getHtmlElementList)(\".nr_name_button_container.page_store > .nr_available_div\");\n        const buyer_rows2 = (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getHtmlElementList)(\".nr_name_button_container.page_store > .element_name_div\");\n        const buyer_rows3 = (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getHtmlElementList)(\".nr_name_button_container.page_store > .complementary_button\");\n        for (let i = 0; i < buyer_rows1.length; i++) {\n            this.buyerRows.push([buyer_rows1[i], buyer_rows2[i], buyer_rows3[i]]);\n        }\n        this.backButton.style.cursor = \"default\";\n        this.backButton.style.borderStyle = \"none\";\n        this.backButton.innerHTML = \"\";\n        this.initializeEventListenersChild();\n    }\n    initializeEventListenersChild() {\n        //initialize buyer button's mouse envents\n        for (let i = 0; i < this.buyerRows.length; i++) {\n            this.buyerRows[i][2].addEventListener(\"click\", () => {\n                if (StorePage.buyers[StorePage.type][i].buy(StorePage.buyNumberValues[StorePage.currentBuyNumberButton[this.type]])) {\n                    this.populateElement(i);\n                }\n            });\n        }\n    }\n    hideElement(elemNr) {\n        super.hideElement(elemNr);\n        this.elements[elemNr].hidden = true;\n    }\n    showElement(elemNr) {\n        super.showElement(elemNr);\n        this.elements[elemNr].hidden = false;\n        this.elements[elemNr].style.cursor = \"default\";\n    }\n    elementMouseenter(elemNr) {\n        StorePage.infoText.innerHTML = _data__WEBPACK_IMPORTED_MODULE_3__.stuff[StorePage.type][StorePage.buyers[this.type][elemNr].name].getText();\n    }\n    elementMouseleave(elemNr) {\n        StorePage.infoText.innerHTML = \"\";\n    }\n    populateElement(elemNr) {\n        const name = this.itemList[this.getItemListIndex(elemNr)].name;\n        this.buyerRows[elemNr][1].innerHTML = name;\n        const amount = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory[this.type][name];\n        if (amount) {\n            this.buyerRows[elemNr][0].innerHTML = \"(\" + (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(amount, true) + \")\";\n        }\n        else {\n            this.buyerRows[elemNr][0].innerHTML = \"(0)\";\n        }\n        this.buyerRows[elemNr][2].innerHTML = (0,_functions__WEBPACK_IMPORTED_MODULE_4__.stylizeDecimals)(this.itemList[this.getItemListIndex(elemNr)].getPrice(StorePage.buyNumberValues[StorePage.currentBuyNumberButton[this.type]]));\n    }\n    hidePreviousButton() {\n        super.hidePreviousButton();\n        this.previousButton.style.borderStyle = \"none\";\n        this.previousButton.innerHTML = \"\";\n    }\n    showPreviousButton() {\n        super.showPreviousButton();\n        this.previousButton.style.borderStyle = \"solid\";\n        this.previousButton.innerHTML = \"&lt;\";\n    }\n    hideNextButton() {\n        super.hideNextButton();\n        this.nextButton.style.borderStyle = \"none\";\n        this.nextButton.innerHTML = \"\";\n    }\n    showNextButton() {\n        super.showNextButton();\n        this.nextButton.style.borderStyle = \"solid\";\n        this.nextButton.innerHTML = \"&gt;\";\n    }\n    changeType(type) {\n        this.type = type;\n    }\n    changeSelection(type, itemList) {\n        this.changeType(type);\n        this.changeItemList(itemList);\n    }\n    changeItemList(itemList) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nclass StoreSubpageButtonGroupClass extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle) {\n        super(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle);\n    }\n    showButton(buttonNr) {\n        super.showButton(buttonNr);\n        this.buttons[buttonNr].hidden = false;\n    }\n    hideButton(buttonNr) {\n        super.hideButton(buttonNr);\n        this.buttons[buttonNr].hidden = true;\n    }\n    buttonClick(buttonNr) {\n        super.buttonClick(buttonNr);\n        StorePage.changeSubpage(StorePage.subpageTypes[buttonNr]);\n    }\n}\nclass BuyNrButtonGroupClass extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle) {\n        super(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle);\n    }\n    buttonClick(buttonNr) {\n        super.buttonClick(buttonNr);\n        StorePage.currentBuyNumberButton[StorePage.type] = buttonNr;\n        StorePage.display();\n    }\n}\nclass StorePageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.PageClass {\n    constructor(name) {\n        super(name);\n        this.buyers = {\n            \"creatures\": [new _store__WEBPACK_IMPORTED_MODULE_5__.Buyer(\"creatures\", \"Human\")],\n            \"weapons\": [new _store__WEBPACK_IMPORTED_MODULE_5__.Buyer(\"weapons\", \"Knife\")],\n        };\n        this.pageButton = document.querySelector(\"#StorePageButton\");\n        this.subpageTypes = [\"creatures\", \"weapons\"];\n        this.buyNumberValues = [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](100), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1000)];\n        this.currentBuyNumberButton = { \"creatures\": 0, \"weapons\": 0 };\n        this.infoText = document.querySelector(\"#StorePageInfo\");\n        this.type = \"creatures\";\n        this.itemList = new StoreItemListClass(\".nr_name_button_flex_container.page_store\", \".nr_name_button_container\", \".element_list_prev_button\", \".element_list_back_button\", \".element_list_next_button\", this.buyers[this.type]);\n        this.subpageButtons = new StoreSubpageButtonGroupClass(\"#StoreSubpageButtons\", \".select_button\", { \"borderColor\": \"var(--selected-toggle-button-border-color)\" }, { \"borderColor\": \"var(--default-toggle-button-border-color)\" });\n        this.buyNumberButtons = new BuyNrButtonGroupClass(\".toggle_button_container.page_store\", \".toggle_button\", { \"borderColor\": \"var(--selected-toggle-button-border-color)\" }, { \"borderColor\": \"var(--default-toggle-button-border-color)\" });\n        this.initializeEventListeners();\n    }\n    //called when page reloads\n    initializeEventListeners() { }\n    //called when new save gets loaded\n    displayOnLoad() {\n        this.buyNumberButtons.selectButton(this.currentBuyNumberButton[this.type]);\n        this.itemList.changeItemList(this.buyers[this.type]);\n    }\n    display() {\n        this.buyNumberButtons.selectButton(this.currentBuyNumberButton[this.type]);\n        if (this.timesVisited == 0) {\n            _tutorial__WEBPACK_IMPORTED_MODULE_6__.TutorialPage.unlockTutorial(\"Buy Creature Page\");\n            _tutorial__WEBPACK_IMPORTED_MODULE_6__.TutorialPage.startTutorial(\"Buy Creature Page\", true, \"StorePage\");\n        }\n        this.timesVisited++;\n        this.itemList.show();\n        this.itemList.changePage(this.itemList.page);\n    }\n    displayEveryTick() { }\n    //called when a save text is needed\n    save() {\n        let saveText = super.save();\n        saveText += \"/*/\" + String(Object.keys(this.buyers).length);\n        //save by subpage type\n        for (const type of Object.keys(this.buyers)) {\n            //save type name and what is current buy number button\n            saveText += \"/*/\" + type + \"/*/\" + this.currentBuyNumberButton[type];\n            //save buyer states (bought nr and the like)\n            saveText += \"/*/\" + String(this.buyers[type].length);\n            for (let i = 0; i < this.buyers[type].length; i++) {\n                saveText += \"/*/\" + this.buyers[type][i].nrBought;\n            }\n        }\n        saveText += \"/*/\" + this.subpageButtons.save();\n        saveText += \"/*/\" + this.buyNumberButtons.save();\n        return saveText;\n    }\n    //called when you need to get values from a saveText\n    //returns the number of steps taken\n    load(saveText) {\n        const saveTextArr = saveText.split(\"/*/\");\n        let saveI = super.load(saveTextArr);\n        let i = saveI ? saveI : 0;\n        const page_nr = Number(saveTextArr[i]);\n        i++;\n        for (let ii = 0; ii < page_nr; ii++) {\n            const type = saveTextArr[i];\n            i++;\n            this.currentBuyNumberButton[type] = Number(saveTextArr[i]);\n            i++;\n            const buyer_nr = Number(saveTextArr[i]);\n            i++;\n            for (let iii = 0; iii < buyer_nr; iii++) {\n                this.buyers[type][iii].nrBought = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveTextArr[i]);\n                i++;\n            }\n        }\n        i += this.subpageButtons.load(saveTextArr, i);\n        i += this.buyNumberButtons.load(saveTextArr, i);\n        return i;\n    }\n    changeSubpage(changeTo) {\n        this.type = changeTo;\n        this.itemList.changeSelection(this.type, this.buyers[this.type]);\n        this.itemList.show(true);\n        this.buyNumberButtons.buttonClick(this.currentBuyNumberButton[this.type]);\n    }\n}\nconst StorePage = new StorePageClass(\"StorePage\");\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/store.ts?");

        /***/
      }),

/***/ "./src/pages/tower.ts":
/*!****************************!*\
  !*** ./src/pages/tower.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TowerPage: () => (/* binding */ TowerPage)\n/* harmony export */ });\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions */ \"./src/functions.ts\");\n/* harmony import */ var _tower__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tower */ \"./src/tower.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tutorial */ \"./src/pages/tutorial.ts\");\n\n\n\n\n\nclass TowerSelectArmyButtonsClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.ButtonGroupClass {\n    constructor(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle) {\n        super(containerIdentifier, buttonIdentifier, selectedStyle, defaultStyle);\n    }\n    buttonClick(buttonNr) {\n        super.buttonClick(buttonNr);\n        TowerPage.changeArmy(buttonNr);\n    }\n}\nclass TowerPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.PageClass {\n    constructor(name) {\n        super(name);\n        this.towerFloors = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElementList)(\".tower_part\");\n        this.towerLevels = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElementList)(\".tower_level\");\n        this.towerInfo = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)(\"#TowerPageTowerInfo\");\n        this.pageButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)(\"#TowerPageButton\");\n        this.armyInfo = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)(\"#TowerPageArmyInfo\");\n        //reverse tower floors\n        let i = 0;\n        let j = this.towerFloors.length;\n        while (i < j) {\n            [this.towerFloors[i], this.towerFloors[j]] = [this.towerFloors[j], this.towerFloors[i]];\n            i++;\n            j--;\n        }\n        //remove undefined element from start\n        this.towerFloors.shift();\n        this.towerLevels;\n        this.towerInfo;\n        this.pageButton;\n        this.changeArmyButtons = new TowerSelectArmyButtonsClass(\".toggle_button_container.page_tower\", \".toggle_button\", { \"borderColor\": \"var(--selected-toggle-button-border-color)\" }, { \"borderColor\": \"var(--default-toggle-button-border-color)\" });\n        this.currentArmy = 0;\n        this.armyInfo;\n        this.Tower = new _tower__WEBPACK_IMPORTED_MODULE_3__.TowerClass();\n        this.initializeEventListeners();\n    }\n    //called when page reloads\n    initializeEventListeners() {\n        //initialize TOWER FLOOR hover functions\n        for (let i = 0; i < this.towerFloors.length; i++) {\n            //floors that are not yet implemented have their stuff here (mouseenter)\n            if (i >= this.Tower.floors.length) {\n                //set cursor style for floors that are not implemented yet.\n                this.towerFloors[i].style.cursor = \"default\";\n                this.towerFloors[i].addEventListener(\"mouseenter\", () => {\n                    this.towerInfo.innerHTML = \"Under developement, sorry. :<)\";\n                });\n            }\n            //implemented floors have mouseenter and click here\n            else {\n                //on mouseenter display new floor\n                this.towerFloors[i].addEventListener(\"mouseenter\", () => {\n                    this.displayFloor(i);\n                    //if the current floor is not selected\n                    if (i != this.Tower.currentFloor) {\n                        this.towerFloors[i].style.backgroundColor = \"var(--hover-tower-floor-background-color)\";\n                    }\n                    else {\n                        this.towerFloors[i].style.backgroundColor = \"var(--hover-selected-tower-floor-background-color)\";\n                    }\n                });\n                //on click change color and currentFloor\n                this.towerFloors[i].addEventListener(\"click\", () => {\n                    this.towerFloors[this.Tower.currentFloor].style.background = \"var(--default-tower-floor-background-color)\";\n                    this.Tower.currentFloor = i;\n                    this.towerFloors[i].style.background = \"var(--selected-tower-floor-background-color)\";\n                });\n            }\n            //on mouseleave, revert to current floor\n            this.towerFloors[i].addEventListener(\"mouseleave\", () => {\n                this.displayFloor(this.Tower.currentFloor);\n                if (i != this.Tower.currentFloor) {\n                    this.towerFloors[i].style.backgroundColor = \"var(--default-tower-floor-background-color)\";\n                }\n                else {\n                    this.towerFloors[i].style.backgroundColor = \"var(--selected-tower-floor-background-color)\";\n                }\n            });\n        }\n        //TOWER LEVEL click, enter and leave events and new atribute\n        for (let i = 0; i < this.towerLevels.length; i++) {\n            //display new level stuff on mouseenter\n            this.towerLevels[i].addEventListener(\"mouseenter\", () => {\n                this.displayLevelText(this.Tower.currentFloor, i);\n            });\n            //on mouseleave, display current floor\n            this.towerLevels[i].addEventListener(\"mouseleave\", () => {\n                this.displayFloorText();\n            });\n            //on click, change army that is raiding it\n            this.towerLevels[i].addEventListener(\"click\", () => {\n                const level = this.Tower.floors[this.Tower.currentFloor].levels[i];\n                const lastOne = level.raid(i);\n                //if raid was successfull, then change appearances around\n                if (!(lastOne === false)) {\n                    //if there was a last one that this army raided, then remove visuals from that army\n                    if (lastOne != -1) {\n                        this.displayLevel(this.Tower.currentFloor, lastOne);\n                    }\n                    this.displayLevel(this.Tower.currentFloor, i);\n                    this.displayLevelText(this.Tower.currentFloor, i);\n                }\n            });\n            this.towerLevels[i].setAttribute(\"contenttext\", \"\");\n        }\n    }\n    //called when new save gets loaded\n    displayOnLoad() {\n        this.towerFloors[this.Tower.currentFloor].style.backgroundColor = \"var(--selected-tower-floor-background-color)\";\n        //set the context text to the value you need on levels raided\n        for (let i = 0; i < this.Tower.raidedLevels.length; i++) {\n            const path = this.Tower.raidedLevels[i];\n            this.towerLevels[path[1]].setAttribute(\"contenttext\", this.Tower.floors[path[0]].levels[path[1]].raidingArmy + 1);\n        }\n    }\n    display() {\n        this.changeArmy(this.currentArmy);\n        this.displayFloor(this.Tower.currentFloor);\n        if (this.timesVisited == 0) {\n            _tutorial__WEBPACK_IMPORTED_MODULE_4__.TutorialPage.unlockTutorial(\"Tower Page\");\n            _tutorial__WEBPACK_IMPORTED_MODULE_4__.TutorialPage.startTutorial(\"Tower Page\", true, \"TowerPage\");\n        }\n        this.timesVisited++;\n    }\n    displayEveryTick() { }\n    //called when a save text is needed\n    save() {\n        let saveText = super.save();\n        saveText += \"/*/\" + this.currentArmy + \"/*/\";\n        //save raided floors and raided levels\n        saveText += this.Tower.save();\n        saveText += \"/*/\" + this.changeArmyButtons.save();\n        return saveText;\n    }\n    //called when you need to get values from a saveText\n    load(saveText) {\n        const saveTextArr = saveText.split(\"/*/\");\n        let loadI = super.load(saveTextArr);\n        let i = loadI ? loadI : 0;\n        this.currentArmy = Number(saveTextArr[i]);\n        i++;\n        i = this.Tower.load(saveTextArr, i);\n        i += this.changeArmyButtons.load(saveTextArr, i);\n        //display changes with on load function\n        this.displayOnLoad();\n        return i;\n    }\n    changeArmy(changeTo) {\n        this.currentArmy = changeTo;\n        this.armyInfo.innerHTML = _variables__WEBPACK_IMPORTED_MODULE_0__.Player.armies[this.currentArmy].getText(true);\n        this.displayFloor(this.Tower.currentFloor);\n    }\n    displayFloor(floorNr) {\n        //hide which is not needed, then show which is needed\n        let j = this.Tower.floors[floorNr].levels.length;\n        while (j < this.towerLevels.length) {\n            this.towerLevels[j].hidden = true;\n            j++;\n        }\n        j = 0;\n        while (j < this.Tower.floors[floorNr].levels.length) {\n            //only show if it is unlocked\n            this.towerLevels[j].hidden = false;\n            j++;\n        }\n        //color by availability and set position\n        j = 0;\n        while (j < this.Tower.floors[floorNr].levels.length) {\n            this.displayLevel(floorNr, j);\n            j++;\n        }\n        //display floor info\n        this.displayFloorText();\n    }\n    displayFloorText() {\n        this.towerInfo.innerHTML = this.Tower.floors[this.Tower.currentFloor].getText();\n    }\n    displayLevel(floorNr, levelNr) {\n        const level = this.Tower.floors[floorNr].levels[levelNr];\n        const content_text = level.raidingArmy == -1 ? \" \" : String(level.raidingArmy + 1);\n        const htmlLevel = this.towerLevels[levelNr];\n        htmlLevel.setAttribute(\"contenttext\", content_text);\n        htmlLevel.innerHTML = content_text;\n        htmlLevel.style.background = level.getColor();\n        htmlLevel.style.width = level.width;\n        htmlLevel.style.height = level.height;\n        htmlLevel.style.top = level.top;\n        htmlLevel.style.left = level.left;\n        htmlLevel.style.zIndex = level.zIndex;\n    }\n    displayLevelText(floorNr, levelNr) {\n        const level = this.Tower.floors[floorNr].levels[levelNr];\n        this.towerInfo.innerHTML = level.getText(this.Tower.floors[this.Tower.currentFloor].name, floorNr, levelNr);\n    }\n}\nconst TowerPage = new TowerPageClass(\"TowerPage\");\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/tower.ts?");

        /***/
      }),

/***/ "./src/pages/tutorial.ts":
/*!*******************************!*\
  !*** ./src/pages/tutorial.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TutorialPage: () => (/* binding */ TutorialPage)\n/* harmony export */ });\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../functions */ \"./src/functions.ts\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tutorial */ \"./src/tutorial.ts\");\n\n\n\n\nclass TutorialItemListClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.ItemListClass {\n    //class names come in form of: .<name> or #<name>\n    constructor(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList) {\n        super(containerIdentifier, elementIdentifier, previousButtonIdentifier, backButtonIdentifier, next_buttonIdentifier, itemList);\n    }\n    hideElement(elemNr) {\n        super.hideElement(elemNr);\n        this.elements[elemNr].innerHTML = '';\n        this.elements[elemNr].style.borderStyle = 'none';\n    }\n    showElement(elemNr) {\n        super.showElement(elemNr);\n        this.elements[elemNr].style.borderStyle = 'solid';\n    }\n    elementClick(elemNr) {\n        TutorialPage.startTutorial(TutorialPage.tutorialList.elements[elemNr].innerHTML, false, 'SettingsPage');\n    }\n    populateElement(elemNr) {\n        this.elements[elemNr].innerHTML = this.itemList[this.getItemListIndex(elemNr)];\n    }\n    backButtonClick() {\n        TutorialPage.exitTutorial();\n    }\n    hidePreviousButton() {\n        super.hidePreviousButton();\n        this.previousButton.style.borderStyle = 'none';\n        this.previousButton.innerHTML = '';\n    }\n    showPreviousButton() {\n        super.showPreviousButton();\n        this.previousButton.style.borderStyle = 'solid';\n        this.previousButton.innerHTML = '&lt;';\n    }\n    hideNextButton() {\n        super.hideNextButton();\n        this.nextButton.style.borderStyle = 'none';\n        this.nextButton.innerHTML = '';\n    }\n    showNextButton() {\n        super.showNextButton();\n        this.nextButton.style.borderStyle = 'solid';\n        this.nextButton.innerHTML = '&gt;';\n    }\n    show() {\n        super.show(true);\n    }\n}\n;\nclass TutorialPageClass extends _base_classes__WEBPACK_IMPORTED_MODULE_1__.PageClass {\n    constructor(name) {\n        super(name);\n        this.isMandatory = false;\n        this.tutorialName = '';\n        this.lastPage = '';\n        this.currentEntry = 0;\n        this.image = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('.tutorial_image.page_tutorial');\n        this.previousButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('.tutorial_previous_button.page_tutorial');\n        this.nextButton = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('.tutorial_next_button.page_tutorial');\n        this.unlockedTutorials = new Set();\n        this.defaultTutorialPath = './images/tutorial/';\n        this.pageButtonsVisibility = false;\n        this.tutorialList = new TutorialItemListClass('.element_list.page_tutorial', '.element_list_item', '.element_list_prev_button', '.element_list_back_button', '.element_list_next_button', []);\n        this.tutorials = {\n            'Settings Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Settings Page', 1),\n            'Army Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Army Page', 3),\n            'Buy Creature Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Buy Creature Page', 2),\n            'Buy Weapon Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Buy Weapon Page', 1),\n            'Tower Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Tower Page', 3),\n            'Boss Fighting Army Selection Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Boss Fighting Army Selection Page', 1),\n            'Boss Fighting Page': new _tutorial__WEBPACK_IMPORTED_MODULE_3__.TutorialItem('Boss Fighting Page', 1),\n        };\n        //call initializeEventListeners here\n        this.initializeEventListeners();\n    }\n    //called when page reloads\n    initializeEventListeners() {\n        this.previousButton.addEventListener('click', () => {\n            this.showPreviousEntry();\n        });\n        this.nextButton.addEventListener('click', () => {\n            if (this.nextButton.innerHTML == 'Finish') {\n                this.exitTutorial();\n            }\n            else {\n                this.showNextEntry();\n            }\n        });\n    }\n    //called when new save gets loaded\n    displayOnLoad() { }\n    //called when page gets visible\n    display() {\n        this.tutorialList.changePage(0);\n    }\n    //call when\n    displayEveryTick() { }\n    //called when a save text is needed\n    save() {\n        let saveText = String(this.unlockedTutorials.size);\n        for (let elem of this.unlockedTutorials) {\n            saveText += '/*/' + elem;\n        }\n        return saveText;\n    }\n    //called when you need to get values from a saveText\n    //maybe should call displayOnLoad?\n    load(saveText) {\n        const saveTextArr = saveText.split('/*/');\n        let i = 0, j = 0;\n        let len = Number(saveTextArr[i]);\n        i++;\n        while (j < len) {\n            this.unlockedTutorials.add(saveTextArr[i]);\n            i++;\n            j++;\n        }\n        return i;\n    }\n    unlockTutorial(name) {\n        this.unlockedTutorials.add(name);\n    }\n    getTutorialImageName() {\n        return this.defaultTutorialPath + this.tutorialName + String(this.currentEntry) + '.png';\n    }\n    setUpSelectionList() {\n        this.tutorialList.changeItemList(Array.from(this.unlockedTutorials.values()));\n        this.tutorialList.show();\n    }\n    setTutorialButtons() {\n        if (this.currentEntry == 0) {\n            this.previousButton.hidden = true;\n        }\n        else {\n            this.previousButton.hidden = false;\n        }\n        if (this.currentEntry == this.tutorials[this.tutorialName].nrPages - 1) {\n            if (this.isMandatory) {\n                this.nextButton.innerHTML = 'Finish';\n            }\n            else {\n                this.nextButton.hidden = true;\n            }\n        }\n        else {\n            this.nextButton.hidden = false;\n            this.nextButton.innerHTML = 'Next';\n        }\n    }\n    setUpTutorial(tutorialName, isMandatory, lastPage) {\n        this.lastPage = lastPage;\n        this.isMandatory = isMandatory;\n        this.tutorialName = tutorialName;\n        //if the thing is mandatory, hide selection list\n        if (isMandatory) {\n            this.tutorialList.hide();\n        }\n        //if it is not mandatory, set up and show selection list\n        else {\n            this.setUpSelectionList();\n        }\n        if (tutorialName == 'None') {\n            this.image.parentElement.hidden = true;\n            return;\n        }\n        else {\n            this.image.parentElement.hidden = false;\n        }\n        this.currentEntry = 0;\n        this.image.setAttribute('src', this.getTutorialImageName());\n        this.setTutorialButtons();\n    }\n    startTutorial(tutorialName, isMandatory, lastPage) {\n        this.pageButtonsVisibility = (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)(\"#PageButtonsContainer\").hidden;\n        this.setUpTutorial(tutorialName, isMandatory, lastPage);\n        (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)(\"#PageButtonsContainer\").hidden = true;\n        if (isMandatory) {\n            _variables__WEBPACK_IMPORTED_MODULE_0__.GM.hidePages('TutorialPage');\n        }\n        else {\n            this.pageButtonsVisibility = false;\n        }\n    }\n    showPreviousEntry() {\n        this.currentEntry--;\n        this.image.setAttribute('src', this.getTutorialImageName());\n        this.setTutorialButtons();\n    }\n    showNextEntry() {\n        this.currentEntry++;\n        this.image.setAttribute('src', this.getTutorialImageName());\n        this.setTutorialButtons();\n    }\n    exitTutorial() {\n        (0,_functions__WEBPACK_IMPORTED_MODULE_2__.getHtmlElement)('#PageButtonsContainer').hidden = this.pageButtonsVisibility;\n        if (this.isMandatory) {\n            this.tutorialList.hide();\n        }\n        _variables__WEBPACK_IMPORTED_MODULE_0__.GM.hidePages(this.lastPage);\n    }\n}\n;\nconst TutorialPage = new TutorialPageClass('TutorialPage');\n\n\n//# sourceURL=webpack://my-webpack-project/./src/pages/tutorial.ts?");

        /***/
      }),

/***/ "./src/statistics.ts":
/*!***************************!*\
  !*** ./src/statistics.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allThingsStatistics: () => (/* binding */ allThingsStatistics)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./variables */ \"./src/variables.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./src/data.ts\");\n/* harmony import */ var _unlocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./unlocks */ \"./src/unlocks.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n/*  A module which will store statistical data of your game, such as equipment bought this run and equipment bought overall */\n\n\n\n\n\n//a class which stores data in a list and conveniently gives access to it as well\n//currently has\nclass StatisticClass {\n    constructor() {\n        //each index corresponds to a different level of resets, starting from base to the latest\n        this.stats = [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)];\n        this.overall = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    }\n    get type() {\n        return 'StatisticClass';\n    }\n    add(amount) {\n        for (let i = 0; i < this.stats.length; i++) {\n            this.stats[i] = this.stats[i].add(amount);\n        }\n        this.overall = this.overall.add(amount);\n    }\n    setToMax(amount) {\n        for (let i = 0; i < this.stats.length; i++) {\n            this.stats[i] = this.stats[i].max(amount);\n        }\n        this.overall = this.overall.max(amount);\n    }\n    //levels: base, overall\n    getStatistics(level) {\n        if (level == 'overall') {\n            return this.overall;\n        }\n        else {\n            return this.stats[StatisticClass.levelToIndex[level]];\n        }\n    }\n    //reset everything except overall number to 0\n    reset(level) {\n        let len = level == 'overall' ? this.stats.length : StatisticClass.levelToIndex[level] + 1;\n        for (let i = 0; i < len; i++) {\n            this.stats[i] = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        }\n        if (level == 'overall') {\n            this.overall == new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        }\n    }\n    save() {\n        let saveText = '';\n        for (let i = 0; i < this.stats.length; i++) {\n            saveText += this.stats[i] + '/*/';\n        }\n        saveText += this.overall;\n        return saveText;\n    }\n    //returns the new i\n    load(saveText, i) {\n        for (let ii = 0; ii < this.stats.length; ii++) {\n            this.stats[ii] = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveText[i]);\n            i++;\n        }\n        this.overall = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveText[i]);\n        i++;\n        return i;\n    }\n}\nStatisticClass.levelToIndex = { 'base': 0 };\n;\n//an thisect that stores all statistics under it's stats property\nclass AllThingsStatisticsClass {\n    constructor() {\n        this.stats = {};\n        this.buildStats();\n    }\n    setEnd(base, elements) {\n        for (const e in elements) {\n            this.stats[base + e] = new StatisticClass();\n        }\n    }\n    buildStats() {\n        let base = \"StorePage\";\n        for (const k in Object.keys(_data__WEBPACK_IMPORTED_MODULE_2__.stuff)) {\n            const key = k;\n            for (const subkey in _data__WEBPACK_IMPORTED_MODULE_2__.stuff[key]) {\n                const finalKey = base + \".\" + key + \".\" + subkey;\n                this.stats[finalKey] = new StatisticClass();\n            }\n        }\n        base = \"Player\";\n        for (const k in [...Array(_variables__WEBPACK_IMPORTED_MODULE_1__.Player.armies.length).keys(), 'all']) {\n            for (const sk in [\"Attack\"]) {\n                const finalKey = base + \".armies.\" + k + \".\" + sk;\n                this.stats[finalKey] = new StatisticClass();\n            }\n        }\n        base = \"Tower\";\n        let nrFloors = 2;\n        let levelsPerFloor = [9, 12];\n        for (let i = 0; i < nrFloors; i++) {\n            for (let j = 0; j < levelsPerFloor[i]; j++) {\n                for (let k in [\"timesVisited\"]) {\n                    const finalKey = base + \".\" + i + \".\" + j + \".\" + k;\n                    this.stats[finalKey] = new StatisticClass();\n                }\n            }\n        }\n    }\n    //functions which change statistics, then unlock new stuff if needed\n    //they return the value true if an unlock was made, false otherwise\n    addToStatistics(path, amount) {\n        (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getObjFromPath)(path, this.stats).add(amount);\n        return _unlocks__WEBPACK_IMPORTED_MODULE_3__.UH.doUnlock(path);\n    }\n    setStatisticsToMax(path, amount) {\n        (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getObjFromPath)(path, this.stats).setToMax(amount);\n        return _unlocks__WEBPACK_IMPORTED_MODULE_3__.UH.doUnlock(path);\n    }\n    getStatistics(path, level) {\n        return (0,_functions__WEBPACK_IMPORTED_MODULE_4__.getObjFromPath)(path, this.stats).getStatistics(level);\n    }\n    save() {\n        let saveText = String(Object.keys(this.stats).length);\n        for (let [key, val] of Object.entries(this.stats)) {\n            saveText += '/*/' + key + '/*/' + val.save();\n        }\n        return saveText;\n    }\n    load(saveText) {\n        const saveTextArr = saveText.split('/*/');\n        let i = 0;\n        let len = Number(saveTextArr[i]);\n        i++;\n        let stats = this.stats;\n        for (let ii = 0; ii < len; ii++) {\n            i = stats[saveTextArr[i]].load(saveTextArr, i + 1);\n        }\n        return i;\n    }\n}\nconst allThingsStatistics = new AllThingsStatisticsClass();\n\n\n//# sourceURL=webpack://my-webpack-project/./src/statistics.ts?");

        /***/
      }),

/***/ "./src/stats.ts":
/*!**********************!*\
  !*** ./src/stats.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PriceHandler: () => (/* binding */ PriceHandler),\n/* harmony export */   Stats: () => (/* binding */ Stats),\n/* harmony export */   SubStats: () => (/* binding */ SubStats)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base_classes */ \"./src/base_classes.ts\");\n\n\n\nclass SubStatsStringFormat extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.HashLike {\n    constructor(physical, magic, fire, water, wind, nature) {\n        super();\n        this.physical = physical;\n        this.magic = magic;\n        this.fire = fire;\n        this.water = water;\n        this.wind = wind;\n        this.nature = nature;\n    }\n}\nclass ApplyFunctionForStats extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.HashLike {\n    comparableTypes(other) {\n        if (this instanceof Stats && other instanceof Stats) {\n            return true;\n        }\n        else if (this instanceof SubStats && other instanceof SubStats) {\n            return true;\n        }\n        return false;\n    }\n    finalType(other) {\n        if (other instanceof break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n            return true;\n        return false;\n    }\n    //apply a logical(comparison) function to all elements of current thisect that match the condFunc\n    //non-destructive\n    applyLogFunction(other, logFuncName) {\n        if (this.comparableTypes(other) && other instanceof _base_classes__WEBPACK_IMPORTED_MODULE_2__.HashLike) {\n            for (const ss in this) {\n                const valThis = this.get(ss);\n                const valOther = other.get(ss);\n                if (!valThis[logFuncName](valOther)) {\n                    return false;\n                }\n            }\n        }\n        else if (this.finalType(other)) {\n            for (const ss in this) {\n                const valThis = this.get(ss);\n                if (!valThis[logFuncName](other)) {\n                    return false;\n                }\n            }\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    //apply a computational function to all elements of current thisect that match the condFunc\n    //non-destructive\n    applyCompFunction(other, compFuncName, initVal, condFunc = () => true) {\n        if (this.comparableTypes(other) && other instanceof _base_classes__WEBPACK_IMPORTED_MODULE_2__.HashLike) {\n            for (const ss in this) {\n                const valThis = this.get(ss);\n                const valOther = other.get(ss);\n                if (condFunc(valThis, valOther))\n                    initVal.set(ss, valThis[compFuncName](valOther));\n            }\n        }\n        else if (this.finalType(other)) {\n            for (const ss in this) {\n                const valThis = this.get(ss);\n                if (condFunc(valThis, other))\n                    initVal.set(ss, valThis[compFuncName](other));\n            }\n        }\n        return initVal;\n    }\n    //apply a reducer function to all elements of current thisect that match the condFunc\n    //non-destructive\n    applyRedFunction(initVal, reducerFunc, condFunc = () => true) {\n        for (const e in this)\n            if (condFunc(this[e]))\n                initVal = reducerFunc(initVal, this[e]);\n        return initVal;\n    }\n}\n//a class to handle price, created to accept multiple functions across multiple intervals\nclass PriceHandler {\n    //ar = arithmetic increas, ge = geometric increase\n    constructor(stopPoints = [], types = [\"ar\"], coefficients = [new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)], start_price = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)) {\n        this.stopPoints = stopPoints;\n        this.stopPoints.unshift(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n        this.stopPoints.push(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Infinity));\n        this.coefficients = coefficients;\n        this.coefficients.unshift(start_price);\n        this.types = types;\n        this.types.unshift(\"ar\");\n        this.stopPointValues = [coefficients[0]];\n        for (let i = 1; i < stopPoints.length; i++) {\n            if (types[i] == \"ar\") {\n                this.stopPointValues[i] = this.stopPointValues[i - 1].add(this.stopPoints[i].sub(this.stopPoints[i - 1]).mul(this.coefficients[i]));\n            }\n            else if (types[i] == \"ge\") {\n                this.stopPointValues[i] = this.stopPointValues[i - 1].mul(this.stopPoints[i].sub(this.stopPoints[i - 1]).pow(this.coefficients[i]));\n            }\n        }\n    }\n    getPrice(nrOwned, toBuy) {\n        let i = 0;\n        while (this.stopPoints[i].lte(nrOwned)) {\n            i++;\n        }\n        //get start price\n        let start_price = this.stopPointValues[i - 1];\n        let new_price = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        //calculate new price\n        while (toBuy.gt(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0))) {\n            const upper_border = nrOwned.add(toBuy).gt(this.stopPoints[i]) ? this.stopPoints[i].sub(nrOwned) : toBuy;\n            if (this.types[i] == \"ar\") {\n                new_price = new_price.add(break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sumArithmeticSeries(upper_border, start_price, this.coefficients[i], nrOwned.sub(this.stopPoints[i - 1])));\n            }\n            else if (this.types[i] == \"ge\") {\n                new_price = new_price.add(break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sumGeometricSeries(upper_border, start_price, this.coefficients[i], nrOwned.sub(this.stopPoints[i - 1])));\n            }\n            start_price = this.stopPointValues[i];\n            i++;\n            toBuy = toBuy.sub(upper_border);\n            nrOwned = nrOwned.add(upper_border);\n        }\n        return new_price;\n    }\n}\n//elemental circle: fire -> nature -> water -> wind -> fire\n/*\n    A class which handles subStats, containing values for physical, magic, fire, water, wind and nature.\n    Public variables contain useable strings for creating string representation\n*/\nclass SubStats extends ApplyFunctionForStats {\n    constructor(physical = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), magic = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), fire = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), water = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), wind = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0), nature = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)) {\n        super();\n        this.physical = physical;\n        this.magic = magic;\n        this.fire = fire;\n        this.water = water;\n        this.wind = wind;\n        this.nature = nature;\n    }\n    eq(other) {\n        return this.applyLogFunction(other, \"eq\");\n    }\n    static eq(first, second) {\n        return first.eq(second);\n    }\n    lt(other) {\n        return this.applyLogFunction(other, \"lt\");\n    }\n    static lt(first, second) {\n        return first.lt(second);\n    }\n    lte(other) {\n        return this.applyLogFunction(other, \"lte\");\n    }\n    static lte(first, second) {\n        return first.lte(second);\n    }\n    gt(other) {\n        return !this.lte(other);\n    }\n    static gt(first, second) {\n        return first.gt(second);\n    }\n    gte(other) {\n        return !this.lt(other);\n    }\n    static gte(first, second) {\n        return first.gte(second);\n    }\n    isNull() {\n        return this.applyLogFunction(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.00001), \"lte\");\n    }\n    add(other) {\n        return this.applyCompFunction(other, \"add\", new Stats());\n    }\n    static add(first, second) {\n        return first.add(second);\n    }\n    sub(other) {\n        return this.applyCompFunction(other, \"sub\", new Stats());\n    }\n    static sub(first, second) {\n        return first.sub(second);\n    }\n    mul(other) {\n        return this.applyCompFunction(other, \"mul\", new Stats());\n    }\n    static mul(first, second) {\n        return first.mul(second);\n    }\n    div(other) {\n        const isNotZero = (t, o) => !o.eq(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n        return this.applyCompFunction(other, \"div\", new Stats(), isNotZero);\n    }\n    static div(first, second) {\n        return first.div(second);\n    }\n    getText() {\n        let t = \"\";\n        if (this.isNull()) {\n            return \"0\";\n        }\n        for (const ss in this) {\n            if (this[ss] != 0) {\n                t += SubStats.textStart + SubStats.typeColor.get(ss) + (0,_functions__WEBPACK_IMPORTED_MODULE_1__.stylizeDecimals)(this.get(ss)) + SubStats.typeEnd.get(ss) + \"&nbsp\";\n            }\n        }\n        return t;\n    }\n    //get the elemental attributly unmodified power of attack or defense\n    getPlainPower() {\n        let pow = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        for (const e in this) {\n            pow = pow.add(this[e]);\n        }\n        return pow;\n    }\n}\nSubStats.textStart = \"<span style=\\\"color:\";\nSubStats.typeColor = new SubStatsStringFormat(\"#c06000\\\">\", \"#b000b0\\\">\", \"#FF0000\\\">\", \"#4848ff\\\">\", \"#d0FFd0\\\">\", \"#20d000\\\">\");\nSubStats.typeEnd = new SubStatsStringFormat(\"&#x2BC0;</span>\", \"&#x2BC1;</span>\", \"&#x2BC5;</span>\", \"&#x2BC6;</span>\", \"&#x2BC7;</span>\", \"&#x2BC8;</span>\");\n/*\n    A class to store data related to stats.\n    Uses SubStats for complex (or multi-variable stats) like attack and defense.\n    Supports only entries which have eq, mul, add, sub and div methods\n*/\nclass Stats extends ApplyFunctionForStats {\n    //stat names: Attack, Defense (subStats), Health (not implemented yet)\n    constructor(statNames = [], statSubstats = []) {\n        super();\n        for (let i = 0; i < statNames.length; i++) {\n            this.set(statNames[i], statSubstats[i]);\n        }\n    }\n    eq(other) {\n        return this.applyLogFunction(other, \"eq\");\n    }\n    lt(other) {\n        return this.applyLogFunction(other, \"lt\");\n    }\n    lte(other) {\n        return this.applyLogFunction(other, \"lte\");\n    }\n    gt(other) {\n        return !this.lte(other);\n    }\n    gte(other) {\n        return !this.lt(other);\n    }\n    isNull() {\n        return this.applyLogFunction(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.00001), \"lte\");\n    }\n    add(other) {\n        const initVal = new Stats([], []);\n        return this.applyCompFunction(other, \"add\", initVal);\n    }\n    sub(other) {\n        const initVal = new Stats([], []);\n        return this.applyCompFunction(other, \"sub\", initVal);\n    }\n    mul(other) {\n        const initVal = new Stats([], []);\n        return this.applyCompFunction(other, \"mul\", initVal);\n    }\n    div(other) {\n        const initVal = new Stats([], []);\n        const isNotZero = (t, o) => !o.eq(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n        return this.applyCompFunction(other, \"div\", initVal, isNotZero);\n    }\n    /*\n        Get the string(HTML) representation of the thing with a newline at the end.\n    */\n    getText(showZeros = false) {\n        let t = \"\";\n        for (const ss in this) {\n            const entry = this[ss];\n            if (entry instanceof Stats) {\n                t += \"<br>\" + entry.getText() + \"<br>\";\n            }\n            else if (entry instanceof SubStats) {\n                if (!entry.isNull() || showZeros) {\n                    t += ss + \":&nbsp\" + entry.getText() + \"<br>\";\n                }\n            }\n            else if (entry instanceof break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n                if (entry.neq_tolerance(0, 0.00001) || showZeros) {\n                    t += ss + \":&nbsp\" + (0,_functions__WEBPACK_IMPORTED_MODULE_1__.stylizeDecimals)(entry) + \"<br>\";\n                }\n            }\n        }\n        return t;\n    }\n    /*\n        Get HTML string which represents the result of the comparison to current thisect.\n    */\n    //TODO: Look at getCompareText\n    getCompareText(other) {\n        /*'Level: ' + (Player.armies[ArmyPage.currentArmy].level+1) +\n         + (Player.armies[ArmyPage.currentArmy].level + 2) + '<br>';*/\n        const a = this.add(other);\n        let t = \"\";\n        for (const ss in a) {\n            const thisEntry = this.get(ss);\n            const otherEntry = other.get(ss);\n            //if entry is not present in current stats\n            if (thisEntry == undefined) {\n                if (otherEntry instanceof Stats) {\n                    t += \"<br>\" + otherEntry.getCompareText(new Stats());\n                }\n                else {\n                    t += ss + \":&nbsp\";\n                    if (otherEntry instanceof SubStats) {\n                        t += \"0 &rightarrow; \" + otherEntry.getText();\n                    }\n                    else {\n                        t += \"0 &rightarrow; \" + (0,_functions__WEBPACK_IMPORTED_MODULE_1__.stylizeDecimals)(otherEntry);\n                    }\n                }\n            }\n            //if entry is not present in the other stats\n            else if (otherEntry == undefined) {\n                if (thisEntry instanceof Stats) {\n                    t += \"<br>\" + thisEntry.getCompareText(new Stats());\n                }\n                else {\n                    t += ss + \":&nbsp\";\n                    if (thisEntry instanceof SubStats) {\n                        t += thisEntry.getText() + \" &rightarrow; 0\";\n                    }\n                    else {\n                        t += (0,_functions__WEBPACK_IMPORTED_MODULE_1__.stylizeDecimals)(thisEntry) + \" &rightarrow; 0\";\n                    }\n                }\n            }\n            //if entry is present in both stats\n            else {\n                if (otherEntry instanceof Stats) {\n                    // t += \"<br>\" + thisEntry.getCompareText(otherEntry);\n                }\n                else {\n                    t += ss + \":&nbsp\";\n                    const colored_arrow = \"<span style=\\\"color:\" + (0,_functions__WEBPACK_IMPORTED_MODULE_1__.getCompareColor)(thisEntry, otherEntry)\n                        + \"\\\">  &rightarrow; </span>\";\n                    if (otherEntry instanceof SubStats) {\n                        // t += thisEntry.getText() + colored_arrow + otherEntry.getText();\n                    }\n                    else {\n                        t += (0,_functions__WEBPACK_IMPORTED_MODULE_1__.stylizeDecimals)(thisEntry) + colored_arrow + (0,_functions__WEBPACK_IMPORTED_MODULE_1__.stylizeDecimals)(otherEntry);\n                    }\n                }\n            }\n            t += \"<br>\";\n        }\n        return t;\n    }\n    //get the elemental attributly unmodified power of attack or defense\n    getPlainPower(type = \"Attack||Defense\") {\n        const key = type;\n        if (this[key] instanceof SubStats) {\n            return this.get(type).getPlainPower();\n        }\n        return new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    }\n    //get the elemental attributly modified power of attack or defense\n    getPower(statsB, typeA = \"Attack||Defense\", typeB = \"Defense||Attack\") {\n        let pow = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        const subStatsA = this.get(typeA);\n        const subStatsB = statsB.get(typeB);\n        if (subStatsA) {\n            pow = this.get(typeA).getPlainPower();\n        }\n        else {\n            return pow;\n        }\n        if (!subStatsB) {\n            return pow;\n        }\n        else {\n            pow = pow.sub(subStatsB.physical);\n        }\n        if (subStatsA.fire.gt(0)) {\n            pow = pow.add(subStatsB.nature.abs().min(subStatsA.fire).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            if (subStatsB.wind.gt(0)) {\n                pow = pow.sub(subStatsB.wind.min(subStatsA.fire).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            }\n        }\n        if (subStatsA.nature.gt(0)) {\n            pow = pow.add(subStatsB.water.abs().min(subStatsA.nature).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            if (subStatsB.wind.gt(0)) {\n                pow = pow.sub(subStatsB.fire.min(subStatsA.nature).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            }\n        }\n        if (subStatsA.water.gt(0)) {\n            pow = pow.add(subStatsB.wind.abs().min(subStatsA.water).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            if (subStatsB.wind.gt(0)) {\n                pow = pow.sub(subStatsB.nature.min(subStatsA.water).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            }\n        }\n        if (subStatsA.wind.gt(0)) {\n            pow = pow.add(subStatsB.fire.abs().min(subStatsA.wind).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            if (subStatsB.wind.gt(0)) {\n                pow = pow.sub(subStatsB.water.min(subStatsA.wind).mul(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5)));\n            }\n        }\n        return pow;\n    }\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/stats.ts?");

        /***/
      }),

/***/ "./src/store.ts":
/*!**********************!*\
  !*** ./src/store.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Buyer: () => (/* binding */ Buyer)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./variables */ \"./src/variables.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./src/data.ts\");\n/* harmony import */ var _pages_army__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/army */ \"./src/pages/army.ts\");\n/* harmony import */ var _statistics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./statistics */ \"./src/statistics.ts\");\n/* harmony import */ var _pages_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/store */ \"./src/pages/store.ts\");\n\n\n\n\n\n\nclass Buyer {\n    constructor(type, name, currency = \"gold\", nrBought = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)) {\n        this.borderColors = {\n            \"gold\": \"gold\",\n        };\n        this.type = type;\n        this.name = name;\n        this.nrBought = nrBought;\n        this.currency = currency;\n    }\n    buy(buyNr) {\n        const price = _data__WEBPACK_IMPORTED_MODULE_2__.stuff[this.type][this.name].getPrice(this.nrBought, buyNr);\n        const currencyAmount = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.get(this.currency);\n        if (currencyAmount.gte(price)) {\n            _variables__WEBPACK_IMPORTED_MODULE_1__.Player.set(this.currency, currencyAmount.sub(price));\n            //when adding a new element\n            if (!_variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory[this.type][this.name]) {\n                _pages_army__WEBPACK_IMPORTED_MODULE_3__.ArmyPage.elementEquipState[this.type][this.name] = 0;\n                _variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory[this.type][this.name] = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n            }\n            _variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory[this.type][this.name] = _variables__WEBPACK_IMPORTED_MODULE_1__.Player.inventory[this.type][this.name].add(buyNr);\n            this.nrBought = this.nrBought.add(buyNr);\n            if (_statistics__WEBPACK_IMPORTED_MODULE_4__.allThingsStatistics.addToStatistics([\"StorePage\", this.type, this.name], buyNr)) {\n                _pages_store__WEBPACK_IMPORTED_MODULE_5__.StorePage.itemList.changePage(_pages_store__WEBPACK_IMPORTED_MODULE_5__.StorePage.itemList.page);\n            }\n            return true;\n        }\n        return false;\n    }\n    getPrice(buyNr) {\n        return _data__WEBPACK_IMPORTED_MODULE_2__.stuff[this.type][this.name].getPrice(this.nrBought, buyNr);\n    }\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/store.ts?");

        /***/
      }),

/***/ "./src/tower.ts":
/*!**********************!*\
  !*** ./src/tower.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TowerClass: () => (/* binding */ TowerClass)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variables */ \"./src/variables.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data */ \"./src/data.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n/* harmony import */ var _pages_boss_army_selection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pages/boss/army_selection */ \"./src/pages/boss/army_selection.ts\");\n/* harmony import */ var _pages_tower__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/tower */ \"./src/pages/tower.ts\");\n\n\n\n\n\n\n\n\n\nclass ParentTowerLevel {\n    constructor(width, height, top, left, zIndex, capacity, unlocks, name, desc, raidingArmy) {\n        this.width = width;\n        this.height = height;\n        this.top = top;\n        this.left = left;\n        this.capacity = capacity;\n        this.raidingArmy = raidingArmy;\n        this.name = name;\n        this.desc = desc;\n        this.zIndex = zIndex;\n        this.unlocks = unlocks;\n        //it is to prevent trying to unlock multiple times the unlocks\n        this.unlockedNextLevels = false;\n    }\n}\n//the level class that makes up the tower floors (a floor consists of one or more levels)\nclass TowerLevel extends ParentTowerLevel {\n    constructor(width, height, top, left, zIndex, stats, capacity, goldPerPower, unlocks = [], name = \"\", desc = \"\", raidingArmy = -1) {\n        super(width, height, top, left, zIndex, capacity, unlocks, name, desc, raidingArmy);\n        this.goldPerPower = goldPerPower;\n        this.stats = stats;\n        this.type = \"Raid\";\n    }\n    get goldPerSecond() {\n        return (_variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[this.raidingArmy].size.min(this.capacity)).mul(this.goldPerPower).mul(_variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[this.raidingArmy].stats.getPower(this.stats, \"Attack\", \"Defense\")).max(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0));\n    }\n    getColor() {\n        const defPower = this.stats.getPower(_variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].stats, \"Defense\", \"Attack\");\n        const atkPower = _variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].stats.getPower(this.stats, \"Attack\", \"Defense\");\n        if (atkPower.lt(defPower)) {\n            return \"var(--disabled-tower-level-background-color)\";\n        }\n        else {\n            return \"var(--default-tower-level-background-color)\";\n        }\n    }\n    tick(nrTicks) {\n        _variables__WEBPACK_IMPORTED_MODULE_2__.Player.gold = _variables__WEBPACK_IMPORTED_MODULE_2__.Player.gold.add(this.goldPerSecond.div(nrTicks));\n    }\n    getText(floorName) {\n        return \"<b>\" + floorName + \" - \" + this.name + \"</b><br>\" +\n            \"<i>Type: \" + this.type + \"</i><br>\" +\n            \"Raided by: \" + (this.raidingArmy == -1 ? \"None\" : this.raidingArmy + 1) + \"<br>\" +\n            \"Defense: \" + this.stats.get(\"Defense\").getText() + \"<br>\" +\n            \"Capacity: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.capacity, true) +\n            \"<br>\" + \"Gold per power: \" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.goldPerPower) + \"<br>\" +\n            \"Current gold per second: \" + (this.raidingArmy == -1 ? \"None\" : (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.goldPerSecond)) + \"<br>\" +\n            \"<br><i>\" + this.desc + \"</i>\";\n    }\n    raid(levelNr) {\n        /*\n            Input:  levelNr: the number of the level in the current floor\n            Output: the number of the level this army was raiding before this floor\n                    -1 if ther was no such army\n        */\n        //get attacking and defensive power respective to this tower level\n        const defPower = this.stats.getPower(_variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].stats, \"Defense\", \"Attack\");\n        const atkPower = _variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].stats.getPower(this.stats, \"Attack\", \"Defense\");\n        //last level raided by same army\n        let lastOne = -1;\n        if (defPower.lte(atkPower)) {\n            //if you try to raid level with same army again, remove raiding army from this level\n            if (this.raidingArmy == _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy) {\n                this.raidingArmy = -1;\n                _variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].raiding = -1;\n                //remove the problematic element from the array which stores the raided places\n                _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.removeRaidedLevel(_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.currentFloor, levelNr);\n                //return the same levelNr as this level\n                lastOne = levelNr;\n            }\n            else {\n                //if this army was already raiding, remove previous raid\n                if (_variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].raiding != -1) {\n                    lastOne = _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.removeRaidedLevelByArmy(_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy)[1];\n                }\n                //if the level is already raided, remove it\n                if (this.raidingArmy != -1) {\n                    _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.changeRaidedLevel(_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.currentFloor, levelNr, _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy);\n                }\n                else {\n                    _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.addRaidedLevel(_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.currentFloor, levelNr, _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy);\n                }\n                this.raidingArmy = _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy;\n                _variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].raiding = levelNr;\n            }\n            //unlock new levels\n            if (!this.unlockedNextLevels) {\n                for (let j = 0; j < this.unlocks.length; j++) {\n                    const un = this.unlocks[j];\n                    //* CHANGE THIS (MOVE IT SOMEWHERE ELSE)\n                    if (un[0] == _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.currentFloor) {\n                        _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.towerLevels[un[1]].hidden = false;\n                    }\n                    //*/\n                }\n                this.unlockedNextLevels = true;\n            }\n        }\n        else {\n            return false;\n        }\n        return lastOne;\n    }\n}\nclass BossFightLevel extends ParentTowerLevel {\n    constructor(width, height, top, left, zIndex, boss, capacity, rewards, unlocks = [], name = \"\", desc = \"\", raidingArmy = -1) {\n        super(width, height, top, left, zIndex, capacity, unlocks, name, desc, raidingArmy);\n        this.rewards = rewards;\n        this.boss = boss;\n    }\n    get type() {\n        return _data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].type;\n    }\n    get stats() {\n        return _data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].stats;\n    }\n    getColor() {\n        const defPower = _data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].stats.getPower(_variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].stats, \"Defense\", \"Attack\");\n        const atkPower = _variables__WEBPACK_IMPORTED_MODULE_2__.Player.armies[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.currentArmy].stats.getPower(_data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].stats, \"Attack\", \"Defense\");\n        if (atkPower.lt(defPower)) {\n            return \"var(--disabled-tower-level-background-color)\";\n        }\n        else {\n            return \"var(--default-tower-level-background-color)\";\n        }\n    }\n    getText(floorName) {\n        return \"<b>\" + floorName + \" - \" + this.name + \"</b><br>\" +\n            \"<i>Type: \" + this.type + \"</i><br><br>\" +\n            _data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].name + \"<br>\" +\n            _data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].stats.getText() + \"<br>\" +\n            \"<i>\" + _data__WEBPACK_IMPORTED_MODULE_4__.stuff.bosses[this.boss].desc + \"</i><br><br>\" +\n            \"Capacity:\" + (0,_functions__WEBPACK_IMPORTED_MODULE_5__.stylizeDecimals)(this.capacity, true) + \"<br><br>\" +\n            \"<i>\" + this.desc + \"</i>\";\n    }\n    tick() { }\n    raid(levelNr) {\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#PageButtonsContainer\").hidden = true;\n        (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getHtmlElement)(\"#PageTopResourcesContainer\").hidden = true;\n        _pages_boss_army_selection__WEBPACK_IMPORTED_MODULE_6__.BossArmySelectionPage.fight = new _base_classes__WEBPACK_IMPORTED_MODULE_3__.Fight([this.boss], 1, false);\n        _variables__WEBPACK_IMPORTED_MODULE_2__.GM.hidePages(\"BossArmySelectionPage\");\n        return false;\n    }\n}\nclass TowerFloor {\n    constructor(levels = [], name = \"\", desc = \"\", raidedLevels = []) {\n        this.levels = levels;\n        this.name = name;\n        this.desc = desc;\n        this.raidedLevels = raidedLevels;\n    }\n    getText() {\n        return \"<b>\" + this.name + \"</b><br>\" +\n            \"<br><i>\" + this.desc + \"</i>\";\n    }\n}\nclass TowerClass {\n    constructor() {\n        this.floors = [];\n        this.raidedLevels = [];\n        this.currentFloor = 0;\n        this.initializeFloors();\n    }\n    initializeFloors() {\n        this.floors[0] = new TowerFloor([new TowerLevel(100, 50, 500, 100, 0, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.5))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](500), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1), [[0, 1], [0, 2]], \"Sewers 1\", \"Still laughing, you go inside the building only to realize that the stink is even worse than what you thought it would be. Now you start to feel sorry for the guy who tried to organize a date here. <br> Going one step further, you find yourselves in knee-high dirty water hoping that the situation will change for the better in the next few minutes.\"),\n            new TowerLevel(100, 50, 449, 49, 3, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](250), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2), [[0, 3], [0, 4]], \"Sewers 2\", \"You took the trapdoor on the left side of the first level. The stench is no better, but at least some new strange moss is inhabiting the left wall.\"),\n            new TowerLevel(100, 50, 449, 151, 3, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](250), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2), [[0, 3], [0, 5]], \"Sewers 3\", \"You took the trapdoor on the right side of the first level. The stench is no better, but at least some new strange moss is inhabiting the right wall.\"),\n            new TowerLevel(120, 50, 423, 115, 2, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](3.4))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](450), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](15), [[0, 6]], \"Sewers 4\", \"After taking one door to the back, you find yourself in a moss-filled place. Instead of the wetness of water, you are greeted with the slimeiness of... well, of slime.\"),\n            new TowerLevel(30, 50, 385, 75, 3, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](600), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5), [[1, 0]], \"Sewers 5\", \"Another trapdoor in the left portion of the ceiling, who would've guessed? At least the place is not wet anymore and... well, it's way hotter and the stink is worse... You got comfort for your legs, but at what price?\"),\n            new TowerLevel(30, 50, 385, 229, 3, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](600), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5), [[1, 0]], \"Sewers 6\", \"Another trapdoor in the right portion of the ceiling, who would've guessed? At least the place is not wet anymore and... well, it's way hotter and the stink is worse... You got comfort for your legs, but at what price?\"),\n            new TowerLevel(80, 50, 397, 162, 1, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5.5))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](900), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](37), [[0, 7]], \"Sewers 7\", \"The slime coating becomes more consistent, sticky and concentrated. Surprising no one, this is even more unconfortable than it was.\"),\n            new TowerLevel(30, 70, 300, 220, 0, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](9.5))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1200), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](87), [[0, 8]], \"Sewers 8\", \"The stink intensifies to an unheard-of level when you enter the room. The slime pools on the ground, knee-high in places, ankle high in others. It is dripping from the ceiling as well, along from the edges of the spiral staircase leading ever upwards. Some railing would come in handy, but you can't get everything in life...\"),\n            new BossFightLevel(30, 70, 230, 220, 0, \"Slime\", new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1200), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](40), [], \"Sewer's Top\", \"The topmost level of the sewers. It is lit with candles. Due to the slight topwards incline and the slight upwards arc of the floor, the slime is only running in two rivers next to the walls.  You don't want to find out what lurks in the shadows, but will have to do so eventually...\"),], \"Sewers\", \"Wet and stinky and the odor gets worse the higher you go. Before the entrance stands a lone sign: 'EXTREME DANGER OF DEATH (also not an ideal place for a date, trust me)'\");\n        this.floors[1] = new TowerFloor([new TowerLevel(100, 50, 300, 100, 0, new _stats__WEBPACK_IMPORTED_MODULE_1__.Stats([\"Defense\"], [new _stats__WEBPACK_IMPORTED_MODULE_1__.SubStats(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5))]), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](300), new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2), [], \"The Slums\", \"When you venture beyond the sewers, the place looks like a big slum, full of giant rats.\")], \"Rat-haven\", \"A place where the rats thrive.\");\n    }\n    getGoldPerSecond() {\n        let goldPerSecond = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n        for (let i = 0; i < _pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.raidedLevels.length; i++) {\n            goldPerSecond = goldPerSecond.add(_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.floors[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.raidedLevels[i][0]].levels[_pages_tower__WEBPACK_IMPORTED_MODULE_7__.TowerPage.Tower.raidedLevels[i][1]].goldPerSecond);\n        }\n        return goldPerSecond;\n    }\n    removeRaidedLevel(floorNr, levelNr) {\n        let found = undefined;\n        for (let j = 0; j < this.raidedLevels.length; j++) {\n            if (this.raidedLevels[j][0] == floorNr && this.raidedLevels[j][1] == levelNr) {\n                found = this.raidedLevels.splice(j, 1)[0];\n                break;\n            }\n        }\n        if (found != undefined) {\n            this.floors[found[0]].levels[found[1]].raidingArmy = -1;\n        }\n    }\n    //returns removed level\n    removeRaidedLevelByArmy(armyNr) {\n        let found = undefined;\n        for (let j = 0; j < this.raidedLevels.length; j++) {\n            if (this.raidedLevels[j][2] == armyNr) {\n                found = this.raidedLevels.splice(j, 1)[0];\n                break;\n            }\n        }\n        if (found != undefined) {\n            this.floors[found[0]].levels[found[1]].raidingArmy = -1;\n        }\n        return found;\n    }\n    addRaidedLevel(floorNr, levelNr, armyNr) {\n        this.raidedLevels.push([floorNr, levelNr, armyNr]);\n    }\n    changeRaidedLevel(floorNr, levelNr, newArmyNr) {\n        for (let j = 0; j < this.raidedLevels.length; j++) {\n            if (this.raidedLevels[j][0] == floorNr && this.raidedLevels[j][1] == levelNr) {\n                this.raidedLevels[j][2] = newArmyNr;\n                break;\n            }\n        }\n    }\n    save() {\n        let saveText = String(this.currentFloor);\n        saveText += \"/*/\" + String(this.raidedLevels.length);\n        for (let i = 0; i < this.raidedLevels.length; i++) {\n            saveText += \"/*/\" + this.raidedLevels[i][0] + \"/*/\" + this.raidedLevels[i][1] + \"/*/\" + this.raidedLevels[i][2];\n        }\n        return saveText;\n    }\n    //returns the modified i\n    load(saveText, i) {\n        this.currentFloor = Number(saveText[i]);\n        i++;\n        const len = Number(saveText[i]);\n        i++;\n        for (let ii = 0; ii < len; ii++, i += 3) {\n            this.addRaidedLevel(Number(saveText[i]), Number(saveText[i + 1]), Number(saveText[i + 2]));\n        }\n        return i;\n    }\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/tower.ts?");

        /***/
      }),

/***/ "./src/tutorial.ts":
/*!*************************!*\
  !*** ./src/tutorial.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TutorialItem: () => (/* binding */ TutorialItem)\n/* harmony export */ });\nclass TutorialItem {\n    constructor(name, nrPages) {\n        this.name = name;\n        this.nrPages = nrPages;\n    }\n}\n;\n\n\n//# sourceURL=webpack://my-webpack-project/./src/tutorial.ts?");

        /***/
      }),

/***/ "./src/unlocks.ts":
/*!************************!*\
  !*** ./src/unlocks.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UH: () => (/* binding */ UH)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _game_body__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_body */ \"./src/game_body.ts\");\n/* harmony import */ var _pages_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pages/store */ \"./src/pages/store.ts\");\n/* harmony import */ var _statistics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./statistics */ \"./src/statistics.ts\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./store */ \"./src/store.ts\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./functions */ \"./src/functions.ts\");\n\n\n\n\n\n\n//logic unlock condition classes\nclass UnlockConditionLogicClass {\n    constructor(N) {\n        this.N = N;\n    }\n    countTrueConditions(conditions) {\n        let trueConds = 0;\n        for (let i = 0; i < conditions.length; i++) {\n            trueConds += Number(conditions[i].canUnlock());\n        }\n        return trueConds;\n    }\n    canUnlock(conditoins) {\n        return true;\n    }\n}\n;\nclass AllUCL extends UnlockConditionLogicClass {\n    constructor() {\n        super(0);\n    }\n    canUnlock(conditions) {\n        return this.countTrueConditions(conditions) == conditions.length;\n    }\n}\n//returns true if at least N of its conditions are true\nclass AtLeastNUCL extends UnlockConditionLogicClass {\n    constructor(N) {\n        super(N);\n    }\n    canUnlock(conditions) {\n        return this.countTrueConditions(conditions) >= this.N;\n    }\n}\n;\n//when you only need one thing from a list to get an unlock\nclass AtLeastOneUCL extends AtLeastNUCL {\n    constructor() {\n        super(1);\n    }\n}\n//returns true if at least N and at most M of its conditions are true\nclass AtLeastNAtMostMUCL extends UnlockConditionLogicClass {\n    constructor(N, M) {\n        super(N);\n        this.M = M;\n    }\n    canUnlock(conditions) {\n        let trueConds = this.countTrueConditions(conditions);\n        return this.N <= trueConds && trueConds <= this.M;\n    }\n}\n;\n//returns true if exactly N of its conditions are true\nclass ExactlyNUCL extends UnlockConditionLogicClass {\n    constructor(N) {\n        super(N);\n    }\n    canUnlock(conditions) {\n        return this.N == this.countTrueConditions(conditions);\n    }\n}\n;\nclass UnlockConditionClass {\n    constructor(quantity) {\n        this.quantity = quantity;\n        this.conditionCode = -1;\n    }\n    //a function which dictates if the thing can be unlocked;\n    canUnlock() {\n        if (this.quantity.lte(_statistics__WEBPACK_IMPORTED_MODULE_3__.allThingsStatistics.getStatistics(this.getPathInStatistics(), this.resetLevel))) {\n            return true;\n        }\n        return false;\n    }\n    getPathInStatistics() {\n        return [];\n    }\n    //comparison functions based on quantity\n    lt(other) {\n        return this.quantity.lt(other.quantity);\n    }\n    lte(other) {\n        return this.quantity.lte(other.quantity);\n    }\n    gt(other) {\n        return this.quantity.gt(other.quantity);\n    }\n    gte(other) {\n        return this.quantity.gte(other.quantity);\n    }\n}\n;\nclass OverallUnlockConditionClass extends UnlockConditionClass {\n    constructor(quantity) {\n        super(quantity);\n    }\n    get resetLevel() {\n        return 'overall';\n    }\n    get acronym() {\n        return 'O';\n    }\n}\n//Specific unlock condition classes come now\n//naming: 1-2 words regarding where it is grouped, then where it looks at(O = overall, B = base), then UC for UnlockCondition\n//category represents the equipment you want to buy(like Human, Knife, Longsword etc.)\nclass StorePageOUC extends OverallUnlockConditionClass {\n    constructor(type, category, quantity) {\n        super(quantity);\n        this.type = type;\n        this.category = category;\n    }\n    getPathInStatistics() {\n        return ['StorePage', this.type, this.category];\n    }\n}\n;\nclass PlayerArmyOUC extends OverallUnlockConditionClass {\n    constructor(quantity, army, stat) {\n        super(quantity);\n        this.army = army;\n        this.stat = stat;\n    }\n    getPathInStatistics() {\n        return ['Player', 'armies', this.army, this.stat];\n    }\n}\n;\nclass TowerLevelOUC extends OverallUnlockConditionClass {\n    constructor(floor, level) {\n        super(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1));\n        this.floor = floor;\n        this.level = level;\n    }\n    getPathInStatistics() {\n        return ['Tower', this.floor + \"\", this.level + \"\", 'times_visited'];\n    }\n}\n;\n//base class for unlock thisects; they need the conditions as a list\nclass UnlockClass {\n    //conditons = [],\n    constructor(conditions, contitionLogic) {\n        this.conditions = conditions;\n        this.unlocked = false;\n        this.conditionLogic = contitionLogic;\n    }\n    canUnlock() {\n        return this.conditionLogic.canUnlock(this.conditions);\n    }\n    //unlock type dicatates if you want to unlock(1) or lock(0) the current Unlock\n    //return true for a successfull unlock, false otherwise\n    doUnlock(unlock = true) {\n        if (unlock && !this.unlocked) {\n            if (this.canUnlock()) {\n                this.unlock();\n                return true;\n            }\n            else {\n                this.lock();\n            }\n        }\n        return false;\n    }\n    //unlock feature\n    unlock() {\n        this.unlocked = true;\n    }\n    //lock feature (needed for loading and losing in-game progress for whatever reason)\n    lock() {\n        this.unlocked = false;\n    }\n}\n;\nclass PageUnlockClass extends UnlockClass {\n    constructor(conditions, contitionLogic, buttonGroup, buttonNr) {\n        super(conditions, contitionLogic);\n        this.buttonGroup = buttonGroup;\n        this.buttonNr = buttonNr;\n    }\n    unlock() {\n        super.unlock();\n        this.buttonGroup.showButton(this.buttonNr);\n    }\n    lock() {\n        super.lock();\n        this.buttonGroup.hideButton(this.buttonNr);\n    }\n}\n;\nclass NewBuyerUnlockClass extends UnlockClass {\n    constructor(conditions, contitionLogic, buyer) {\n        super(conditions, contitionLogic);\n        this.buyer = buyer;\n    }\n    unlock() {\n        super.unlock();\n        _pages_store__WEBPACK_IMPORTED_MODULE_2__.StorePage.buyers[this.buyer.type].push(this.buyer);\n    }\n    lock() {\n        super.lock();\n        for (let i = 0; i < _pages_store__WEBPACK_IMPORTED_MODULE_2__.StorePage.buyers[this.buyer.type]; i++) {\n            if (_pages_store__WEBPACK_IMPORTED_MODULE_2__.StorePage.buyers[this.buyer.type][i].name == this.buyer.name) {\n                _pages_store__WEBPACK_IMPORTED_MODULE_2__.StorePage.buyers[this.buyer.type].splice(i, 1);\n            }\n        }\n    }\n}\nconst allThingsUnlockable = {\n    'creatures': [],\n    'weapons': [\n        new NewBuyerUnlockClass([new StorePageOUC('weapons', 'Knife', new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](35))], new AllUCL(), new _store__WEBPACK_IMPORTED_MODULE_4__.Buyer('weapons', 'Dagger')),\n        new NewBuyerUnlockClass([new StorePageOUC('weapons', 'Dagger', new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](35))], new AllUCL(), new _store__WEBPACK_IMPORTED_MODULE_4__.Buyer('weapons', 'Longsword'))\n    ],\n    'pages': [\n        new PageUnlockClass([new StorePageOUC('creatures', 'Human', new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5))], new AllUCL(), _game_body__WEBPACK_IMPORTED_MODULE_1__.GB.pageButtons, 1),\n        new PageUnlockClass([new PlayerArmyOUC(new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1), 'all', 'Attack')], new AllUCL(), _game_body__WEBPACK_IMPORTED_MODULE_1__.GB.pageButtons, 0),\n        new PageUnlockClass([new StorePageOUC('creatures', 'Human', new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](15))], new AllUCL(), _pages_store__WEBPACK_IMPORTED_MODULE_2__.StorePage.subpageButtons, 1)\n    ],\n    'towerFloors': [],\n    'towerLevels': [],\n};\nclass UnlockHandlerEntryClass {\n    constructor(conditionCode) {\n        this.unlocks = [];\n        this.index = 0;\n        this.conditionCode = conditionCode;\n    }\n    get type() {\n        return 'UnlockHandlerEntryClass';\n    }\n    doUnlock(unlockType = true) {\n        let goOn = true;\n        let unlocked = false;\n        while (this.index < this.unlocks.length && goOn) {\n            goOn = this.unlocks[this.index].doUnlock(unlockType);\n            if (goOn) {\n                this.index++;\n                unlocked = true;\n            }\n        }\n        return unlocked;\n    }\n    push(unlock) {\n        this.unlocks.push(unlock);\n    }\n    sort() {\n        this.unlocks.sort((a, b) => {\n            let condA, condB;\n            for (let cond of a.conditions) {\n                if (cond.conditionCode == this.conditionCode) {\n                    condA = cond;\n                    break;\n                }\n            }\n            for (let cond of b.conditions) {\n                if (cond.conditionCode == this.conditionCode) {\n                    condB = cond;\n                    break;\n                }\n            }\n            const res = condA.quantity.sub(condB.quantity);\n            return res.lt_tolerance(0, 0.00001) ? -1 : res.eq_tolerance(0, 0.00001) ? 0 : 1;\n        });\n    }\n    load(index) {\n        let i = 0;\n        for (i; i < index; i++) {\n            if (!this.unlocks[i].unlocked) {\n                this.unlocks[i].unlock();\n            }\n        }\n        for (i; i < this.unlocks.length; i++) {\n            if (this.unlocks[i].unlocked) {\n                this.unlocks[i].lock();\n            }\n        }\n        this.index = index;\n    }\n}\n;\nclass UnlockHandlerClass {\n    // type: string;\n    //a list of lists of all unlocks\n    constructor() {\n        this.unlocks = {};\n        //create each category by path in statistics + unlock level acronym and populate them with the appropriate unlocks\n        this.unlocks = {};\n        this.conditionCode = 0;\n        for (let list of Object.values(allThingsUnlockable)) {\n            for (let unlock of list) {\n                for (let cond of unlock.conditions) {\n                    let conditionCode = this.addElementToUnlocks(cond.getPathInStatistics(), cond.acronym, unlock);\n                    cond.conditionCode = conditionCode;\n                }\n            }\n        }\n        //store each category ascending by requirement\n        //TODO: Figure out sortUnlocks\n        //this.sortUnlocks(this.unlocks);\n    }\n    get nextConditionCode() {\n        this.conditionCode++;\n        return this.conditionCode - 1;\n    }\n    addElementToUnlocks(path, acronym, unlock) {\n        path.push(acronym);\n        const strPath = (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getPathFromArr)(path);\n        if (!this.unlocks[strPath]) {\n            this.unlocks[strPath] = new UnlockHandlerEntryClass(this.nextConditionCode);\n        }\n        //add the unlock to correct category\n        this.unlocks[strPath].push(unlock);\n        return this.unlocks[strPath].conditionCode;\n    }\n    //get an unlock element from this.unlocks\n    getUnlockFromUnlocks(path, acronym) {\n        path.push(acronym);\n        return (0,_functions__WEBPACK_IMPORTED_MODULE_5__.getObjFromPath)(path, this.unlocks);\n    }\n    doUnlock(path) {\n        for (let acronym of UnlockHandlerClass.acronyms) {\n            let elem = this.getUnlockFromUnlocks(path, acronym);\n            if (elem != undefined) {\n                return elem.doUnlock(true);\n            }\n        }\n    }\n    save() {\n        let saveText = String(Object.keys(this.unlocks).length);\n        for (let [key, val] of Object.entries(this.unlocks)) {\n            saveText += '/*/' + key + '/*/' + val.index;\n        }\n        return saveText;\n    }\n    load(saveText) {\n        const saveTextArr = saveText.split('/*/');\n        let i = 0;\n        let len = Number(saveTextArr[i]);\n        i++;\n        let obj = this.unlocks;\n        for (let ii = 0; ii < len; ii++) {\n            this.unlocks[saveTextArr[i]].load(Number(saveTextArr[i + 1]));\n            i += 2;\n        }\n    }\n}\nUnlockHandlerClass.acronyms = ['B', 'O'];\n;\nconst UH = new UnlockHandlerClass();\n\n\n//# sourceURL=webpack://my-webpack-project/./src/unlocks.ts?");

        /***/
      }),

/***/ "./src/variables.ts":
/*!**************************!*\
  !*** ./src/variables.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

        eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GM: () => (/* binding */ GM),\n/* harmony export */   Player: () => (/* binding */ Player),\n/* harmony export */   PlayerClass: () => (/* binding */ PlayerClass),\n/* harmony export */   localStorage: () => (/* binding */ localStorage)\n/* harmony export */ });\n/* harmony import */ var break_infinity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! break_infinity.js */ \"./node_modules/break_infinity.js/dist/break_infinity.esm.js\");\n/* harmony import */ var _army__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./army */ \"./src/army.ts\");\n/* harmony import */ var _base_classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base_classes */ \"./src/base_classes.ts\");\n/* harmony import */ var _game_body__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game_body */ \"./src/game_body.ts\");\n/* harmony import */ var _pages_army__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/army */ \"./src/pages/army.ts\");\n/* harmony import */ var _pages_boss_army_selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/boss/army_selection */ \"./src/pages/boss/army_selection.ts\");\n/* harmony import */ var _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pages/boss/fighting */ \"./src/pages/boss/fighting.ts\");\n/* harmony import */ var _pages_boss_result__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/boss/result */ \"./src/pages/boss/result.ts\");\n/* harmony import */ var _pages_settings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pages/settings */ \"./src/pages/settings.ts\");\n/* harmony import */ var _pages_store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pages/store */ \"./src/pages/store.ts\");\n/* harmony import */ var _pages_tower__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/tower */ \"./src/pages/tower.ts\");\n/* harmony import */ var _pages_tutorial__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/tutorial */ \"./src/pages/tutorial.ts\");\n/* harmony import */ var _statistics__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./statistics */ \"./src/statistics.ts\");\n/* harmony import */ var _unlocks__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./unlocks */ \"./src/unlocks.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst localStorage = window.localStorage;\nclass PlayerClass extends _base_classes__WEBPACK_IMPORTED_MODULE_2__.HashLike {\n    constructor() {\n        super(...arguments);\n        this.gold = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](25);\n        this.armies = [new _army__WEBPACK_IMPORTED_MODULE_1__.Army(), new _army__WEBPACK_IMPORTED_MODULE_1__.Army(), new _army__WEBPACK_IMPORTED_MODULE_1__.Army()];\n        this.inventory = {\n            creatures: {},\n            weapons: {}\n        };\n    }\n    save() {\n        //  save gold\n        let saveText = this.gold + \"/*/\";\n        //save inventory\n        saveText += Object.keys(this.inventory).length;\n        for (const c in this.inventory) {\n            const category = c;\n            saveText += \"/*/\" + category;\n            saveText += \"/*/\" + Object.keys(this.inventory[category]).length;\n            for (const item in this.inventory[category]) {\n                saveText += \"/*/\" + item + \"/*/\" + this.inventory[category][item];\n            }\n        }\n        //  save armies\n        saveText += \"/*/\" + this.armies.length;\n        for (let i = 0; i < this.armies.length; i++) {\n            saveText += \"/*/\" + this.armies[i].save();\n        }\n        return saveText;\n    }\n    load(saveText) {\n        //split and get ready for loading\n        const saveTextArr = saveText.split(\"/*/\");\n        let i = 0;\n        //load gold\n        this.gold = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveTextArr[i]);\n        i++;\n        //  load inventory\n        //reset inventory\n        this.inventory = { creatures: {}, weapons: {} };\n        let j = Number(saveTextArr[i]);\n        let k = 0;\n        i++;\n        while (j > 0) {\n            const category = saveTextArr[i];\n            i++;\n            k = Number(saveTextArr[i]);\n            i++;\n            this.inventory[category] = {};\n            while (k > 0) {\n                this.inventory[category][saveTextArr[i]] = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](saveTextArr[i + 1]);\n                i += 2;\n                k--;\n            }\n            j--;\n        }\n        //load armies\n        j = Number(saveTextArr[i]);\n        i++;\n        k = 0;\n        while (j > 0) {\n            i = this.armies[k].load(saveTextArr[i], i, k);\n            k++;\n            j--;\n        }\n    }\n}\nconst Player = new PlayerClass();\nclass GameManagerClass {\n    constructor() {\n        this.currentPage = \"StorePage\";\n        this.pages = {};\n        [_pages_tower__WEBPACK_IMPORTED_MODULE_10__.TowerPage, _pages_army__WEBPACK_IMPORTED_MODULE_4__.ArmyPage, _pages_store__WEBPACK_IMPORTED_MODULE_9__.StorePage, _pages_settings__WEBPACK_IMPORTED_MODULE_8__.SettingsPage, _pages_boss_army_selection__WEBPACK_IMPORTED_MODULE_5__.BossArmySelectionPage,\n            _pages_boss_fighting__WEBPACK_IMPORTED_MODULE_6__.BossFightingPage, _pages_boss_result__WEBPACK_IMPORTED_MODULE_7__.BossFightingResultPage, _pages_tutorial__WEBPACK_IMPORTED_MODULE_11__.TutorialPage].forEach((p) => { this.pages[p.name] = p; });\n        //hide all pages at startup\n        for (const page of Object.keys(this.pages)) {\n            this.pages[page].hidden = true;\n        }\n        this.canSave = true;\n        this.initializeEventListeners();\n    }\n    startSaveInterval() {\n        // this.saveInterval = setInterval(this.SaveToLocalStorage,1000);\n    }\n    stopSaveInterval() {\n        clearInterval(this.saveInterval);\n    }\n    startRenderInterval(page) {\n        this.renderInterval = setInterval(() => { this.pages[page].displayEveryTick(); }, 50);\n    }\n    stopRenderInterval() {\n        clearInterval(this.renderInterval);\n        this.renderInterval = undefined;\n    }\n    swapRenderPage(newPage) {\n        this.stopRenderInterval();\n        this.startRenderInterval(newPage);\n    }\n    initializeEventListeners() {\n        window.addEventListener(\"load\", () => {\n            this.openGame();\n            this.startSaveInterval();\n        });\n        //save game whenever you switch tabs in browser (close, refresh, go to new/other tab)\n        document.addEventListener(\"visibilitychange\", () => {\n            if (document.visibilityState === \"visible\") {\n                this.loadOfflineProgress(Date.now() - Number(localStorage.getItem(\"lastSavedTime\")));\n                this.startSaveInterval();\n            }\n            else {\n                if (localStorage.length != 0) {\n                    this.saveToLocalStorage();\n                }\n                this.stopSaveInterval();\n            }\n        });\n        //save the game before closing\n        window.addEventListener(\"beforeunload\", () => {\n            this.closeGame();\n        });\n    }\n    loadOfflineProgress(nrMiliseconds = 0) {\n        const nrSeconds = new break_infinity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](nrMiliseconds / 1000);\n        //calculate gold per second\n        const goldPerSecond = _pages_tower__WEBPACK_IMPORTED_MODULE_10__.TowerPage.Tower.getGoldPerSecond();\n        //handle gold\n        const totalGold = goldPerSecond.mul(nrSeconds);\n        Player.gold = Player.gold.add(totalGold);\n    }\n    //a function to save game to local storage\n    saveToLocalStorage() {\n        if (!this.canSave)\n            return;\n        localStorage.clear();\n        localStorage.setItem(\"Player\", Player.save());\n        localStorage.setItem(\"Statistics\", _statistics__WEBPACK_IMPORTED_MODULE_12__.allThingsStatistics.save());\n        localStorage.setItem(\"Unlocks\", _unlocks__WEBPACK_IMPORTED_MODULE_13__.UH.save());\n        Object.entries(this.pages).forEach(([key, page]) => { localStorage.setItem(key, page.save()); });\n        localStorage.setItem(\"currentPage\", this.currentPage);\n        localStorage.setItem(\"lastSavedTime\", Date.now() + \"\");\n    }\n    //a function to load game from local storage\n    loadFromLocalStorage() {\n        Player.load(localStorage.getItem(\"Player\"));\n        _statistics__WEBPACK_IMPORTED_MODULE_12__.allThingsStatistics.load(localStorage.getItem(\"Statistics\"));\n        _unlocks__WEBPACK_IMPORTED_MODULE_13__.UH.load(localStorage.getItem(\"Unlocks\"));\n        //load pages\n        Object.entries(this.pages).forEach(([key, page]) => { page.load(localStorage.getItem(key)); });\n        //load offline progress\n        //  shinaningans to get the current page to display correctly (CHANGE THIS?)\n        const a = localStorage.getItem(\"currentPage\");\n        if (a == \"TowerPage\") {\n            _game_body__WEBPACK_IMPORTED_MODULE_3__.GB.pageButtons.selected = 1;\n            this.currentPage = \"ArmyPage\";\n        }\n        else {\n            _game_body__WEBPACK_IMPORTED_MODULE_3__.GB.pageButtons.selected = 0;\n            this.currentPage = \"TowerPage\";\n        }\n        for (let i = 0; i < _game_body__WEBPACK_IMPORTED_MODULE_3__.GB.pageButtons.buttons.length; i++) {\n            if (_game_body__WEBPACK_IMPORTED_MODULE_3__.GB.pageButtons.buttons[i].getAttribute(\"page\") == a) {\n                _game_body__WEBPACK_IMPORTED_MODULE_3__.GB.pageButtons.buttonClick(i);\n            }\n        }\n        this.loadOfflineProgress(Date.now() - Number(localStorage.getItem(\"lastSavedTime\")));\n        return true;\n    }\n    openGame() {\n        if (localStorage.length != 0) {\n            this.loadFromLocalStorage();\n        }\n        else {\n            /*document.getElementById(\"OfflinePageContainer\").hidden = true;\n            //UNCOMMENT THIS\n            HidePages('SettingsPage');\n            this.pages[GM.currentPage].display();*/\n            this.saveToLocalStorage();\n            this.loadFromLocalStorage();\n        }\n    }\n    closeGame() {\n        // this.SaveToLocalStorage();\n    }\n    resetLocalStorage() {\n        this.stopSaveInterval();\n        localStorage.clear();\n        this.saveToLocalStorage();\n        this.loadFromLocalStorage();\n        this.startSaveInterval();\n    }\n    toggleCanSave() {\n        this.canSave = !this.canSave;\n    }\n    hidePages(toShow) {\n        if (toShow != this.currentPage) {\n            clearInterval(this.renderInterval);\n            this.pages[this.currentPage].hidden = true;\n            this.pages[toShow].hidden = false;\n            this.currentPage = toShow;\n            this.pages[toShow].display();\n        }\n    }\n}\nconst GM = new GameManagerClass();\n\n\n//# sourceURL=webpack://my-webpack-project/./src/variables.ts?");

        /***/
      })

    /******/
  });
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
      /******/
    }
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
      /******/
    };
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
    /******/
  }
/******/
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
      /******/
    };
    /******/
  })();
/******/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for (var key in definition) {
/******/ 				if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
          /******/
        }
        /******/
      }
      /******/
    };
    /******/
  })();
/******/
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
    /******/
  })();
/******/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
        /******/
      }
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
      /******/
    };
    /******/
  })();
/******/
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
  /******/
  /******/
})()
  ;